{"version":3,"sources":["controllers/Utils.js","models/BaseElement.js","models/Theme.js","models/Subtheme.js","models/Story.js","models/Vertical.js","models/Objective.js","models/PainPoint.js","models/Feature.js","models/Query.js","controllers/NavControls.js","components/NavBar.js","controllers/CardControls.js","components/Card.js","components/Cards.js","controllers/WindowControls.js","components/SubthemeTree.js","components/UserStoryTable.js","components/DocList.js","components/Window.js","controllers/SearchControls.js","components/Search.js","components/CookBook.js","components/Explorer.js","controllers/AppController.js","App.js","serviceWorker.js","index.js"],"names":["Utils","items","unique","forEach","i","Object","keys","replace","c","r","Math","random","toString","array","value","index","indexOf","splice","undefined","test","field","sort","x","y","model","config","sorting","key","isEmpty","indexX","indexY","object","str","length","hash","this","abs","parseInt","val","charCodeAt","toLowerCase","caps","labelValue","colorMap","colors","bank","colorBank","stringToIndex","join","BaseElement","type","app","item","typekey","data","element","elements","titlekey","idFields","tagline","filters","Query","filter","id","label","state","map","item_id","createObject","getItemFromIndex","standardFilters","loadListData","valueFields","fields","heading","preview","cardPreview","infoBox","blocks","buildBlocks","title","titleLabel","Theme","push","content","getLinkedObjects","subthemes","loadSubthemeTree","buttonNumber","buttonLabel","tree","Subtheme","Story","Vertical","Objective","PainPoint","Feature","Timeframe","done","version","date","timeframe","timeframeColor","getLabelColor","icons","icon","url","parameters","query","limit","selector","buildFilter","masterData","loadTableKey","objects","queryItems","mapItems","filteredObjects","all_mapped_ids","mapped_ids","loadMappedIds","concat","dedupe","loadObjectsFromIds","table","criteria","appFilters","Array","isArray","newFilters","ids","console","log","results","determineFieldToFilter","candidates","intersection","includes","max","apply","NavControls","getUIState","isOpen","setUIState","loadCardTypes","cardViews","currentCardView","cards","getUIConfig","loadProducts","products","loadUserTypes","userTypes","tablesWithUsers","usertype","user_types","j","k","sortFieldArray","currentUserType","getUserType","setUserType","deleteFilter","setFilter","getFilter","loadVerticals","verticals","badges","reverse","currentVertical","getVertical","setVertical","selection","loadFilters","multiSelectFilters","currentFilter","currentKey","ui","setUIConfig","getCardView","setCardView","multiSelect","a","functions","labelBusinessObjectives","options","loadBusinessObjectives","selected","selectedBusinessObjectives","onSelect","onSelectBusinessObjective","bind","onDeselect","onDeselectBusinessObjective","labelPainPoints","loadPainPoints","selectedPainPoints","onSelectPainPoint","onDeselectPainPoint","count","loadAllBusinessObjectives","removeFromArray","loadCardGroups","NavBar","Pane","display","padding","background","flex","alignItems","Heading","className","fontWeight","fontSize","color","alt","src","TabNavigation","product","Tab","is","isSelected","ready","Button","iconAfter","onClick","props","Tooltip","position","Position","RIGHT","IconButton","float","marginRight","onClickCookbook","iconSize","Combobox","width","selectedItem","onChange","itemToString","SelectMenu","isMultiSelect","hasFilter","Component","CardControls","views","currentView","view","s","counter","prepareHeading","match","sides","split","headingvariable","variable","headingdefaultvariable","lowerCase","cardView","loadCardView","cardKey","groupings","output","elementKey","groupkey","card","grouping","loadCardGrouping","groupingField","loadGroupingFieldFromKey","group","groupingKey","loadCardGroupings","selectedLabelKey","cardType","cardLabelField","fieldtoHighlight","highlight","loadCards","loadCardData","loadCard","Cards","cardData","cardNotInGroup","floor","bottom","elevation","borderRadius","onClickCard","Text","buildHeading","frontandback","hasLabel","getCardLabel","Badge","previewData","Tree","open","branch","openTree","Pill","margin","e","stopPropagation","setState","guid","Status","pastStatus","futureStatus","isSolid","loadCardsHeading","groups","columnCount","columnCountInt","ratio","cardWidth","Single","columns","groupfield","paddingRight","cursor","debug","borderTop","height","currentCardLabel","loadCardLabels","labelCards","currentCardGrouping","groupCards","WindowControls","isClosed","loadWindowContent","UserStoryTable","stories","Table","Head","TextHeaderCell","flexBasis","flexShrink","flexGrow","align","Body","border","story","Row","isSelectable","openItemInBox","TextCell","DocList","Window","block","JSON","stringify","buildBlock","Dialog","isShown","fontFamily","onCloseComplete","hasFooter","hasHeader","preventBodyScrolling","SearchControls","searchResults","loadAllItems","filterResults","fieldkey","searchfield","segment","badge","filtered","regex","RegExp","selectSearchResult","event","target","onMoveDown","search","onMoveUp","Search","resultCount","seq","SearchInput","autoFocus","placeholder","SearchResult","text","part","Loading","NoResults","CornerBox","recipes","cookbook","marginTop","overflow","borderColor","loadConfigs","size","marginBottom","description","SideSheet","LEFT","cookbookisOpen","cookbookisClosed","Explorer","AppController","fetch","then","response","json","idIndex","scratch","found","newfilters","configs","keyEvent","metaKey","ctrlKey","code","onEnter","onUp","onDown","searchState","App","loadMasterData","inputScratch","updateWindowDimensions","window","addEventListener","document","onKeyDown","removeEventListener","innerWidth","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"ioLAEqBA,E,oGAELC,GACZ,IAAIC,EAAS,GAMb,OALAD,EAAME,SAAQ,SAAUC,GACjBF,EAAOE,KACVF,EAAOE,IAAK,MAGTC,OAAOC,KAAKJ,K,6BAInB,MAAO,uCAAuCK,QAAQ,SAAS,SAAUC,GACvE,IAAIC,EAAoB,GAAhBC,KAAKC,SAAgB,EAC7B,OAD0C,MAANH,EAAYC,EAAS,EAAJA,GAC5CG,SAAS,S,sCAICC,EAAOC,GAC5B,IAAMC,EAAQF,EAAMG,QAAQF,GAI5B,OAHIC,GAAS,GACXF,EAAMI,OAAOF,EAAO,GAEfF,I,8BAIMC,GAEb,YAAcI,IAAVJ,IACU,OAAVA,IACU,KAAVA,IACAA,IAAU,KACVA,IAAU,MACV,QAAQK,KAAKL,S,qCAIGD,EAAOO,GAa3B,OAZAP,EAAQA,EAAMQ,MAAK,SAAUC,EAAGC,GAC9B,IAAIC,EAAQC,EAAOC,QAAQN,GACvBO,EAAM,EACV,GAAI3B,EAAM4B,QAAQJ,GAAQ,OAAQ,EAClC,IAAIK,EAASL,EAAMR,QAAQM,GACvBQ,EAASN,EAAMR,QAAQO,GAC3B,OAAgB,IAAZM,IAA6B,IAAZC,EAAuB,GACxCD,EAASC,IAAQH,EAAO,GACxBE,EAASC,IAAQH,GAAQ,GACtBA,Q,sCAMYI,EAAQJ,GAE7B,OAAOI,I,oCAIYC,EAAKC,GAExB,IAAIC,EAAOC,KAAKD,KAAKF,GACrB,OAAOtB,KAAK0B,IAAIC,SAASH,GAAQD,EAAS,K,2BAGhCK,GACV,IAAclC,EAAV8B,EAAO,EACX,GAAmB,IAAfI,EAAIL,OAAc,OAAOC,EAC7B,IAAK9B,EAAI,EAAGA,EAAIkC,EAAIL,OAAQ7B,IAE1B8B,GAASA,GAAQ,GAAKA,EADhBI,EAAIC,WAAWnC,GAErB8B,GAAQ,EAEV,OAAOA,I,gCAIQF,GACfA,EAAMA,EAAIQ,cACV,IAAIC,EAAOhB,EAAOgB,KAClB,IAAK,IAAIrC,KAAKqB,EAAOgB,KAAMT,EAAMA,EAAIzB,QAAQH,EAAEqC,EAAKrC,IACpD,OAAO4B,I,oCAIYU,GACnB,IAAIC,EAAWlB,EAAOmB,OACtB,QAA6B1B,IAAzByB,EAASD,GAA2B,CACtC,IAAIG,EAAOpB,EAAOqB,UACd1C,EAAIJ,EAAM+C,cAAcL,EAAaG,EAAKG,KAAK,IAAKH,EAAKZ,QAC7D,OAAOY,EAAKzC,GAEd,OAAOuC,EAASD,O,KC3FCO,E,WAEjB,WAAYC,EAAKC,EAAIC,GACpB,oBACGjB,KAAKkB,QAAUH,EACff,KAAKmB,KAAOF,EACZjB,KAAKgB,IAAMA,EACXhB,KAAKoB,QAAU9B,EAAO+B,SAASrB,KAAKkB,SACpClB,KAAKsB,SAAWtB,KAAKoB,QAAQnC,MAC7Be,KAAKuB,SAAWvB,KAAKoB,QAAQG,SAC7BvB,KAAKwB,QAAUxB,KAAKoB,QAAQI,Q,mDAGzBC,GAAW,OAAOC,EAAMC,OAAOF,EAASzB,Q,qCAK3C,MAAO,CACH4B,GAAI5B,KAAKmB,KAAKS,GACdb,KAAMf,KAAKkB,QACXW,MAAO7B,KAAKmB,KAAKnB,KAAKsB,UACtBH,KAAMnB,KAAKmB,Q,wCAKf,OAAOnB,KAAKgB,IAAIc,MAAMxC,OAAOmC,U,uCAIhBV,GAChB,IAAD,OACI,YAAuChC,IAAnCiB,KAAKmB,KAAKnB,KAAKuB,SAASR,IAA6B,GAClDf,KAAKmB,KAAKnB,KAAKuB,SAASR,IAAOgB,KAAI,SAACC,EAAS/D,GAChD,IAAI2B,EAAS8B,EAAMO,aAAalB,EAAK,EAAKC,IAAIkB,iBAAiBF,GAAU,EAAKhB,KAC9E,OAAIpB,EAAO+B,OAAO,EAAKQ,oBAChBvC,EAAOwC,kBACfT,QAAO,SAAA1D,GAAC,OAAKA,O,qCAGLgB,GAEX,YAA2CF,IAAvCiB,KAAKmB,KAAKnB,KAAKqC,YAAYpD,IAA8B,GACtDe,KAAKmB,KAAKnB,KAAKqC,YAAYpD,IAAQ8C,KAAI,SAACpD,EAAOV,GAElD,OAAOU,KACRgD,QAAO,SAAA1D,GAAC,OAAKA,O,qCAKhB,MAAO,CACH2D,GAAI5B,KAAKmB,KAAKS,GACdU,OAAQtC,KAAKmB,KACbJ,KAAMf,KAAKkB,QACXqB,QAASvC,KAAKmB,KAAK7B,EAAO+B,SAASrB,KAAKkB,SAASjC,OACjDuD,QAASxC,KAAKyC,cACdC,QAAS1C,KAAK0C,a,gCAOlB,IAAIC,EAAS3C,KAAK4C,cAElB,MAAO,CACH7B,KAAMf,KAAKkB,QACX2B,MAAO7C,KAAKmB,KAAKnB,KAAKsB,UACtBwB,WAAY9C,KAAKwB,QACjBmB,OAAQA,K,oCAMZ,OAAO,S,KChFMI,E,YAEjB,WAAY9B,EAAMD,GAAM,qEACd,QAASA,EAAKC,I,2EAKpB,IAAI0B,EAAS,GAIb,OAHAA,EAAOK,KAAK,CAAEjC,KAAM,YAAakC,QAASjD,KAAKkD,iBAAiB,cAChEP,EAAOK,KAAK,CAAEjC,KAAM,UAAWkC,QAASjD,KAAKkD,iBAAiB,WAC9DP,EAAOK,KAAK,CAAEjC,KAAM,WAAYkC,QAASjD,KAAKkD,iBAAiB,aACxDP,I,oCAMP,IAAIQ,EAAYnD,KAAKoD,mBACjBZ,EAAU,CACdA,KAAe,QAIf,OAHAA,EAAQa,aAAeF,EAAUrD,OACjC0C,EAAQc,YAAc,YAAoC,IAArBH,EAAUrD,OAAgB,GAAK,KACpE0C,EAAQe,KAAKJ,EACNX,I,yCAOP,OADWxC,KAAKkD,iBAAiB,gB,GA9BNpC,GCAd0C,E,YAGjB,WAAYvC,EAAMD,GAAM,qEACd,WAAYA,EAAKC,I,2EAMvB,MAAO,O,GAVuBH,GCCjB2C,E,YAEjB,WAAYxC,EAAMD,GAAM,qEACd,QAASA,EAAKC,I,2EAMpB,MAAO,O,GAToBH,GCDd4C,E,YAGjB,WAAYzC,EAAMD,GAAM,qEACd,WAAYA,EAAKC,I,uEAOvB,MAAO,CACHF,KAAMf,KAAKkB,QACX2B,MAAO7C,KAAKmB,KAAKnB,KAAKsB,UACtBwB,WAAY9C,KAAKwB,QACjBmB,OANS,Q,GATiB7B,GCAjB6C,E,YAGjB,WAAY1C,EAAMD,GAAM,qEACd,YAAaA,EAAKC,I,2EAKxB,MAAO,O,GATwBH,GCAlB8C,E,YAGjB,WAAY3C,EAAMD,GAAM,qEACd,YAAaA,EAAKC,I,2EAMxB,MADa,O,GATkBH,GCClB+C,E,YAGjB,WAAY5C,EAAMD,GAAM,qEACd,UAAWA,EAAKC,I,2EAKtB,MAAO,K,oCAIP,IAAIuB,EAAU,CACdA,KAAe,UACf,OAAI3E,EAAM4B,QAAQO,KAAKmB,KAAK2C,WAAmB,MACrB,SAAtB9D,KAAKmB,KAAK2C,WACVtB,EAAQuB,MAAO,EACfvB,EAAQX,MAAQ,WAChBW,EAAQwB,QAAU,MAClBxB,EAAQyB,KAAO,eAGfzB,EAAQuB,MAAO,EACfvB,EAAQX,MAAQ,cAChBW,EAAQ0B,UAAYlE,KAAKmB,KAAK2C,UAC9BtB,EAAQ2B,eAAiBtG,EAAMuG,cAAc5B,EAAQ0B,YAEzD1B,EAAQ6B,MAAQ,CAAC,CACbxC,MAAO,MACPyC,KAAM,MACNC,IAAK,yDAEF/B,O,GAjCsB1B,GCQhBY,E,WAEjB,WAAY8C,GAAa,wBAEfxD,EAAqCwD,EAArCxD,IAAKyD,EAAgCD,EAAhCC,MAAO1C,EAAyByC,EAAzBzC,IAAK2C,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SAC9B3E,KAAKgB,IAAMA,EACX,IAAIW,EAAS3B,KAAK4E,YAAY5D,EAAK0D,EAAOC,GACtC7G,EAAQkD,EAAIc,MAAM+C,WAAW7E,KAAK8E,aAAaL,IAC/CM,EAAU/E,KAAKgF,WAAWP,EAAO3G,EAAO6D,GAExC3B,KAAK+E,aADGhG,IAARgD,EACegD,EAEA/E,KAAKiF,SAASlD,EAAKgD,EAASpD,G,uDAIxCZ,EAAMjD,EAAO6D,GAAS,IAAD,OAC5B,QAAa5C,IAATgC,EAAoB,MAAO,GAC/B,IAAImE,EAAkB,GAKtB,OAJApH,EAAME,SAAQ,SAAAiD,GACV,IAAIrB,EAAS8B,EAAMO,aAAalB,EAAME,EAAM,EAAKD,KAC5CpB,EAAO+B,OAAOA,IAASuD,EAAgBlC,KAAKpD,MAE9CsF,I,+BAIFnD,EAAKgD,EAASpD,GAAS,IAAD,OAEvBwD,EAAiB,GAMrB,OALAJ,EAAQ/G,SAAQ,SAAA4B,GACZ,IAAIwF,EAAa,EAAKC,cAActD,EAAInC,GACxCuF,EAAiBA,EAAeG,OAAOF,MAE3CD,EAAiBtH,EAAM0H,OAAOJ,GACvBnF,KAAKwF,mBAAmBL,EAAgBpD,EAAKJ,K,mCAI3CnC,GACT,YAA6BT,IAAzBO,EAAO+B,SAAS7B,GAA2B,KAChCF,EAAO+B,SAAS7B,GAAKiG,Q,kCAK5BzE,EAAK0D,EAAOC,GAEpB,QAAiB5F,IAAb4F,EACA,IAAK,IAAI1G,KAAK0G,EACV,MAAO,CAAC,CAAE1F,MAAOhB,EAAGyH,SAAU,CAACf,EAAS1G,IAAK8C,KAAM,mBACtD,GAAc,OAAV2D,EAAgB,OAAO,KAChC,IAAIiB,EAAa3E,EAAIc,MAAMxC,OAAOmC,QAElC,IAAK5D,EAAM4B,QAAQiF,GAAQ,CAClBkB,MAAMC,QAAQnB,KAAQA,EAAQ,IACnC,IAAIoB,EAAa,GACjB,IAAK,IAAI7H,KAAK0H,EACNjB,EAAM7F,QAAQ8G,EAAW1H,GAAGgB,QAAU,GAAG6G,EAAW9C,KAAK2C,EAAW1H,IACxEyG,EAAM5E,OAAS,IAAG6F,EAAaG,GAKvC,OAHIjI,EAAM4B,QAAQkF,GAGXgB,I,yCAIQI,EAAKhF,EAAMY,GAC1BoE,EAAMlI,EAAM0H,OAAOQ,GACnB,IAAIhB,EAAU,GACd,IAAK,IAAI9G,KAAK8H,EAAK,CACf,IAAInE,EAAKmE,EAAI9H,GACTgD,EAAOjB,KAAKgB,IAAIkB,iBAAiBN,GACjChC,EAAS8B,EAAMO,aAAalB,EAAME,EAAMjB,KAAKgB,KAClC,OAAXpB,IACAA,EAAO+B,OAAOA,IAClBoD,EAAQ/B,KAAKpD,IAEjB,OAAOmF,I,wCAmBP,OAAO/E,KAAK+E,U,oCAsCFhD,EAAKnC,GACf,GAAImC,IAAQnC,EAAOsB,QAAS,MAAO,CAACtB,EAAOuB,KAAKS,IAChD,IACIpC,EADWF,EAAO+B,SAASzB,EAAOsB,SAASK,SAC5BQ,GACfgE,EAAMnG,EAAOuB,KAAK3B,GACtB,YAAYT,IAARgH,EAA0B,GACvBA,K,oCA1DShF,EAAME,EAAMD,GAE5B,MAAa,UAATD,EAAyB,IAAIgC,EAAM9B,EAAMD,GAChC,aAATD,EAA4B,IAAIyC,EAASvC,EAAMD,GACtC,UAATD,EAAyB,IAAI0C,EAAMxC,EAAMD,GAChC,aAATD,EAA4B,IAAI2C,EAASzC,EAAMD,GACtC,cAATD,EAA6B,IAAI4C,EAAU1C,EAAMD,GACxC,YAATD,EAA2B,IAAI8C,EAAQ5C,EAAMD,GACpC,cAATD,EAA6B,IAAI6C,EAAU3C,EAAMD,IACrDgF,QAAQC,IAAI,oCAAsClF,GAC3C,Q,6BAQGU,EAAS7B,GAAS,IAAD,OAC3B,GAAI/B,EAAM4B,QAAQgC,GAAU,OAAO,EACnC,IAAIyE,EAAUzE,EAAQM,KAAI,SAAAJ,GACtB,IAAKiE,MAAMC,QAAQlE,EAAO+D,UAAW,OAAO,EAC5C,GAA6B,IAAzB/D,EAAO+D,SAAS5F,OAAY,OAAO,EACvC,IAAIb,EAAQ,EAAKkH,uBAAuBvG,EAAOsB,QAASS,EAAO1C,OAC/D,GAAIpB,EAAM4B,QAAQR,GAAQ,OAAO,EACjC,IAAImH,EAAaxG,EAAOuB,KAAKlC,GAC7B,GAAIpB,EAAM4B,QAAQ2G,GAAa,OAAO,EACjCR,MAAMC,QAAQO,KAAaA,EAAa,CAACA,IAC9C,IAAIC,EAAeD,EAAWzE,QAAO,SAAAhD,GAAK,OAAIgD,EAAO+D,SAASY,SAAS3H,MACvE,MAAoB,cAAhBgD,EAAOZ,MAAgD,IAAxBsF,EAAavG,OAAqB,EACjD,cAAhB6B,EAAOZ,MAAwBsF,EAAavG,OAAS,EAAU,EAC5D,KAGX,OADUvB,KAAKgI,IAAIC,MAAM,KAAMN,GACrB,I,6CAIgBnF,EAAMvB,GAChC,GAAS,OAANA,EAAY,OAAOA,EACtB,IAAI4B,EAAU9B,EAAO+B,SAASN,GAC9B,OAAKlD,EAAM4B,QAAQ2B,EAAQiB,cAClBxE,EAAM4B,QAAQ2B,EAAQiB,YAAY7C,IAGtC3B,EAAM4B,QAAQ2B,EAAQG,WAClB1D,EAAM4B,QAAQ2B,EAAQG,SAAS/B,IAGjC,KAFQ4B,EAAQG,SAAS/B,GAJjB4B,EAAQiB,YAAY7C,O,KCrItBiH,E,4GA0PKzF,GAClB,OAAOA,EAAI0F,WAAW,YAAYC,S,wCAIlC3G,KAAK4G,WAAW,WAAY,CAAED,QAAQ,M,yCAKtC3G,KAAK4G,WAAW,WAAY,CAAED,QAAQ,Q,KApQzBF,EAEVI,cAAgB,WAEnB,OAAOvH,EAAOwH,WAJDL,EAOVM,gBAAkB,SAAU/F,GAE/B,IAAIgG,EAAQhG,EAAIiG,YAAY,SAC5B,IAAI,IAAIhJ,KAAKqB,EAAOwH,UACpB,CACI,GAAGxH,EAAOwH,UAAU7I,GAAGuB,MAAMwH,EAGzB,MADgB,CAACnF,MAAQvC,EAAOwH,UAAU7I,GAAG4D,MAAOlD,MAAQqI,GAIpE,MAAO,CAACnF,MAAQ,SAlBH4E,EAqBVS,aAAe,WAElB,OAAO5H,EAAO6H,UAvBDV,EA4BVW,cAAgB,SAAUpG,GAE7B,IAAIqG,EAAY,GACZC,EAAkB,CAAC,QAAQ,QAAQ,WAHL,WAI1BrJ,GAEJ,IAAIuB,EAAM8H,EAAgBrJ,GACtBgB,EAAQK,EAAO+B,SAAS7B,GAAK6C,YAAYkF,SAEzCC,EADQ,IAAI9F,EAAM,CAAEV,IAAKA,EAAKyD,MAAOjF,EAAKkF,MAAO,OAC9BK,QAAQhD,KAAI,SAAAd,GAAI,OAAIA,EAAKE,KAAKlC,MACrD,IAAI,IAAIwI,KAAKD,EACb,CACI,IAAIzG,EAAOyG,EAAWC,GAEtB,IAAI,IAAIC,KADJ9B,MAAMC,QAAQ9E,KAAOA,EAAO,CAACA,IACpBA,EAAMsG,EAAUrE,KAAKjC,EAAK2G,MAV/C,IAAI,IAAIzJ,KAAKqJ,EACZ,EADOrJ,GAgBR,OAHAoJ,EAAYxJ,EAAM0H,OAAO8B,GACzBA,EAAYxJ,EAAM8J,eAAeN,EAAU,YAC3CA,EAAY,CAAC,6BAAmB/B,OAAO+B,IA/C1BZ,EAmDVmB,gBAAkB,SAAU5G,GAC/B,IAAID,EAAQf,KAAK6H,YAAY7G,GAC7B,YAAUjC,IAAPgC,EAAyB,4BACrBA,GAtDM0F,EAyDVqB,YAAc,SAAU3H,GAE3B,GADAH,KAAK+H,aAAa,YACN,8BAAR5H,EAA2B,OAAO,EACtCH,KAAKgI,UAAU,WAAY,CAAC7H,GAAM,cA5DrBsG,EA+DVoB,YAAc,SAAU7G,GAE3B,OADiBA,EAAIiH,UAAU,YACbvC,SAAS,IAjEde,EAyEVyB,cAAgB,SAAUlH,GAE7B,IACImH,EADgB,IAAIzG,EAAM,CAAEV,IAAKA,EAAKyD,MAAO,QAAS1C,IAAK,aACjCgD,QAAQhD,KAAI,SAAAd,GAAI,MAC1C,CAAE,MAASA,EAAKE,KAAKS,GAAI,MAASX,EAAKE,KAAKuC,SAAU0E,OAAQ,CAAC,gBAGnE,OADAD,EAAUnF,KAAK,CAAEnB,MAAO,2BAAkBlD,MAAO,OAC1CwJ,EAAUE,WAhFJ5B,EAmFV6B,gBAAkB,SAAUtH,GAE/B,IAAIY,EAAK6E,EAAY8B,YAAYvH,GAC7B+D,EAAU0B,EAAYyB,cAAclH,GACxC,IAAK,IAAI/C,KAAK8G,EAAS,GAAInD,IAAOmD,EAAQ9G,GAAGU,MAAO,OAAOoG,EAAQ9G,GACnE,OAAO8G,EAAQ,IAxFF0B,EA2FV+B,YAAc,SAAUC,GAG3B,GADAzI,KAAK+H,aAAa,YACI,OAAlBU,EAAU9J,MAAc,OAAO,EACnCqB,KAAKgI,UAAU,WAAY,CAACS,EAAU9J,OAAQ,cA/FjC8H,EAkGV8B,YAAc,SAAUvH,GAE3B,OADiBA,EAAIiH,UAAU,YACbvC,SAAS,IApGde,EAuGViC,YAAc,WACjB,OAAOpJ,EAAOqJ,oBAxGDlC,EA4GVmC,cAAgB,SAAU5H,GAE7B,IAAIS,EAAUnC,EAAOqJ,mBACjBE,EAAa7H,EAAIc,MAAMxC,OAAOwJ,GAAGnH,OACrC,IAAK,IAAI1D,KAAKwD,EAAS,GAAIoH,IAAepH,EAAQxD,GAAGuB,IAAK,OAAOiC,EAAQxD,GACzE,OAAOwD,EAAQ,IAjHFgF,EAoHVuB,UAAY,SAAU7H,GAEzB,IAAIsB,EAAUnC,EAAOqJ,mBACrB,IAAK,IAAI1K,KAAKwD,EAASzB,KAAK+H,aAAatG,EAAQxD,GAAGuB,KACpDQ,KAAK+I,YAAY,SAAU5I,EAAIX,MAxHlBiH,EA8HVuC,YAAc,SAAUhI,GAC3BA,EAAIiG,YAAY,UA/HHR,EAiIVwC,YAAc,SAAU9I,GAE3BH,KAAK+I,YAAY,QAAS5I,EAAIX,KAC9BQ,KAAK+I,YAAY,WAAY,OApIhBtC,EAwIVyC,YAAc,SAAUlI,EAAKxB,EAAK2J,GACrC,IAAIN,EAAa7H,EAAIc,MAAMxC,OAAOwJ,GAAGnH,OAGjCyH,EAAY,CACZvG,MAAO,sBACPhB,MAAO7B,KAAKqJ,wBAAwBrI,GACpCsI,QAAStJ,KAAKuJ,uBAAuBvI,GACrCwI,SAAUxJ,KAAKyJ,2BAA2BzI,GAC1C0I,SAAU1J,KAAK2J,0BAA0BC,KAAK5I,GAC9C6I,WAAY7J,KAAK8J,4BAA4BF,KAAK5I,IAatD,MAVmB,cAAf6H,IACAO,EAAY,CACRvG,MAAO,cACPhB,MAAO7B,KAAK+J,gBAAgB/I,GAC5BsI,QAAStJ,KAAKgK,eAAehJ,GAC7BwI,SAAUxJ,KAAKiK,mBAAmBjJ,GAClC0I,SAAU1J,KAAKkK,kBAAkBN,KAAK5I,GACtC6I,WAAY7J,KAAKmK,oBAAoBP,KAAK5I,KAG3CoI,EAAU5J,IA/JJiH,EAqKV4C,wBAA0B,SAAUrI,GAEvC,IAAIoJ,EAAQpK,KAAKyJ,2BAA2BzI,GAAKlB,OACjD,OAAc,IAAVsK,EAAoB,6BACjBA,EAAQ,uBAA0BA,EAAQ,EAAK,IAAM,KAzK/C3D,EA4KV4D,0BAA4B,SAAUrJ,GAEzC,OADqB,IAAIU,EAAM,CAAEV,IAAKA,EAAKyD,MAAO,cAC5BM,QAAQhD,KAAI,SAAAd,GAAI,MAClC,CAAE,MAASA,EAAKE,KAAKS,GAAI,MAASX,EAAKE,KAAKwC,UAAW5C,KAAM,iBA/KpD0F,EAkLV8C,uBAAyB,SAAUvI,GAEtC,OADqB,IAAIU,EAAM,CAAEV,IAAKA,EAAMyD,MAAO,QAAS1C,IAAK,YAAa2C,MAAM,CAAC,WAAW,cAC1EK,QAAQhD,KAAI,SAAAd,GAAI,MAClC,CAAE,MAASA,EAAKE,KAAKS,GAAI,MAASX,EAAKE,KAAKwC,UAAW5C,KAAM,iBArLpD0F,EAwLVgD,2BAA6B,SAAUzI,GAG1C,OADaA,EAAIiH,UAAU,aACbvC,UA3LDe,EA8LVkD,0BAA4B,SAAUlB,GAEzC,IAAI9G,EAAS3B,KAAKiI,UAAU,aAC5BtG,EAAO+D,SAAS1C,KAAKyF,EAAU9J,OAC/B,IAAI+G,EAAW7H,EAAM0H,OAAO5D,EAAO+D,UACnC1F,KAAKgI,UAAU,YAAatC,EAAU,cAnMzBe,EAsMVqD,4BAA8B,SAAUrB,GAC3C,IAAI9G,EAAS3B,KAAKiI,UAAU,aACxBvC,EAAW7H,EAAMyM,gBAAgB3I,EAAO+D,SAAU+C,EAAU9J,OAChEqB,KAAKgI,UAAU,YAAatC,EAAU,cAzMzBe,EAgNVsD,gBAAkB,SAAU/I,GAE/B,IAAIoJ,EAAQpK,KAAKiK,mBAAmBjJ,GAAKlB,OACzC,OAAc,IAAVsK,EAAoB,qBACjBA,EAAQ,eAAkBA,EAAQ,EAAK,IAAM,KApNvC3D,EAuNVuD,eAAiB,SAAUhJ,GAM9B,OAJqB,IAAIU,EAAM,CAAEV,IAAKA,EAAKyD,MAAO,QAAS1C,IAAK,YAAa2C,MAAO,CAAC,WAAW,cACvEK,QAAQhD,KAAI,SAAAd,GAAI,MACrC,CAAE,MAASA,EAAKE,KAAKS,GAAI,MAASX,EAAKE,KAAK,mBA3NnCsF,EA+NVwD,mBAAqB,SAAUjJ,GAGlC,OADaA,EAAIiH,UAAU,aACbvC,UAlODe,EAqOVyD,kBAAoB,SAAUzB,GAEjC,IAAI9G,EAAS3B,KAAKiI,UAAU,aAC5BtG,EAAO+D,SAAS1C,KAAKyF,EAAU9J,OAC/B,IAAI+G,EAAW7H,EAAM0H,OAAO5D,EAAO+D,UACnC1F,KAAKgI,UAAU,YAAatC,EAAU,cA1OzBe,EA6OV0D,oBAAsB,SAAU1B,GACnC,IAAI9G,EAAS3B,KAAKiI,UAAU,aACxBvC,EAAW7H,EAAMyM,gBAAgB3I,EAAO+D,SAAU+C,EAAU9J,OAChEqB,KAAKgI,UAAU,YAAatC,EAAU,cAhPzBe,EAoPV8D,eAAiB,WAEpB,OAAOjL,EAAOwH,W,ICtPD0D,E,iLAGb,OACI,oCACI,kBAACC,EAAA,EAAD,CAAMC,QAAQ,OAAOC,QAAS,GAAIC,WAAY,QAC1C,kBAACH,EAAA,EAAD,CAAMI,KAAM,EAAGC,WAAW,SAASJ,QAAQ,QACvC,kBAACK,EAAA,EAAD,CAASC,UAAU,YAAYC,WAAY,IAAKC,SAAS,MAAMC,MAAM,WACjE,yBAAKH,UAAU,OAAOI,IAAI,GAAGC,IAAK,mBADtC,YAEa,6BACT,4DAEJ,kBAACC,EAAA,EAAD,CAAeN,UAAU,cAAcG,MAAM,UACxC1E,EAAYS,eAAenF,KAAI,SAACwJ,EAAS3M,GAAV,OAC5B,kBAAC4M,EAAA,EAAD,CAAKhM,IAAK+L,EAAQ1J,MAAO4J,GAAG,SAAS7J,GAAI,OAAS2J,EAAQ1J,MAAO6J,WAAYH,EAAQI,OAChFJ,EAAQ1J,YAKzB,kBAAC4I,EAAA,EAAD,KACI,kBAACmB,EAAA,EAAD,CAAQC,UAAU,SAASC,QAAS9L,KAAK+L,MAAM/K,IAAI4F,WAAWgD,KAAK5J,KAAK+L,MAAM/K,IAAI,SAAU,CAAE2F,QAAQ,KAAtG,YAGR,kBAAC8D,EAAA,EAAD,CAAME,QAAS,GAAIK,UAAU,aAEzB,2BAAOA,UAAU,YAAW,+BACxB,wBAAIA,UAAU,UACV,6BACA,yCACA,iDACA,sCACA,wCACA,wBAAIA,UAAU,QAAd,mBAEJ,4BACI,4BACI,kBAACgB,EAAA,EAAD,CAAS/I,QAAQ,YAAYgJ,SAAUC,IAASC,OAC5C,kBAACC,EAAA,EAAD,CACIC,MAAM,OACNC,YAAY,MACZR,QAASrF,EAAY8F,gBAAgB3C,KAAK5J,KAAK+L,MAAM/K,KACrDsD,KAAK,WAAWkI,SAAU,OAGtC,4BACI,kBAACC,EAAA,EAAD,CACIJ,MAAM,OACNC,YAAY,MACZI,MAAO,IACPC,aAAclG,EAAYmB,gBAAgB5H,KAAK+L,MAAM/K,KACrDlD,MAAO2I,EAAYW,cAAcpH,KAAK+L,MAAM/K,KAC5C4L,SAAUnG,EAAYqB,YAAY8B,KAAK5J,KAAK+L,MAAM/K,QAG1D,4BACI,kBAACyL,EAAA,EAAD,CACIJ,MAAM,OACNC,YAAY,MACZI,MAAO,IACPC,aAAc,CAAE9K,MAAO4E,EAAY6B,gBAAgBtI,KAAK+L,MAAM/K,KAAKa,OACnE/D,MAAO2I,EAAYyB,cAAclI,KAAK+L,MAAM/K,KAC5C4L,SAAUnG,EAAY+B,YAAYoB,KAAK5J,KAAK+L,MAAM/K,KAClD6L,aAAc,SAAA5L,GAAI,OAAIA,EAAOA,EAAKY,MAAQ,OAGlD,4BACI,kBAAC4K,EAAA,EAAD,CACIJ,MAAM,OACNC,YAAY,MACZI,MAAO,IACPC,aAAc,CAAE9K,MAAO4E,EAAYmC,cAAc5I,KAAK+L,MAAM/K,KAAKa,OACjE/D,MAAO2I,EAAYiC,cACnBkE,SAAUnG,EAAYuB,UAAU4B,KAAK5J,KAAK+L,MAAM/K,KAChD6L,aAAc,SAAA5L,GAAI,OAAIA,EAAOA,EAAKY,MAAQ,OAIlD,wBAAImJ,UAAU,YACV,kBAAC8B,EAAA,EAAD,CACIR,YAAY,MACZD,MAAM,OACNU,eAAa,EACbC,WAAW,EACXnK,MAAO4D,EAAYyC,YAAYlJ,KAAK+L,MAAM/K,IAAK,SAC/CsI,QAAS7C,EAAYyC,YAAYlJ,KAAK+L,MAAM/K,IAAK,WACjDwI,SAAU/C,EAAYyC,YAAYlJ,KAAK+L,MAAM/K,IAAK,YAClD0I,SAAUjD,EAAYyC,YAAYlJ,KAAK+L,MAAM/K,IAAK,YAClD6I,WAAYpD,EAAYyC,YAAYlJ,KAAK+L,MAAM/K,IAAK,eAGpD,kBAAC4K,EAAA,EAAD,CACIU,YAAY,OAAO7F,EAAYyC,YAAYlJ,KAAK+L,MAAM/K,IAAK,YAGvE,4BAER,kBAACyL,EAAA,EAAD,CACgBJ,MAAM,QACNK,MAAO,IACPJ,YAAY,MACZK,aAAclG,EAAYM,gBAAgB/G,KAAK+L,MAAM/K,KACrDlD,MAAO2I,EAAYI,gBACnB+F,SAAUnG,EAAYwC,YAAYW,KAAK5J,KAAK+L,MAAM/K,KAClD6L,aAAc,SAAA5L,GAAI,OAAIA,EAAOA,EAAKY,MAAQ,gB,GAxG1CoL,a,yBCAfC,E,8GAsBOlM,EAAIgG,GAExB,IAAImG,EAAQ7N,EAAOwH,UACfsG,EAAcpM,EAAIc,MAAMxC,OAAOwJ,GAAG9B,MAElCqG,EAAOF,EAAM,GACjB,IAAK,IAAIlP,KAAKkP,EAAWC,IAAgBD,EAAMlP,GAAGuB,MAAK6N,EAAOF,EAAMlP,IAEpE,IAAIqP,EAAoB,IAAftG,EAAMlH,OAAc,IAAM,GAC/ByN,EAAUvG,EAAMlH,OAAQ,IAAKuN,EAAKE,QAAUD,EAIhD,MAAO,CACH/K,QAHU2K,EAAaM,eAAexM,EAAIqM,EAAK9K,QAAQ8K,GAIvDE,QAASA,K,qCAKKvM,EAAIuB,EAAQ8K,GAE9B,IAAI9K,EAAQkL,MAAM,SAAU,OAAOlL,EACnC,IAAImL,EAAQnL,EAAQoL,MAAM,SAEtBC,EAAkBP,EAAKO,gBAGvBC,EAFS7M,EAAIiH,UAAU2F,GAELlI,SAAS,GAG/B,OAFG7H,EAAM4B,QAAQoO,KAAWA,EAAYR,EAAKS,wBAErCJ,EAAM,GAAG7P,EAAMkQ,UAAUF,GAAUH,EAAM,K,kCAIlCzM,GAEfjB,KAAK4G,WAAW,UAAW,CAAED,QAAQ,EAAO5F,KAAME,EAAKF,KAAMa,GAAIX,EAAKW,O,mCAItDZ,GAEhB,IAAID,EAAOC,EAAIc,MAAMxC,OAAOwJ,GAAG9B,MAC/B,IAAI,IAAI/I,KAAKqB,EAAOwH,UAChB,GAAGxH,EAAOwH,UAAU7I,GAAGuB,MAAMuB,EAAM,OAAQzB,EAAOwH,UAAU7I,GAChE,OAAO,O,wCAGc+C,GAErB,IAAIgN,EAAWhO,KAAKiO,aAAajN,GACjC,GAAc,OAAXgN,EAAiB,OAAO,KAC3B,IAAIE,EAAUF,EAASxO,IACnB2O,EAAY7O,EAAO+B,SAAS6M,GAAS7L,YACrC+L,EAAS,CAAC,CAAEvM,MAAO,mBAASrC,IAAI,OACpC,IAAK,IAAIvB,KAAKkQ,EAAWC,EAAOpL,KAAK,CAAEnB,MAAOsM,EAAUlQ,GAAGuB,IAAIvB,IAC/D,OAAOmQ,I,uCAGapN,GACpB,OAAOA,EAAIiG,YAAY,c,+CAGKoH,EAAWC,GAEvC,OAAOhP,EAAO+B,SAASgN,GAAYhM,YAAYiM,K,0CAKxBtN,GAEvB,IAAIxB,EAAMwB,EAAIiG,YAAY,YACtBsH,EAAOvN,EAAIiG,YAAY,SACvB9G,EAAOb,EAAO+B,SAASkN,GAAMlM,YAAY7C,GAC7C,OAAG3B,EAAM4B,QAAQU,GAAa,CAAC0B,MAAM,mBAASlD,MAAM,MAC7C,CAACkD,MAAM1B,EAAIxB,MAAMa,K,uCAGJwB,GAEpB,IAAIxB,EAAMwB,EAAIiG,YAAY,SACtBsH,EAAOvN,EAAIiG,YAAY,SACvB9G,EAAOb,EAAO+B,SAASkN,GAAMlM,YAAY7C,GAC7C,OAAG3B,EAAM4B,QAAQU,GAAa,CAAC0B,MAAM,mBAASlD,MAAM,MAC7C,CAACkD,MAAM1B,EAAIxB,MAAMa,K,qCAGNwB,EAAIgG,GAEtB,IAAIwH,EAAWxO,KAAKyO,iBAAiBzN,GACrC,GAAc,OAAXwN,EAAiB,MAAO,CAAC,MAC5B,IAAIlM,EAAS,GACb,IAAI,IAAIrE,KAAM+I,EACd,CACI,IAAI0H,EAAgB1O,KAAK2O,yBAAyB3H,EAAM/I,GAAG8C,KAAKyN,GAC5D1Q,EAAQkJ,EAAM/I,GAAGqE,OAAOoM,QACjB3P,IAARjB,IACC8H,MAAMC,QAAQ/H,KAAQA,EAAQ,CAACA,IACnCwE,EAASA,EAAOgD,OAAOxH,IAI3B,OAFAwE,EAASzE,EAAM0H,OAAOjD,GACtBA,EAASzE,EAAM8J,eAAerF,EAAOkM,K,qCAInBxN,EAAIuN,EAAKK,GAE3B,GAAW,OAARA,EAAc,OAAO,EACxB,IAAIC,EAAc7N,EAAIc,MAAMxC,OAAOwJ,GAAG0F,SACtC,GAAkB,OAAdK,EAAoB,OAAO,EAC/B,IAAIH,EAAgBpP,EAAO+B,SAASkN,EAAKxN,MAAMsB,YAAYwM,GACvDvM,EAASiM,EAAKjM,OAAOoM,GAEzB,OADI9I,MAAMC,QAAQvD,KAASA,EAAS,CAACA,IAClCA,EAAOzD,QAAQ+P,GAAO,QAAzB,I,iCAGcnG,GAEdzI,KAAK+I,YAAY,WAAYN,EAAUjJ,O,qCAKrBwB,GAClB,OAAOhB,KAAK8O,kBAAkB9N,K,iCAEhByH,GACdzI,KAAK+I,YAAY,QAASN,EAAUjJ,O,+BAExBwB,GAEZ,OAAkC,OAA3BA,EAAIiG,YAAY,W,mCAGPjG,EAAIuN,GACpB,IAAIQ,EAAmB/N,EAAIc,MAAMxC,OAAOwJ,GAAGjH,MACvCmN,EAAWT,EAAKxN,KACpB,QAAgEhC,IAA5DO,EAAO+B,SAAS2N,GAAU3M,YAAY0M,GAAiC,OAAO,KAClF,IAAIE,EAAiB3P,EAAO+B,SAAS2N,GAAU3M,YAAY0M,GACvDxO,EAAagO,EAAKjM,OAAO2M,GAI7B,OAFGrJ,MAAMC,QAAQtF,KAAaA,EAAaA,EAAWM,KAAK,OAEpD,CAAEgB,MAAOtB,EAAY4K,MAAOtN,EAAMuG,cAAc7D,M,mCAIvCU,GAEhB,IAAIiO,EAAmB5P,EAAO+B,SAASJ,EAAKF,MAAMoO,UAClD,OAAGtR,EAAM4B,QAAQyP,GAA0B,CAAC3M,QAAQtB,EAAKsB,SAClD,CAACA,QAAQtB,EAAKsB,QAAQ4M,UAAUlO,EAAKqB,OAAO4M,Q,KA/KtChC,EAEVkC,UAAY,SAAUpO,GAEzB,IACIe,EAAMf,EAAIc,MAAMxC,OAAOwJ,GAAG9B,MAK9B,OAHe,IAAItF,EAAM,CAACV,IAAIA,EAAIyD,MAHtB,QAGkC1C,IAAIA,IAE7BmD,kBACRnD,KAAI,SAAAd,GAAU,OAAOA,EAAKoO,mBAV1BnC,EAeVoC,SAAW,SAAUxN,GAExB,MAAO,I,IChBMyN,E,iLAGb,IAAItO,EAAOjB,KAAK+L,MAAMyD,SAEtB,GAAItC,EAAauC,eAAezP,KAAK+L,MAAM/K,IAAKhB,KAAK+L,MAAMyD,SAAUxP,KAAK+L,MAAM6C,OAAQ,OAAO,KAK/F,IAFA,IAAIrI,EAAM,EAAIhI,KAAKmR,MAAsB,GAAhBnR,KAAKC,UAC1BmR,EAAS,GACJ1R,EAAI,EAAGA,GAAKsI,EAAKtI,IACtB0R,EAAO3M,KAAK,qCAGhB,OAAQ,kBAACyH,EAAA,EAAD,CACJmF,UAAW,EACXlD,MAAO1M,KAAK+L,MAAMW,MAClB9B,WAAW,OACXiF,aAAc,GACd7E,UAAU,OACVc,QAASoB,EAAa4C,YAAYlG,KAAK5J,KAAK+L,MAAM/K,IAAKhB,KAAK+L,MAAMyD,WAEjExP,KAAK6B,MAAM7B,KAAK+L,MAAMyD,UACvB,kBAACO,EAAA,EAAD,CAAM/E,UAAU,eAAc,yBAAKI,IAAI,GAAGC,IAAK,SAAWpK,EAAKF,KAAO,SAAWf,KAAKuC,QAAQtB,IAE7FjB,KAAKyC,YAAYzC,KAAK+L,MAAM/K,IAAKhB,KAAK+L,MAAMyD,SAAShN,Y,8BAItDvB,GACJ,IAAIrB,EAASsN,EAAa8C,aAAa/O,GACvC,GAAIpD,EAAM4B,QAAQG,EAAOuP,WAAY,OAAOvP,EAAO2C,QACnD,IAAI0N,EAAerQ,EAAO2C,QAAQoL,MAAM/N,EAAOuP,WAC/C,OAAO,0BAAMnE,UAAU,0BAA0BiF,EAAa,GAAG,0BAAMjF,UAAU,wBAAwBpL,EAAOuP,WAAkBc,EAAa,M,4BAK7I1B,GACF,IAAKrB,EAAagD,SAASlQ,KAAK+L,MAAM/K,KAAM,OAAO,KACnD,IAAIa,EAAQqL,EAAaiD,aAAanQ,KAAK+L,MAAM/K,IAAKuN,GACtD,OAAI1Q,EAAM4B,QAAQoC,GAAe,KAC1B,kBAACuO,EAAA,EAAD,CAAOjF,MAAOtJ,EAAMsJ,OAAQtJ,EAAMA,S,kCAGjCb,EAAKqP,GACb,OAAIxS,EAAM4B,QAAQ4Q,GAAqB,KACnCxS,EAAM4B,QAAQ4Q,EAAYtP,MAAc,KACnB,SAArBsP,EAAYtP,KAAwB,yBAAKiK,UAAU,eAAc,kBAAC,EAAD,CAAMhK,IAAKA,EAAKG,KAAMkP,KAClE,WAArBA,EAAYtP,KAA0B,yBAAKiK,UAAU,eAAc,kBAAC,EAAD,CAAQhK,IAAKA,EAAKG,KAAMkP,UAA/F,M,GAjD2BpD,aA0D7BqD,E,YAEF,aAAe,IAAD,8BACV,+CACKxO,MAAQ,CAAEyO,MAAM,GAFX,E,sEAKJ,IAAD,OACDpP,EAAOnB,KAAK+L,MAAM5K,KACtB,OAAKnB,KAAK8B,MAAMyO,KACT,yBAAKvF,UAAU,QAAQ7J,EAAKoC,KAAKxB,KAAI,SAAAyO,GAAM,OAAI,EAAKA,OAAOA,OADrC,kBAAC5E,EAAA,EAAD,CAAQE,QAAS9L,KAAKyQ,SAAS7G,KAAK5J,OAAO,kBAAC0Q,EAAA,EAAD,CAAMhG,QAAQ,cAAciG,OAAQ,GAAIxP,EAAKkC,cAAxF,IAA8GlC,EAAKmC,e,+BAI3IsN,GACLA,EAAEC,kBACF7Q,KAAK8Q,SAAS,CAAEP,MAAM,M,6BAEnBC,GACH,OAAO,yBAAKhR,IAAK3B,EAAMkT,OAAQ/F,UAAU,UAAS,yBAAKI,IAAI,GAAGC,IAAK,SAAWmF,EAAOzP,KAAO,SAAWyP,EAAO3O,W,GAlBnGoL,aAuBb+D,E,iLAGE,IAAI7P,EAAOnB,KAAK+L,MAAM5K,KACtB,OAAU,OAAPA,EAAoB,MACR,IAAZA,EAAK4C,KAAoB/D,KAAKiR,WAAW9P,GACrCnB,KAAKkR,aAAa/P,K,iCAGlBA,GAEP,OAAO,yBAAK6J,UAAU,UAClB,kBAACoF,EAAA,EAAD,CAAO9D,YAAa,GAAI6E,SAAO,GAAEhQ,EAAKU,OAAc,6BACpD,kBAACuO,EAAA,EAAD,SAAUjP,EAAK6C,SAAgB,sCAAmB,kBAACoM,EAAA,EAAD,CAAO9D,YAAa,IAAKnL,EAAK8C,S,mCAI3E9C,GAET,OAAO,yBAAK6J,UAAU,UAClB,gDADG,IACyB,kBAACoF,EAAA,EAAD,CAAOe,SAAO,EAAChG,MAAOhK,EAAKgD,gBAAiBhD,EAAK+C,gB,GApBpE+I,aC/EAsC,E,iLAGP,IAAD,OACDvI,EAAQkG,EAAakC,UAAUpP,KAAK+L,MAAM/K,KAC1CuB,EAAU2K,EAAakE,iBAAiBpR,KAAK+L,MAAM/K,IAAKgG,GAExDqK,EAASnE,EAAa3C,eAAevK,KAAK+L,MAAM/K,IAAIgG,GAIpDsK,GAFatR,KAAK+L,MAAM/K,IAAI0F,WAAW,SAAS,GACjC,IAEf6K,EAAiBrR,SAASoR,GAC1BE,EAAQ,GAAIF,EAAYC,GAAgBD,EACxCG,EAAWvR,SAJI,IAIkBsR,GAAO,GAGxCE,EAAuB,IADVL,EAAOvR,OACQ,UAAY,SAExC6R,EAAUN,EAAOtP,KAAI,SAAC6P,EAAW3T,EAAEkL,GAAd,OACrB,kBAACsB,EAAA,EAAD,CAAMO,UAAW,SAAS0G,EAAQhF,MAAQ,IAAIvD,EAAErJ,OAAQ,IAAKN,IAAK3B,EAAMkT,QAClE5H,EAAErJ,QAAQ,EAAK,KAAO,kBAAC2K,EAAA,EAAD,CAAMO,UAAU,WAAW4G,EAA3B,KACxB,kBAACnH,EAAA,EAAD,CAAMG,WAAW,UAAUI,UAAW,iBAAiBuG,EACnDM,aAAa,MACbC,OAAO,WAEN9K,EAAMjF,KAAI,SAAAd,GAAI,OAAK,kBAAC,EAAD,CAAMyL,MAAO+E,EAAYM,MAAOP,EAAOhS,IAAK3B,EAAMkT,OAAQnC,MAAOgD,EAAYpC,SAAUvO,EAAMD,IAAK,EAAK+K,MAAM/K,cAM7I,OACI,oCACI,kBAACyJ,EAAA,EAAD,CAAME,QAAQ,OAAOC,WAAY,UAAWO,MAAM,OAAOH,UAAU,WAAWgH,UAAU,mBAEpF,4BAAI,0BAAMhH,UAAU,QAAQzI,EAAQA,SAChC,2BAAOyI,UAAU,aACb,+BACI,wBAAIA,UAAU,UAAS,qCAAc,yCACrC,4BAAI,4BAAI,kBAACyB,EAAA,EAAD,CACJJ,MAAM,QACNK,MAAO,IACPuF,OAAQ,GACR3F,YAAY,MACZK,aAAcO,EAAagF,iBAAiBlS,KAAK+L,MAAM/K,KACvDlD,MAAOoP,EAAaiF,eAAenS,KAAK+L,MAAM/K,KAC9C4L,SAAUM,EAAakF,WAAWxI,KAAK5J,KAAK+L,MAAM/K,KAClD6L,aAAc,SAAA5L,GAAI,OAAIA,EAAOA,EAAKY,MAAQ,OACvC,4BAAI,kBAAC4K,EAAA,EAAD,CACPJ,MAAM,QACNK,MAAO,IACHuF,OAAQ,GACZ3F,YAAY,MACZK,aAAcO,EAAamF,oBAAoBrS,KAAK+L,MAAM/K,KAC1DlD,MAAOoP,EAAa4B,kBAAkB9O,KAAK+L,MAAM/K,KACjD4L,SAAUM,EAAaoF,WAAW1I,KAAK5J,KAAK+L,MAAM/K,KAClD6L,aAAc,SAAA5L,GAAI,OAAIA,EAAOA,EAAKY,MAAQ,YAQ7D8P,O,GAjEkB1E,a,SCNdsF,E,2GA2BIxR,EAAKa,GAEtB5B,KAAK4G,WAAW,UAAW,CAAED,QAAQ,EAAO5F,KAAMA,EAAMa,GAAIA,Q,KA7B/C2Q,EAEV5L,OAAS,SAAU3F,GAEtB,OAAOA,EAAI0F,WAAW,WAAWC,QAJpB4L,EAOVC,SAAW,WAEdxS,KAAK4G,WAAW,UAAW,CAAED,QAAQ,KATxB4L,EAYVE,kBAAoB,SAASzR,GAGhC,IAAI0B,EAAU1B,EAAI0F,WAAW,WACzB3F,EAAO2B,EAAQ3B,KACfa,EAAKc,EAAQd,GACjB,GAAU,OAAPb,EAAa,MAAO,CAAC8B,MAAM,MAC9B,IACIjD,EADI,IAAI8B,EAAM,CAACV,IAAIA,EAAIyD,MAAM1D,EAAK4D,SAAS,CAAC/C,GAAGA,KACpCmD,QAAQ,GACvB,OAAGlH,EAAM4B,QAAQG,GAAgB,GAC1BA,EAAO8C,W,ICpBD4N,E,iLAIjB,OAAO,oCACH,4BAAI,yBAAKjF,IAAK,qBAAsBD,IAAI,aAAxC,cACA,oD,GAN0B6B,a,SCEbyF,E,iLAEP,IAAD,OAEDC,EAAS3S,KAAK+L,MAAM9I,QAExB,OAAGpF,EAAM4B,QAAQkT,GAAiB,KAE1B,oCACJ,4BAAI,yBAAKtH,IAAK,kBAAmBD,IAAI,mBAArC,iBACA,kBAACwH,EAAA,EAAD,KACI,kBAACA,EAAA,EAAMC,KAAP,KACI,kBAACD,EAAA,EAAME,eAAP,CAAsBC,UAAW,IAAKC,WAAY,EAAGC,SAAU,EAAGC,MAAM,SAAxE,aAGA,kBAACN,EAAA,EAAME,eAAP,oBAIJ,kBAACF,EAAA,EAAMO,KAAP,CAAYC,OAAO,mBACdT,EAAQ5Q,KAAI,SAAAsR,GAAK,OACd,kBAACT,EAAA,EAAMU,IAAP,CAAW9T,IAAK6T,EAAMzR,GAAI2R,cAAY,EAAC7J,SAAU6I,EAAeiB,cAAc5J,KAAK,EAAKmC,MAAM/K,IAAI,QAAQqS,EAAMzR,KAC5G,kBAACgR,EAAA,EAAMa,SAAP,CAAgBV,UAAW,IAAKC,WAAY,EAAGC,SAAU,EAAGC,MAAM,SAAQ,kBAAC9C,EAAA,EAAD,CAAOjF,MAAOtN,EAAMuG,cAAciP,EAAMlS,KAAK,eAAgBkS,EAAMlS,KAAK,eAClJ,kBAACyR,EAAA,EAAMa,SAAP,KAAiBJ,EAAMlS,KAAN,aAKzB,mC,GA5BwB8L,aCJvByG,E,iLAGjB,OAAO,oCACH,4BAAI,yBAAKrI,IAAK,iBAAkBD,IAAI,YAApC,kBACA,yD,GAL6B6B,aCOhB0G,E,mLAERC,GAET,OAAG/V,EAAM4B,QAAQmU,GAAe,6BAAMC,KAAKC,WAExB,cAAfF,EAAM7S,KAA6B,kBAAC,EAAD,CAAcvB,IAAK3B,EAAMkT,OAAQ9N,QAAS2Q,EAAO5S,IAAKhB,KAAK+L,MAAM/K,MACrF,YAAf4S,EAAM7S,KAA2B,kBAAC,EAAD,CAAgBvB,IAAK3B,EAAMkT,OAAQ9N,QAAS2Q,EAAM3Q,QAASjC,IAAKhB,KAAK+L,MAAM/K,MAC7F,SAAf4S,EAAM7S,KAAwB,kBAAC,EAAD,CAASvB,IAAK3B,EAAMkT,OAAQ9N,QAAS2Q,EAAO5S,IAAKhB,KAAK+L,MAAM/K,MAEvF,yBAAKxB,IAAK3B,EAAMkT,QAAS8C,KAAKC,UAAUF,EAAM,KAAK,M,kCAGhDjR,GAAS,IAAD,OAClB,OAAG9E,EAAM4B,QAAQkD,GAAgB,KAC1B,oCAAGA,EAAOZ,KAAI,SAAA6R,GAAK,OAAE,EAAKG,WAAWH,S,iCAGnC/R,GAET,OAAGhE,EAAM4B,QAAQoC,GAAe,KAC3B,yBAAKmJ,UAAU,cAAcnJ,K,+BAIlC,IAAIoB,EAAUsP,EAAeE,kBAAkBzS,KAAK+L,MAAM/K,KAC1D,OACE,kBAACyJ,EAAA,EAAD,KACE,kBAACuJ,EAAA,EAAD,CACEtH,MAAO,KACPuH,QAAS1B,EAAe5L,OAAO3G,KAAK+L,MAAM/K,KAC1C6B,MAAO,kBAACkN,EAAA,EAAD,CAAM/E,UAAU,eACrB,yBAAKI,IAAI,GAAGC,IAAK,SAAWpI,EAAQlC,KAAO,SAC1Cf,KAAK8C,WAAWG,EAAQH,YACzB,kBAACiI,EAAA,EAAD,CAASmJ,WAAW,WAAWjR,EAAQJ,QAEzCsR,gBAAiB5B,EAAeC,SAAS5I,KAAK5J,KAAK+L,MAAM/K,KACzDoT,WAAW,EACXC,WAAW,EACXC,sBAAoB,GAE5B,kBAAC7J,EAAA,EAAD,CAAMiC,MAAM,OAAO1B,UAAU,WAAYhL,KAAK4C,YAAYK,EAAQN,QAAQ,6BAAK,6BAAMkR,KAAKC,UAAU9T,KAAK+L,MAAM/K,IAAIc,MAAMxC,OAAO,KAAK,IAAS,6BAAK,6BAAMuU,KAAKC,UAAU7Q,EAAQ,KAAK,W,GAzCnJgK,a,SCNfsH,E,kCAAAA,EAEV5N,OAAS,SAAU3F,GAGtB,OADYA,EAAI0F,WAAW,UACdC,QALA4N,EAQV/B,SAAW,WAEdxS,KAAK4G,WAAW,SAAU,CAAED,QAAQ,KAVvB4N,EAcVC,cAAgB,SAASxT,GAG5B,IACIyD,EADQzD,EAAI0F,WAAW,UACTjC,MAElB,GAAG5G,EAAM4B,QAAQgF,GAAQ,OAAO,KAChC,GAAGA,EAAM3E,OAAO,EAAG,OAAO,EAE1B,IAAIoG,EAAUlG,KAAKyU,aAAazT,GAChC,OAAOuT,EAAeG,cAAc1T,EAAIkF,EAAQzB,IAxBnC8P,EA6BVE,aAAe,SAAUzT,GAE5B,IAAIK,EAAW/B,EAAO+B,SAClBvD,EAAQ,GAHqB,WAIxB0B,GACL,IAAIiF,EAAQ,IAAI/C,EAAM,CAAEV,IAAKA,EAAKyD,MAAOjF,IACrCmV,EAAWrV,EAAO+B,SAAS7B,GAAKP,WACKF,IAArCO,EAAO+B,SAAS7B,GAAKoV,cAA2BD,EAAWrV,EAAO+B,SAAS7B,GAAKoV,aACpF,IAAIC,EAAUpQ,EAAMM,QAAQhD,KAAI,SAAAd,GAAI,MAChC,CAAE,MAASA,EAAKE,KAAKS,GAAI,MAASX,EAAKE,KAAKwT,GAAW5T,KAAMvB,EAAKsV,MAAOxV,EAAO+B,SAAS7B,GAAKqC,MAAOsJ,MAAO7L,EAAO+B,SAAS7B,GAAK2L,UAErIrN,EAAQA,EAAMwH,OAAOuP,IAPzB,IAAK,IAAIrV,KAAO6B,EAAW,EAAlB7B,GAST,OAAO1B,GA1CMyW,EA8CVG,cAAgB,SAAU1T,EAAIkF,EAAQzB,GACzC,IAAIsQ,EAAW,GACXC,EAAQ,IAAIC,OAAOxQ,EAAM,MAC7B,IAAI,IAAIxG,KAAKiI,EAEL8O,EAAMhW,KAAKkH,EAAQjI,GAAG4D,QACtBkT,EAAS/R,KAAKkD,EAAQjI,IAI9B,OAAO8W,GAxDMR,EA2DVW,mBAAqB,SAAUzM,KA3DrB8L,EAgEV3H,SAAW,SAAUuI,GACxBnV,KAAK4G,WAAW,SAAU,CAAED,QAAQ,EAAMlC,MAAO0Q,EAAMC,OAAOzW,MAAOC,MAAO,EAAGwL,MAAO,KAjEzEmK,EAsEVc,WAAa,SAAUrU,GAC1B,IAAIsU,EAAStU,EAAI0F,WAAW,UAC5B4O,EAAO1W,QACJ0W,EAAO1W,MAAO0W,EAAOlL,MAAM,IAAIkL,EAAO1W,MAAQ,GACjDoC,EAAI4F,WAAW,SAAU0O,IA1EZf,EA8EVgB,SAAW,SAAUvU,GACxB,IAAIsU,EAAStU,EAAI0F,WAAW,UAC5B4O,EAAO1W,QACJ0W,EAAO1W,MAAM,IAAG0W,EAAO1W,MAAQ,GAClCoC,EAAI4F,WAAW,SAAU0O,IAlFZf,EAsFV7K,SAAW,SAAU1I,GAExB,IAAIsU,EAAStU,EAAI0F,WAAW,UAC5B,IAAI4O,EAAO3O,OAAQ,OAAO,EAC1B,IAAI8B,EAAY8L,EAAeC,cAAcxT,GAAKsU,EAAO1W,OAErDkD,EAAQd,EAAIc,MAEhBA,EAAMA,MAAMgH,GAAGwM,OAAQ,CACnB3O,QAAQ,EACRlC,MAAO,KACP7F,MAAO,KACPwL,MAAO,MAETtI,EAAMA,MAAMgH,GAAGpG,QAAS,CACtBiE,QAAQ,EACR5F,KAAM0H,EAAU1H,KAChBa,GAAI6G,EAAU9J,OAGhBqC,EAAI8P,SAAShP,I,ICvGF0T,E,6LAMAxV,KAAK+L,MAAM/K,IAAI0F,WAAW,UAChC0D,MAAQpK,KAAKyV,c,+BAGd,IAAD,OAGDvP,EAAUlG,KAAK+L,MAAM7F,QAWzB,OAR2BA,EAFvBN,MAAMC,QAAQK,GAEM,IAAjBA,EAAQpG,OAAsB,kBAAC,GAAD,CAAYN,IAAK3B,EAAMkT,OAAS/P,IAAKhB,KAAK+L,MAAM/K,MAClEkF,EAAQnE,KAAI,SAACd,EAAKyU,GAAN,OAAc,kBAAC,GAAD,CAAelW,IAAK3B,EAAMkT,OAAS2E,IAAKA,EAAKzU,KAAMA,EAAMD,IAAK,EAAK+K,MAAM/K,SAEpG,IAAVkF,EAAuB,kBAAC,GAAD,CAAU1G,IAAK3B,EAAMkT,SACrC,KAEf/Q,KAAKyV,YAAe7P,MAAMC,QAAQK,GAAYA,EAAQpG,OAAS,EAG3D,kBAAC2K,EAAA,EAAD,KACI,kBAACuJ,EAAA,EAAD,CACItH,MAAO,KACPuH,QAASM,EAAe5N,OAAO3G,KAAK+L,MAAM/K,KAC1C6B,MAAO,kBAAC8S,EAAA,EAAD,CACHC,WAAS,EACT5K,UAAU,YACV4B,SAAU2H,EAAe3H,SAAShD,KAAK5J,KAAK+L,MAAM/K,KAClDiK,WAAY,IAAK4K,YAAY,SAASnJ,MAAM,OAAOuF,OAAQ,KAC/DkC,gBAAiBI,EAAe/B,SAAS5I,KAAK5J,KAAK+L,MAAM/K,KACzDoT,WAAW,EACXC,WAAW,EACXC,sBAAoB,GAEpB,kBAAC7J,EAAA,EAAD,CAAMiC,MAAM,QAAQxG,S,GAvCJ+G,aA4C9B6I,G,iLAIE,IAAI7U,EAAOjB,KAAK+L,MAAM9K,KAClByU,EAAM1V,KAAK+L,MAAM2J,IAEjB1K,EADQhL,KAAK+L,MAAM/K,IAAI0F,WAAW,UACf9H,QAAQ8W,EAAO,SAAW,GACjD,OACI,kBAACjL,EAAA,EAAD,CAAMO,UAAW,gBAAgBA,EAAYxL,IAAK3B,EAAMkT,QACpD,yBAAK/F,UAAU,eAAc,yBAAKI,IAAI,GAAGC,IAAK,SAAWpK,EAAKF,KAAO,SAAU,kBAACqP,EAAA,EAAD,CAAOjF,MAAOlK,EAAKkK,MAAOgG,SAAO,EAAC7E,YAAY,OAAOrL,EAAK6T,OAAe9U,KAAKmP,UAAUlO,EAAKY,W,gCAK9KkU,GACN,GAAIlY,EAAM4B,QAAQsW,GAAO,OAAO,KAChC,IAAIf,EAAQ,IAAIC,OAAO,IAAMjV,KAAK+L,MAAM/K,IAAI0F,WAAW,UAAUjC,MAAQ,IAAK,MAC9E,OAAOsR,EAAKpI,MAAMqH,GAAOjT,KAAI,SAACiU,EAAM/X,GAChC,OAAIA,EAAI,EAAU,0BAAMuB,IAAK3B,EAAMkT,OAAS/F,UAAU,mBAAmBgL,GAClE,0BAAOxW,IAAK3B,EAAMkT,QAAUiF,U,GApBpB/I,aAyBrBgJ,G,iLAIE,OAAO,yBAAK/C,MAAM,UAAS,yBAAK7H,IAAK,mBAAoBD,IAAI,WAAU,6BAAhE,oB,GAJO6B,aAQhBiJ,G,iLAIF,OAAO,yBAAKhD,MAAM,UAAX,8BAA2ClT,KAAK+L,MAAM/K,IAAI0F,WAAW,UAAUjC,MAA/E,e,GAJawI,a,UC5EHkJ,G,iLAEP,IAAD,OAEDC,EAAU9W,EAAO+W,SAAStU,KAAI,SAACd,EAAKhD,GAAN,OAC9B,kBAACwM,EAAA,EAAD,CACIjL,IAAK3B,EAAMkT,OACX/F,UAAU,SACVsL,UAAW,GACXlD,QAAM,EACNzI,QAAQ,MACR4L,SAAS,OACTzE,OAAO,UACPlH,WAAW,UACX4L,YAAY,OACZ3G,aAAa,MACb/D,QAAS,EAAKC,MAAM/K,IAAIyV,YAAY7M,KAAK,EAAKmC,MAAM/K,IAAIC,IAExD,yBAAKmK,IAAI,OAAOC,IAAK,gBAAgBpK,EAAKqD,KAAK,OAAQ0G,UAAU,iBACjE,kBAACD,EAAA,EAAD,CAAS2L,KAAM,IAAKvL,MAAM,UAAUF,WAAY,IAAKiJ,WAAW,UAAUyC,aAAc,IAAK1V,EAAK4B,OAC9F,kBAAC4H,EAAA,EAAD,KAAOxJ,EAAK2V,iBAIxB,OACI,kBAACC,GAAA,EAAD,CACI5K,SAAUC,IAAS4K,KACnB7C,QAASxN,EAAYsQ,eAAe/W,KAAK+L,MAAM/K,KAC/CmT,gBAAiB1N,EAAYuQ,iBAAiBpN,KAAK5J,KAAK+L,MAAM/K,MAE9D,kBAACyJ,EAAA,EAAD,CAAME,QAAQ,OACV,kBAACI,EAAA,EAAD,CAAS2L,KAAM,IAAKvL,MAAM,UAAUF,WAAY,IAAKiJ,WAAW,UAAUhB,MAAM,UAAhF,aAECkD,Q,GAjCkBnJ,aCElBgK,G,iLAGjB,OACE,yBAAKjM,UAAU,OAEb,kBAAC,EAAD,CAAQhK,IAAKhB,KAAK+L,MAAM/K,MACxB,kBAAC,EAAD,CAAOA,IAAKhB,KAAK+L,MAAM/K,MACvB,kBAAC,EAAD,CAAQA,IAAKhB,KAAK+L,MAAM/K,MACxB,kBAAC,EAAD,CAAQA,IAAKhB,KAAK+L,MAAM/K,IAAKkF,QAASqO,EAAeC,cAAcxU,KAAK+L,MAAM/K,OAC9E,kBAAC,GAAD,CAAUA,IAAKhB,KAAK+L,MAAM/K,W,GAVIiM,aCLjBiK,G,8GAGQ,IAAD,OACpB,OAAOC,MAAM,qBACRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACF,IAAMnW,EAAO,GACb,IAAK,IAAI3B,KAAO8X,EAIZ,IAAK,IAAIrZ,UAHSc,IAAdoC,EAAK3B,KACL2B,EAAK3B,GAAO,IAEF8X,EAAK9X,GAAM,CACrB,IAAMyB,EAAOqW,EAAK9X,GAAKvB,GACvBgD,EAAKqB,OAAOV,GAAKX,EAAKW,GACtBT,EAAK3B,GAAKvB,GAAKgD,EAAKqB,OACfnB,EAAKoW,UACNpW,EAAKoW,QAAU,IAEnBpW,EAAKoW,QAAQtW,EAAKW,IAAM,CAACpC,EAAKU,SAASjC,IAI/C,EAAK6S,SAAS,CAAEjM,WAAY1D,S,mCAMpB3B,EAAKW,GACrB,IAAI2B,EAAQ9B,KAAK8B,MACb8D,MAAMC,QAAQ/D,EAAM0V,QAAQhY,KAC5BsC,EAAM0V,QAAQhY,GAAKwD,KAAK7C,GACxB2B,EAAM0V,QAAQhY,GAAO3B,EAAM0H,OAAOzD,EAAM0V,QAAQhY,KAGhDsC,EAAM0V,QAAQhY,GAAOW,EAEzBH,KAAK8Q,SAAShP,K,kCAGCtC,EAAKW,GACpB,IAAI2B,EAAQ9B,KAAK8B,MACjBA,EAAMxC,OAAOwJ,GAAGtJ,GAAOW,EACvBH,KAAK8Q,SAAShP,GAAO,iB,iCAKPtC,EAAKW,GAEnB,OADYH,KAAK8B,MACJA,MAAMgH,GAAGtJ,K,iCAGRA,EAAKW,GACnB,IAAI2B,EAAQ9B,KAAK8B,MACjBA,EAAMA,MAAMgH,GAAGtJ,GAAOW,EACtBH,KAAK8Q,SAAShP,GAAO,iB,kCAKNtC,EAAKW,GAEpB,OADYH,KAAK8B,MACJxC,OAAOwJ,GAAGtJ,K,gCAGVP,EAAOyG,EAAU3E,GAG9B,QAAchC,IAAVE,EAAqB,OAAO,OACnBF,IAATgC,IAAoBA,EAAO,kBACdhC,IAAb2G,IAAwBA,EAAW,IAEvC,IAAIjE,EAAUzB,KAAK8B,MAAMxC,OAAOmC,QAC5BgW,GAAQ,OACI1Y,IAAZ0C,IAAuBA,EAAU,IACrCA,EAAQzD,SAAQ,SAAC2D,EAAQ1D,GACjB0D,EAAO1C,QAAUA,IACjBwY,GAAQ,EACRhW,EAAQxD,GAAK,CAAEgB,MAAOA,EAAOyG,SAAUA,EAAU3E,KAAMA,QAGjD,IAAV0W,GACAhW,EAAQuB,KAAK,CAAE/D,MAAOA,EAAOyG,SAAUA,EAAU3E,KAAMA,IAE3D,IAAIe,EAAQ9B,KAAK8B,MACjBA,EAAMxC,OAAOmC,QAAUA,EACvBzB,KAAK8Q,SAAShP,K,gCAGD7C,GACb,IAAIwC,EAAUzB,KAAK8B,MAAMxC,OAAOmC,QAChC,IAAK,IAAIxD,KAAKwD,EACV,GAAIA,EAAQxD,GAAGgB,QAAUA,EAAO,OAAOwC,EAAQxD,GAEnD,MAAO,CAAEgB,MAAOA,EAAOyG,SAAU,GAAI3E,KAAM,e,mCAE3B9B,GAChB,IAAIwC,EAAUzB,KAAK8B,MAAMxC,OAAOmC,QAC5BiW,EAAa,GACjB,IAAK,IAAIzZ,KAAKwD,EACNA,EAAQxD,GAAGgB,QAAUA,GACzByY,EAAW1U,KAAKvB,EAAQxD,IAE5B,IAAI6D,EAAQ9B,KAAK8B,MACjBA,EAAMxC,OAAOmC,QAAUiW,EACvB1X,KAAK8Q,SAAShP,K,uCAGMF,GACpB,IACI,GAAkB,kBAAPA,EACP,OAAOA,EAEX,IAAMhD,EAAQoB,KAAK8B,MAAM+C,WAAW0S,QAAQ3V,GAC5C,YAAiB7C,IAAVH,EAAsB,KAAOoB,KAAK8B,MAAM+C,WAAWjG,EAAM,IAAIA,EAAM,IAC5E,MAAOgS,GACD5Q,KAAKiG,KACLD,QAAQC,IAAR,iDAC8CrE,EAD9C,qBAEI5B,KAAK8B,MAAM+C,WACX+L,M,kCAMG+G,GAEf,IAAI7V,EAAQ9B,KAAK8B,MACjBA,EAAMxC,OAAOmC,QAAQkW,EAAQrY,OAAOmC,QACpCK,EAAMxC,OAAOwJ,GAAG6O,EAAQrY,OAAOwJ,GAC/BhH,EAAMA,MAAMgH,GAAGuN,SAAS1P,QAAO,EAC/B7E,EAAMA,MAAMgH,GAAGpG,QAAQiE,QAAO,EAC9B7E,EAAMA,MAAMgH,GAAGwM,OAAO3O,QAAO,EAC7B3G,KAAK8Q,SAAShP,K,gCAGD8V,GAEb,GAAGA,EAASC,QAAS,OAAO,KAC5B,GAAGD,EAASE,QAAU,OAAO,KAC7B,GAAqB,WAAlBF,EAASG,KAAmB,OAAO,KACtC,GAAqB,UAAlBH,EAASG,KAAkB,OAAOb,EAAcc,QAAQhY,MAC3D,GAAqB,YAAlB4X,EAASG,KAAoB,OAAOb,EAAce,KAAKjY,MAC1D,GAAqB,cAAlB4X,EAASG,KAAsB,OAAOb,EAAcgB,OAAOlY,MAE9D,IAAImY,EAAcnY,KAAK0G,WAAW,UAC9B,aAAa1H,KAAK4Y,EAASpY,OAAS2Y,EAAYxR,QAEhD3G,KAAK4G,WAAW,SAAU,CACtBD,QAAQ,EACRlC,MAAO,KACP7F,MAAO,S,6BAMLoC,GACVuT,EAAec,WAAWrU,K,2BAGlBA,GAERuT,EAAegB,SAASvU,K,8BAGbA,GAEXuT,EAAe7K,SAAS1I,K,2CC1KXoX,G,YAEnB,WAAYrM,GAAQ,IAAD,8BACjB,4CAAMA,KAsCRsM,eAAiBnB,GAAcmB,eAAezO,KAA7B,gBAvCE,EAwCnB5B,UAAYkP,GAAclP,UAAU4B,KAAxB,gBAxCO,EAyCnBb,YAAcmO,GAAcnO,YAAYa,KAA1B,gBAzCK,EA0CnB3C,YAAciQ,GAAcjQ,YAAY2C,KAA1B,gBA1CK,EA2CnBhD,WAAasQ,GAActQ,WAAWgD,KAAzB,gBA3CM,EA4CnBlD,WAAawQ,GAAcxQ,WAAWkD,KAAzB,gBA5CM,EA6CnB7B,aAAemP,GAAcnP,aAAa6B,KAA3B,gBA7CI,EA8CnB3B,UAAYiP,GAAcjP,UAAU2B,KAAxB,gBA9CO,EA+CnB1H,iBAAmBgV,GAAchV,iBAAiB0H,KAA/B,gBA/CA,EAgDnB0O,aAAepB,GAAcoB,aAAa1O,KAA3B,gBAhDI,EAiDnB6M,YAAcS,GAAcT,YAAY7M,KAA1B,gBA/CZ,EAAKvK,MAAQ,KACb,EAAKyC,MAAQ,CACX+C,WAAY,KACZvF,OAAQ,CACNmC,QAAS,GAITqH,GAAI,CACF9B,MAAO,QACPrF,OAAQ,aACR6M,SAAU,aACV3M,MAAO,OAGXC,MAAO,CACL4K,MAAO,EACP5D,GAAI,CACFwM,OAAQ,CACN3O,QAAQ,EACRlC,MAAO,KACP7F,MAAO,KACPwL,MAAO,MAETiM,SAAU,CACR1P,QAAQ,EACR1D,QAAS,MAEXP,QAAS,CACPiE,QAAQ,EACR5F,KAAM,KACNa,GAAI,SAjCK,E,sEAqDjB,OAA8B,OAA1B5B,KAAK8B,MAAM+C,WAA4B,2CAEzC,kBAAC,GAAD,CAAU7D,IAAKhB,S,0CAOjBA,KAAKqY,iBACLrY,KAAKuY,yBACLC,OAAOC,iBAAiB,SAAUzY,KAAKuY,uBAAuB3O,KAAK5J,OACnE0Y,SAASD,iBAAiB,UAAWvB,GAAcyB,UAAU/O,KAAK5J,S,6CAGlEwY,OAAOI,oBAAoB,SAAU5Y,KAAKuY,uBAAuB3O,KAAK5J,OACtE0Y,SAASE,oBAAoB,UAAW1B,GAAcyB,UAAU/O,KAAK5J,S,+CAIrE,IAAI8B,EAAQ9B,KAAK8B,MACjBA,EAAMA,MAAMgH,GAAG4D,MAAQ8L,OAAOK,WAC9B7Y,KAAK8Q,SAAShP,O,GA7EemL,aCOb6L,QACW,cAA7BN,OAAOO,SAASC,UAEe,UAA7BR,OAAOO,SAASC,UAEhBR,OAAOO,SAASC,SAASvL,MACvB,2DCZNwL,IAASC,OAAO,kBAAC,GAAD,MAASR,SAASS,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAc1N,MAAMyL,MAAK,SAAAkC,GACjCA,EAAaC,iB","file":"static/js/main.13d1dccd.chunk.js","sourcesContent":["\nimport config from '../config.json';\nexport default class Utils {\n\n  static dedupe(items) {\n    let unique = {};\n    items.forEach(function (i) {\n      if (!unique[i]) {\n        unique[i] = true;\n      }\n    });\n    return Object.keys(unique);\n  }\n\n  static guid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 & 0x8);\n      return v.toString(16);\n    });\n  }\n\n  static removeFromArray(array, value) {\n    const index = array.indexOf(value);\n    if (index > -1) {\n      array.splice(index, 1);\n    }\n    return array;\n  }\n\n\n  static isEmpty(value) {\n\n    if (value === undefined) return true;\n    if (value === null) return true;\n    if (value === \"\") return true;\n    if (value === []) return true;\n    if (value === {}) return true;\n    if (/^\\s*$/.test(value)) return true;\n    return false;\n  }\n\n  static sortFieldArray(array, field) {\n    array = array.sort(function (x, y) {\n      let model = config.sorting[field];\n      let key = 0;\n      if (Utils.isEmpty(model)) return  0;\n      let indexX = model.indexOf(x);\n      let indexY = model.indexOf(y);\n      if (indexX === -1 || indexY === -1 ) return 0;\n      if (indexX < indexY) key =  1;\n      if (indexX < indexY) key =  -1;\n      return key;\n    });\n    //console.log(array);\n    return array;\n  }\n\n  static sortObjectByKey(object, key) {\n\n    return object;\n  }\n\n\n  static stringToIndex(str, length) {\n\n    let hash = this.hash(str);\n    return Math.abs(parseInt(hash) % length + 1)\n  }\n\n  static hash(val) {\n    var hash = 0, i, chr;\n    if (val.length === 0) return hash;\n    for (i = 0; i < val.length; i++) {\n      chr = val.charCodeAt(i);\n      hash = ((hash << 5) - hash) + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n  }\n\n\n  static lowerCase(str) {\n    str = str.toLowerCase();\n    let caps = config.caps;\n    for (let i in config.caps) str = str.replace(i,caps[i]);\n    return str;\n  }\n\n\n  static getLabelColor(labelValue) {\n    let colorMap = config.colors;\n    if (colorMap[labelValue] === undefined) {\n      let bank = config.colorBank;\n      let i = Utils.stringToIndex(labelValue + bank.join(\"\"), bank.length)\n      return bank[i];\n    }\n    return colorMap[labelValue];\n\n  }\n\n}","\n//import Utils from '../controllers/Utils';\nimport Query from './Query';\nimport config from '../config.json';\n\nexport default class BaseElement {\n\n    constructor(type,app,item)\n    {\n        this.typekey = type;\n        this.data = item;\n        this.app = app;\n        this.element = config.elements[this.typekey];\n        this.titlekey = this.element.field\n        this.idFields = this.element.idFields;\n        this.tagline = this.element.tagline;\n    }\n\n    filter(filters) { return Query.filter(filters, this); }\n\n\n    loadListData() {\n\n        return {\n            id: this.data.id,\n            type: this.typekey,\n            label: this.data[this.titlekey],\n            data: this.data\n        };\n    }\n    standardFilters()\n    {\n        return this.app.state.config.filters;\n    }\n\n\n    getLinkedObjects(type) //FROM idFields\n    {\n        if (this.data[this.idFields[type]] === undefined) return [];\n        return this.data[this.idFields[type]].map((item_id, i) => {\n            let object = Query.createObject(type,this.app.getItemFromIndex(item_id), this.app);\n            if (object.filter(this.standardFilters())) return false;\n            return object.loadListData();\n        }).filter(i => (i));\n    }\n\n    getFieldValues(field) //FROM idFields\n    {\n        if (this.data[this.valueFields[field]] === undefined) return [];\n        return this.data[this.valueFields[field]].map((value, i) => {\n            if(false) return false; // TODO Needs a filter?\n            return value;\n        }).filter(i => (i));\n    }\n\n\n    loadCardData() {\n        return {\n            id: this.data.id,\n            fields: this.data,\n            type: this.typekey,\n            heading: this.data[config.elements[this.typekey].field],\n            preview: this.cardPreview(),\n            infoBox: this.infoBox()\n        };\n    }\n\n\n    infoBox() {\n\n        let blocks = this.buildBlocks();\n\n        return {\n            type: this.typekey,\n            title: this.data[this.titlekey],\n            titleLabel: this.tagline,\n            blocks: blocks\n        };\n    }\n\n    cardPreview()\n    {\n        return null;\n    }\n\n\n\n}","\nimport BaseElement from './BaseElement';\nexport default class Theme extends BaseElement {\n\n    constructor(item, app) {\n        super(\"theme\", app, item);\n    }\n\n\n    buildBlocks() {\n        let blocks = [];\n        blocks.push({ type: \"subthemes\", content: this.getLinkedObjects(\"subtheme\") });\n        blocks.push({ type: \"stories\", content: this.getLinkedObjects(\"story\") });\n        blocks.push({ type: \"features\", content: this.getLinkedObjects(\"feature\") });\n        return blocks;\n    }\n\n\n    cardPreview()\n    {\n        let subthemes = this.loadSubthemeTree();\n        let preview = {};\n        preview.type = \"tree\";\n        preview.buttonNumber = subthemes.length\n        preview.buttonLabel = \"Subtheme\" + ((subthemes.length === 1) ? \"\" : \"s\");\n        preview.tree=subthemes\n        return preview;\n\n    }\n\n    loadSubthemeTree()\n    {\n        let base = this.getLinkedObjects(\"subtheme\");\n        return base;\n    }\n\n}","\nimport BaseElement from './BaseElement';\nexport default class Subtheme extends BaseElement {\n\n\n    constructor(item, app) {\n        super(\"subtheme\", app, item);\n    }\n\n\n    buildBlocks()\n    {\n        return [];\n    }\n\n\n}","\nimport BaseElement from './BaseElement';\n\nexport default class Story extends BaseElement {\n\n    constructor(item, app) {\n        super(\"story\", app, item);\n    }\n\n\n\n    buildBlocks() {\n        return [];\n    }\n\n\n\n}","\nimport BaseElement from './BaseElement';\nexport default class Vertical extends BaseElement {\n\n\n    constructor(item, app) {\n        super(\"vertical\", app, item);\n    }\n\n    infoBox() { //Details\n\n        let blocks = [];\n\n        return {\n            type: this.typekey,\n            title: this.data[this.titlekey],\n            titleLabel: this.tagline,\n            blocks: blocks\n        };\n    }\n\n}","\nimport BaseElement from './BaseElement';\nexport default class Objective extends BaseElement {\n\n\n    constructor(item, app) {\n        super(\"objective\", app, item);\n    }\n\n\n    buildBlocks() {\n        return [];\n    }\n\n\n}","\nimport BaseElement from './BaseElement';\nexport default class PainPoint extends BaseElement {\n\n\n    constructor(item, app) {\n        super(\"painpoint\", app, item);\n    }\n\n\n    buildBlocks() {\n        let blocks = [];\n        return blocks;\n    }\n\n}","\nimport BaseElement from './BaseElement';\nimport Utils from '../controllers/Utils';\nexport default class Feature extends BaseElement {\n\n\n    constructor(item, app) {\n        super(\"feature\", app, item);\n    }\n\n\n    buildBlocks() {\n        return [];\n    }\n\n    cardPreview() {\n        let preview = {};\n        preview.type = \"status\";\n        if (Utils.isEmpty(this.data.Timeframe)) return null;\n        if (this.data.Timeframe===\"Done\") {\n            preview.done = true;\n            preview.label = \"Released\";\n            preview.version = \"0.6\";\n            preview.date = \"2019-12-29\";\n        }\n        else {\n            preview.done = false;\n            preview.label = \"In Progress\";\n            preview.timeframe = this.data.Timeframe;\n            preview.timeframeColor = Utils.getLabelColor(preview.timeframe);\n        }\n        preview.icons = [{\n            label: \"iOS\",\n            icon: \"ios\",\n            url: \"https://github.com/sendbird/quickstart-calls-android\"\n        }];\n        return preview;\n\n    }\n}","\nimport Utils from '../controllers/Utils';\nimport Theme from './Theme';\nimport Subtheme from './Subtheme';\nimport Story from './Story';\nimport Vertical from './Vertical';\nimport Objective from './Objective';\nimport PainPoint from './PainPoint';\nimport Feature from './Feature';\nimport config from '../config.json';\n\nexport default class Query {\n\n    constructor(parameters) {\n\n        let { app, query, map, limit, selector } = parameters;\n        this.app = app;\n        let filter = this.buildFilter(app, limit, selector);\n        let items = app.state.masterData[this.loadTableKey(query)];\n        let objects = this.queryItems(query, items, filter);\n        if (map === undefined)\n            this.objects = objects;\n        else\n            this.objects = this.mapItems(map, objects, filter);\n    }\n\n\n    queryItems(type, items, filter) {\n        if (type === undefined) return [];\n        let filteredObjects = [];\n        items.forEach(item => {\n            let object = Query.createObject(type, item, this.app);\n            if (!object.filter(filter)) filteredObjects.push(object)\n        });\n        return filteredObjects;\n    }\n\n\n    mapItems(map, objects, filter) {\n\n        let all_mapped_ids = [];\n        objects.forEach(object => {\n            let mapped_ids = this.loadMappedIds(map,object);\n            all_mapped_ids = all_mapped_ids.concat(mapped_ids)\n        });\n        all_mapped_ids = Utils.dedupe(all_mapped_ids);\n        return this.loadObjectsFromIds(all_mapped_ids, map, filter);\n\n    }\n\n    loadTableKey(key) {\n        if (config.elements[key] === undefined) return null;\n        let tablekey = config.elements[key].table;\n        return tablekey;\n    }\n\n\n    buildFilter(app, limit, selector)  //LIMIT is an array of fields to be chosen from the App filters\n    {\n        if (selector !== undefined)\n            for (let i in selector)\n                return [{ field: i, criteria: [selector[i]], type: \"whitelist\" }];\n        else if (limit === null) return null;\n        let appFilters = app.state.config.filters;\n        //Process Whitelist\n        if (!Utils.isEmpty(limit)) {\n            if (!Array.isArray(limit)) limit = [];\n            let newFilters = [];\n            for (let i in appFilters)\n                if (limit.indexOf(appFilters[i].field) >= 0) newFilters.push(appFilters[i]);\n            if (limit.length > 0) appFilters = newFilters;\n        }\n        if (Utils.isEmpty(selector)) {\n\n        }\n        return appFilters;\n    }\n\n\n    loadObjectsFromIds(ids, type, filter) {\n        ids = Utils.dedupe(ids);\n        let objects = [];\n        for (let i in ids) {\n            let id = ids[i];\n            let item = this.app.getItemFromIndex(id);\n            let object = Query.createObject(type, item, this.app);\n            if (object === null) continue;\n            if (object.filter(filter)) continue;\n            objects.push(object);\n        }\n        return objects;\n    }\n\n\n\n    static createObject(type, item, app) {\n\n        if (type === \"theme\") return new Theme(item, app);\n        if (type === \"subtheme\") return new Subtheme(item, app);\n        if (type === \"story\") return new Story(item, app);\n        if (type === \"vertical\") return new Vertical(item, app);\n        if (type === \"objective\") return new Objective(item, app);\n        if (type === \"feature\") return new Feature(item, app);\n        if (type === \"painpoint\") return new PainPoint(item, app);\n        console.log(\"Failed to create object of type: \" + type);\n        return null;\n    }\n\n    filteredObjects() {\n        return this.objects;\n    }\n\n\n    static filter(filters, object) {\n        if (Utils.isEmpty(filters)) return false;\n        let results = filters.map(filter => {\n            if (!Array.isArray(filter.criteria)) return 0;\n            if (filter.criteria.length===0) return 0;\n            let field = this.determineFieldToFilter(object.typekey, filter.field);\n            if (Utils.isEmpty(field)) return 0;\n            let candidates = object.data[field];\n            if (Utils.isEmpty(candidates)) return 1;\n            if (!Array.isArray(candidates)) candidates = [candidates];\n            let intersection = candidates.filter(value => filter.criteria.includes(value));\n            if (filter.type === \"whitelist\" && intersection.length === 0) return 1;\n            if (filter.type === \"blacklist\" && intersection.length > 0) return 1;\n            return 0;\n        });\n        let max = Math.max.apply(null, results)\n        if (max > 0) return true;\n        return false;\n    }\n\n    static determineFieldToFilter(type, key) {\n        if(key===\"id\") return key;\n        let element = config.elements[type];\n        if (!Utils.isEmpty(element.valueFields)) {\n            if (!Utils.isEmpty(element.valueFields[key]))\n                return element.valueFields[key];\n        }\n        if (!Utils.isEmpty(element.idFields)) {\n            if (!Utils.isEmpty(element.idFields[key]))\n                return element.idFields[key];\n        }\n        return null;\n    }\n\n    loadMappedIds(map, object) {\n        if (map === object.typekey) return [object.data.id];\n        let idFields = config.elements[object.typekey].idFields;\n        let key = idFields[map];\n        let ids = object.data[key];\n        if (ids === undefined) return [];\n        return ids;\n    }\n\n}","import Query from \"../models/Query\";\nimport Utils from './Utils';\nimport config from '../config.json';\n//let config = require('../config.json');\n\nexport default class NavControls {\n\n    static loadCardTypes = function () {\n\n        return config.cardViews;\n    }\n\n    static currentCardView = function (app)\n    {\n        let cards = app.getUIConfig(\"cards\");\n        for(let i in config.cardViews)\n        {\n            if(config.cardViews[i].key===cards)\n            {\n                let returnval = {label : config.cardViews[i].label, value : cards};\n                return returnval;\n            } \n        } \n        return {label : \"None\"};\n    }\n\n    static loadProducts = function () {\n\n        return config.products;\n    }\n\n\n\n    static loadUserTypes = function (app) {\n\n        let userTypes = [];\n        let tablesWithUsers = [\"story\",\"theme\",\"feature\"];\n        for(let i in tablesWithUsers)\n        {\n            let key = tablesWithUsers[i];\n            let field = config.elements[key].valueFields.usertype;\n            let query = new Query({ app: app, query: key, limit: null });\n            let user_types = query.objects.map(item => item.data[field]);\n            for(let j in user_types)\n            {\n                let type = user_types[j];\n                if(!Array.isArray(type)) type = [type];\n                for(let k in type) userTypes.push(type[k]);\n            }\n        }\n        userTypes = Utils.dedupe(userTypes);\n        userTypes = Utils.sortFieldArray(userTypes,\"usertype\");\n        userTypes = [\"—Any User Type—\"].concat(userTypes);\n        return userTypes;\n    }\n\n    static currentUserType = function (app) {\n        let type =  this.getUserType(app);\n        if(type===undefined) return \"—Any User Type—\"\n        return type;\n    }\n\n    static setUserType = function (val) {\n        this.deleteFilter(\"usertype\");\n        if (val === \"—Any User Type—\") return false;\n        this.setFilter(\"usertype\", [val], \"whitelist\");\n    }\n\n    static getUserType = function (app) {\n        let userfilter = app.getFilter(\"usertype\");\n        return userfilter.criteria[0];\n    }\n\n\n\n    //VERTICALS\n\n\n    static loadVerticals = function (app) {\n\n        let verticalQuery = new Query({ app: app, query: \"story\", map: \"vertical\" }); //, limit:null\n        let verticals = verticalQuery.objects.map(item => (\n            { \"value\": item.data.id, \"label\": item.data.Vertical, badges: [\"X Themes\"] }\n        ))\n        verticals.push({ label: \"—Any Vertical—\", value: null });\n        return verticals.reverse();\n    }\n\n    static currentVertical = function (app) {\n\n        let id = NavControls.getVertical(app);\n        let objects = NavControls.loadVerticals(app);\n        for (let i in objects) if (id === objects[i].value) return objects[i];\n        return objects[0];\n    }\n\n    static setVertical = function (selection) {\n\n        this.deleteFilter(\"vertical\");\n        if (selection.value===null) return false;\n        this.setFilter(\"vertical\", [selection.value], \"whitelist\");\n    }\n\n    static getVertical = function (app) {\n        let vertfilter = app.getFilter(\"vertical\");\n        return vertfilter.criteria[0];\n    }\n\n    static loadFilters = function () {\n        return config.multiSelectFilters;\n\n    }\n\n    static currentFilter = function (app) {\n\n        let filters = config.multiSelectFilters;\n        let currentKey = app.state.config.ui.filter;\n        for (let i in filters) if (currentKey === filters[i].key) return filters[i];\n        return filters[0];\n    }\n\n    static setFilter = function (val) {\n\n        let filters = config.multiSelectFilters;\n        for (var i in filters) this.deleteFilter(filters[i].key);\n        this.setUIConfig(\"filter\", val.key);\n    }\n\n\n\n\n    static getCardView = function (app) {\n        app.getUIConfig(\"cards\");\n    }\n    static setCardView = function (val) {\n\n        this.setUIConfig(\"cards\", val.key);\n        this.setUIConfig(\"grouping\", null);\n    }\n\n\n    static multiSelect = function (app, key, a) {\n        let currentKey = app.state.config.ui.filter;\n\n\n        let functions = {\n            title: \"Business Objectives\",\n            label: this.labelBusinessObjectives(app),\n            options: this.loadBusinessObjectives(app),\n            selected: this.selectedBusinessObjectives(app),\n            onSelect: this.onSelectBusinessObjective.bind(app),\n            onDeselect: this.onDeselectBusinessObjective.bind(app)\n        }\n\n        if (currentKey === \"painpoint\") {\n            functions = {\n                title: \"Pain Points\",\n                label: this.labelPainPoints(app),\n                options: this.loadPainPoints(app),\n                selected: this.selectedPainPoints(app),\n                onSelect: this.onSelectPainPoint.bind(app),\n                onDeselect: this.onDeselectPainPoint.bind(app)\n            }\n        }\n        return functions[key];\n    }\n\n    //Business Objective Functions\n\n\n    static labelBusinessObjectives = function (app) {\n\n        let count = this.selectedBusinessObjectives(app).length;\n        if (count === 0) return \"Select Business Objectives\";\n        return count + \" Business Objective\" + ((count > 1) ? \"s\" : \"\");\n\n    }\n    static loadAllBusinessObjectives = function (app) {\n        let objectiveQuery = new Query({ app: app, query: \"objective\" });\n        return objectiveQuery.objects.map(item => (\n            { \"value\": item.data.id, \"label\": item.data.Objective, type: \"objective\" }\n        ))\n    }\n    static loadBusinessObjectives = function (app) {\n        let objectiveQuery = new Query({ app: app,  query: \"story\", map: \"objective\", limit:[\"vertical\",\"usertype\"] } );\n        return objectiveQuery.objects.map(item => (\n            { \"value\": item.data.id, \"label\": item.data.Objective, type: \"objective\" }\n        ))\n    }\n    static selectedBusinessObjectives = function (app) {\n\n        let filter = app.getFilter(\"objective\");\n        return filter.criteria;\n\n    }\n    static onSelectBusinessObjective = function (selection) {\n\n        let filter = this.getFilter(\"objective\");\n        filter.criteria.push(selection.value);\n        let criteria = Utils.dedupe(filter.criteria);\n        this.setFilter(\"objective\", criteria, \"whitelist\");\n    }\n\n    static onDeselectBusinessObjective = function (selection) {\n        let filter = this.getFilter(\"objective\");\n        let criteria = Utils.removeFromArray(filter.criteria, selection.value);\n        this.setFilter(\"objective\", criteria, \"whitelist\");\n    }\n\n\n    //Pain Point Functions\n\n\n    static labelPainPoints = function (app) {\n\n        let count = this.selectedPainPoints(app).length;\n        if (count === 0) return \"Select Pain Points\";\n        return count + \" Pain Point\" + ((count > 1) ? \"s\" : \"\");\n\n    }\n    static loadPainPoints = function (app) {\n\n        let painPointQuery = new Query({ app: app, query: \"story\", map: \"painpoint\", limit: [\"vertical\",\"usertype\"] });\n        let tmp = painPointQuery.objects.map(item => (\n            { \"value\": item.data.id, \"label\": item.data['Pain Point'] }\n        ))\n        return tmp;\n    }\n    static selectedPainPoints = function (app) {\n\n        let filter = app.getFilter(\"painpoint\");\n        return filter.criteria;\n\n    }\n    static onSelectPainPoint = function (selection) {\n\n        let filter = this.getFilter(\"painpoint\");\n        filter.criteria.push(selection.value);\n        let criteria = Utils.dedupe(filter.criteria);\n        this.setFilter(\"painpoint\", criteria, \"whitelist\");\n    }\n\n    static onDeselectPainPoint = function (selection) {\n        let filter = this.getFilter(\"painpoint\");\n        let criteria = Utils.removeFromArray(filter.criteria, selection.value);\n        this.setFilter(\"painpoint\", criteria, \"whitelist\");\n    }\n\n\n    static loadCardGroups = function () {\n\n        return config.cardViews;\n    }\n\n\n    static cookbookisOpen(app) {\n        return app.getUIState(\"cookbook\").isOpen;\n    }\n\n    static onClickCookbook() {\n        this.setUIState(\"cookbook\", { isOpen: true });\n    }\n\n    static cookbookisClosed()\n    {\n        this.setUIState(\"cookbook\", { isOpen: false });\n    }\n\n\n}\n","\nimport React, { Component } from 'react';\nimport { Button, Pane, Heading, TabNavigation, Combobox, IconButton, Tab, SelectMenu, Tooltip, Position } from 'evergreen-ui'\nimport NavControls from \"../controllers/NavControls.js\";\n\nexport default class NavBar extends Component {\n\n    render() {\n        return (\n            <>\n                <Pane display=\"flex\" padding={16} background={\"#FFF\"} >\n                    <Pane flex={1} alignItems=\"center\" display=\"flex\">\n                        <Heading className=\"TitleHead\" fontWeight={700} fontSize=\"2em\" color=\"#825eeb\" >\n                            <img className=\"Logo\" alt=\"\" src={'./img/logo.png'} />\n                            BirdHouse<br/>\n                            <span>SendBird Product Explorer</span>\n                    </Heading>\n                        <TabNavigation className=\"ProductTabs\" color=\"Purple\">\n                            {NavControls.loadProducts().map((product, index) => (\n                                <Tab key={product.label} is=\"button\" id={\"Tab_\" + product.label} isSelected={product.ready} >\n                                    {product.label}\n                                </Tab>\n                            ))}\n                        </TabNavigation>\n                    </Pane>\n                    <Pane >\n                        <Button iconAfter=\"search\" onClick={this.props.app.setUIState.bind(this.props.app,\"search\", { isOpen: true })}>Search</Button>\n                    </Pane>\n                </Pane>\n                <Pane padding={16} className=\"SecondRow\">\n\n                    <table className=\"NavTable\"><tbody>\n                        <tr className=\"labels\">\n                            <td></td>\n                            <td>User Type</td>\n                            <td>Industry Vertical</td>\n                            <td>Filter</td>\n                            <td>Criteria</td>\n                            <td className=\"last\">View cards as:</td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <Tooltip content=\"Cook Book\" position={Position.RIGHT}>\n                                    <IconButton\n                                        float=\"left\"\n                                        marginRight=\"1em\"\n                                        onClick={NavControls.onClickCookbook.bind(this.props.app)}\n                                        icon=\"git-repo\" iconSize={18} />\n                                </Tooltip>\n                            </td>\n                            <td>\n                                <Combobox\n                                    float=\"left\"\n                                    marginRight=\"1em\"\n                                    width={160}\n                                    selectedItem={NavControls.currentUserType(this.props.app)}\n                                    items={NavControls.loadUserTypes(this.props.app)}\n                                    onChange={NavControls.setUserType.bind(this.props.app)}\n                                />\n                            </td>\n                            <td>\n                                <Combobox\n                                    float=\"left\"\n                                    marginRight=\"1em\"\n                                    width={160}\n                                    selectedItem={{ label: NavControls.currentVertical(this.props.app).label }}\n                                    items={NavControls.loadVerticals(this.props.app)}\n                                    onChange={NavControls.setVertical.bind(this.props.app)}\n                                    itemToString={item => item ? item.label : ''}\n                                />\n                            </td>\n                            <td>\n                                <Combobox\n                                    float=\"left\"\n                                    marginRight=\"1em\"\n                                    width={175}\n                                    selectedItem={{ label: NavControls.currentFilter(this.props.app).label }}\n                                    items={NavControls.loadFilters()}\n                                    onChange={NavControls.setFilter.bind(this.props.app)}\n                                    itemToString={item => item ? item.label : ''}\n                                />\n\n                            </td>\n                            <td className=\"criteria\">\n                                <SelectMenu\n                                    marginRight=\"1em\"\n                                    float=\"left\"\n                                    isMultiSelect\n                                    hasFilter={false}\n                                    title={NavControls.multiSelect(this.props.app, \"title\")}\n                                    options={NavControls.multiSelect(this.props.app, \"options\")}\n                                    selected={NavControls.multiSelect(this.props.app, \"selected\")}\n                                    onSelect={NavControls.multiSelect(this.props.app, \"onSelect\")}\n                                    onDeselect={NavControls.multiSelect(this.props.app, \"onDeselect\")}\n\n                                >\n                                    <Button\n                                        marginRight=\"1em\">{NavControls.multiSelect(this.props.app, \"label\")}</Button>\n                                </SelectMenu>\n                            </td>\n                            <td>\n\n                    <Combobox\n                                    float=\"right\"\n                                    width={150}\n                                    marginRight=\"1em\"\n                                    selectedItem={NavControls.currentCardView(this.props.app)}\n                                    items={NavControls.loadCardTypes()}\n                                    onChange={NavControls.setCardView.bind(this.props.app)}\n                                    itemToString={item => item ? item.label : ''}\n                                />\n                            </td>\n                        </tr>\n                    </tbody>\n                    </table>\n\n\n\n\n                </Pane>\n            </>\n        )\n    }\n\n\n\n}\n","\nimport Query from \"../models/Query\";\nimport config from '../config.json';\nimport Utils from \"./Utils\";\n\nexport default class CardControls {\n\n    static loadCards = function (app) {\n\n        let query = \"story\"; //All queries go through user stories\n        let map = app.state.config.ui.cards;\n        //map = \"theme\"; //force theme cards\n        let queryObj = new Query({app:app,query:query,map:map}); \n        //console.log({ app: app, query: query, map: map },queryObj); \n        let items = queryObj.filteredObjects();\n        return items.map(item => { return item.loadCardData() });\n\n\n    }\n\n    static loadCard = function (state) {\n\n        return {}\n\n    }\n\n\n    static loadCardsHeading(app,cards) {\n\n        let views = config.cardViews;\n        let currentView = app.state.config.ui.cards;\n\n        let view = views[0]\n        for (let i in views) if (currentView === views[i].key) view = views[i];\n\n        let s = (cards.length!==1) ? \"s\" : \"\";\n        let counter = cards.length+ \" \" +view.counter + s;\n\n        let heading = CardControls.prepareHeading(app,view.heading,view)\n\n        return {\n            heading: heading,\n            counter: counter\n        }\n\n    }\n\n    static prepareHeading(app,heading,view)\n    {\n        if(!heading.match(/{{_}}/)) return heading;\n        let sides = heading.split(\"{{_}}\");\n\n        let headingvariable = view.headingvariable;\n        let filter = app.getFilter(headingvariable);\n\n        let variable = filter.criteria[0];\n        if(Utils.isEmpty(variable)) variable =  view.headingdefaultvariable;\n \n        return  sides[0]+Utils.lowerCase(variable)+sides[1];\n    }\n\n\n    static onClickCard(item)\n    {\n        this.setUIState(\"infoBox\", { isOpen: true,  type: item.type, id: item.id});\n    }\n\n\n    static loadCardView(app)\n    {\n        let type = app.state.config.ui.cards;\n        for(let i in config.cardViews)\n            if(config.cardViews[i].key===type) return  config.cardViews[i]\n        return null;\n    }\n\n    static loadCardGroupings(app)\n    {\n        let cardView = this.loadCardView(app);\n        if(cardView===null) return null;\n        let cardKey = cardView.key;\n        let groupings = config.elements[cardKey].valueFields;\n        let output = [{ label: \"—None—\",key:null}];\n        for (let i in groupings) output.push({ label: groupings[i],key:i});\n        return output;\n    }\n\n    static loadCardGrouping(app) {\n        return app.getUIConfig(\"grouping\");\n    }\n\n    static loadGroupingFieldFromKey(elementKey,groupkey) {\n        \n        return config.elements[elementKey].valueFields[groupkey];\n\n\n    }\n\n    static currentCardGrouping(app)\n    {\n        let key = app.getUIConfig(\"grouping\");\n        let card = app.getUIConfig(\"cards\");\n        let val =  config.elements[card].valueFields[key];\n        if(Utils.isEmpty(val)) return {label:\"—None—\",value:null};\n        return {label:val,value:key};\n    }\n\n    static currentCardLabel(app)\n    {\n        let key = app.getUIConfig(\"label\");\n        let card = app.getUIConfig(\"cards\");\n        let val =  config.elements[card].valueFields[key];\n        if(Utils.isEmpty(val)) return {label:\"—None—\",value:null};\n        return {label:val,value:key};\n    }\n\n    static loadCardGroups(app,cards)\n    {\n        let grouping = this.loadCardGrouping(app);\n        if(grouping===null) return [null];\n        let fields = [];\n        for(let i in  cards)\n        {\n            let groupingField = this.loadGroupingFieldFromKey(cards[i].type,grouping);\n            let items = cards[i].fields[groupingField];\n            if(items===undefined) continue;\n            if(!Array.isArray(items)) items = [items];\n            fields = fields.concat(items);\n        }\n        fields = Utils.dedupe(fields);\n        fields = Utils.sortFieldArray(fields,grouping);\n        return fields;\n    }\n\n    static cardNotInGroup(app,card,group)\n    {\n        if(group===null) return false;\n        let groupingKey = app.state.config.ui.grouping;\n        if (groupingKey===null) return false;\n        let groupingField = config.elements[card.type].valueFields[groupingKey];\n        let fields = card.fields[groupingField];\n        if(!Array.isArray(fields)) fields = [fields];\n        if(fields.indexOf(group)<0) return true;\n    }\n\n    static groupCards(selection)\n    {\n        this.setUIConfig(\"grouping\", selection.key);\n    }\n\n\n\n    static loadCardLabels(app) {\n        return this.loadCardGroupings(app);\n    }\n    static labelCards(selection) {\n        this.setUIConfig(\"label\", selection.key);\n    }\n    static hasLabel(app)\n    {\n        return app.getUIConfig(\"label\")!==null\n    }\n\n    static getCardLabel(app,card) {\n        let selectedLabelKey = app.state.config.ui.label;\n        let cardType = card.type;\n        if (config.elements[cardType].valueFields[selectedLabelKey] === undefined) return null;\n        let cardLabelField = config.elements[cardType].valueFields[selectedLabelKey];\n        let labelValue = card.fields[cardLabelField];\n\n        if(Array.isArray(labelValue)) labelValue = labelValue.join(\", \");\n\n        return { label: labelValue, color: Utils.getLabelColor(labelValue)}\n    }\n\n\n    static buildHeading(item)\n    {\n        let fieldtoHighlight = config.elements[item.type].highlight;\n        if(Utils.isEmpty(fieldtoHighlight)) return {heading:item.heading};\n        return {heading:item.heading,highlight:item.fields[fieldtoHighlight]};\n        \n    }\n\n}","\nimport React, { Component } from 'react';\nimport { Button, Pane, Text, Badge, Pill } from 'evergreen-ui'\nimport CardControls from '../controllers/CardControls'\nimport Utils from '../controllers/Utils';\n\nexport default class Cards extends Component {\n\n    render() {\n        let item = this.props.cardData;\n\n        if (CardControls.cardNotInGroup(this.props.app, this.props.cardData, this.props.group)) return null;\n\n\n        var max = 1 + Math.floor(Math.random() * 20);\n        var bottom = [];\n        for (var i = 1; i <= max; i++) {\n            bottom.push(<div>ddd</div>);\n        }\n\n        return (<Pane\n            elevation={3}\n            width={this.props.width}\n            background=\"#FFF\"\n            borderRadius={15}\n            className=\"Card\"\n            onClick={CardControls.onClickCard.bind(this.props.app, this.props.cardData)}\n        >\n            {this.label(this.props.cardData)}\n            <Text className=\"CardHeading\"><img alt=\"\" src={'./img/' + item.type + '.png'} />{this.heading(item)}</Text>\n\n            {this.cardPreview(this.props.app, this.props.cardData.preview)}\n        </Pane>)\n    }\n\n    heading(item) {\n        let object = CardControls.buildHeading(item);\n        if (Utils.isEmpty(object.highlight)) return object.heading;\n        let frontandback = object.heading.split(object.highlight);\n        return <span className=\"cardHeadingNoHighlight\">{frontandback[0]}<span className=\"cardHeadingHighlight\">{object.highlight}</span>{frontandback[1]}</span>\n\n    }\n\n\n    label(card) {\n        if (!CardControls.hasLabel(this.props.app)) return null\n        let label = CardControls.getCardLabel(this.props.app, card);\n        if (Utils.isEmpty(label)) return null;\n        return <Badge color={label.color}>{label.label}</Badge>\n    }\n\n    cardPreview(app, previewData) {\n        if (Utils.isEmpty(previewData)) return null;\n        if (Utils.isEmpty(previewData.type)) return null;\n        if (previewData.type === \"tree\") return <div className=\"cardPreview\"><Tree app={app} data={previewData} /></div>\n        if (previewData.type === \"status\") return <div className=\"cardPreview\"><Status app={app} data={previewData} /></div>\n        return\n\n    }\n\n\n}\n\n\nclass Tree extends Component {\n\n    constructor() {\n        super();\n        this.state = { open: false }\n    }\n\n    render() {\n        let data = this.props.data;\n        if (!this.state.open) return <Button onClick={this.openTree.bind(this)}><Pill display=\"inline-flex\" margin={8}>{data.buttonNumber}</Pill> {data.buttonLabel}</Button>\n        return <div className=\"tree\">{data.tree.map(branch => this.branch(branch))}</div>\n    }\n\n    openTree(e) {\n        e.stopPropagation();\n        this.setState({ open: true });\n    }\n    branch(branch) {\n        return <div key={Utils.guid()} className=\"branch\"><img alt=\"\" src={'./img/' + branch.type + '.png'} />{branch.label}</div>\n    }\n\n}\n\nclass Status extends Component {\n\n    render() {\n        let data = this.props.data;\n        if(data===null) return null;\n        if(data.done===true) return this.pastStatus(data);\n        return this.futureStatus(data);\n    }\n\n    pastStatus(data)\n    {\n        return <div className=\"status\">\n            <Badge marginRight={10} isSolid>{data.label}</Badge><br/>\n            <Badge >v{data.version}</Badge><span>&nbsp;</span><Badge marginRight={10}>{data.date}</Badge>\n        </div>\n    }\n\n    futureStatus(data)\n    {\n        return <div className=\"status\">\n            <span>Working on it:</span> <Badge isSolid color={data.timeframeColor}>{data.timeframe}</Badge>\n        </div>\n    }\n\n}","\nimport React, { Component } from 'react';\nimport {  Pane, Combobox } from 'evergreen-ui'\nimport Card from './Card.js'\nimport CardControls from '../controllers/CardControls'\n//import NavControls from '../controllers/NavControls'\nimport Utils from '../controllers/Utils';\n\nexport default class Cards extends Component {\n\n\n    render() {\n        let cards = CardControls.loadCards(this.props.app);\n        let heading = CardControls.loadCardsHeading(this.props.app, cards)\n\n        let groups = CardControls.loadCardGroups(this.props.app,cards);\n\n        let panelWidth = this.props.app.getUIState(\"width\")-0;\n        let cardMinWidth = 300;\n        let columnCount = (panelWidth/(cardMinWidth));\n        let columnCountInt = parseInt(columnCount);\n        let ratio = 1+((columnCount-columnCountInt)/columnCount);\n        let cardWidth =parseInt(cardMinWidth*ratio)-25;\n\n        let groupCount = groups.length;\n        let Single = (groupCount===1) ? \" Single\" : \" Multi\";\n\n        let columns = groups.map((groupfield,i,a)=>(\n            <Pane className={\"Column\"+Single} width={(100/a.length)+\"%\"} key={Utils.guid()} >\n                {(a.length<=1) ? null : <Pane className=\"Heading\">{groupfield} </Pane>}\n                <Pane background=\"#825eeb\" className={\"Cards ColCount\"+columnCountInt}\n                    paddingRight=\"2em\"\n                    cursor=\"pointer\"\n                    >\n                    {cards.map(item => (<Card width={cardWidth}  debug={ratio} key={Utils.guid()} group={groupfield} cardData={item} app={this.props.app} />))}\n                </Pane>\n            </Pane>\n        ));\n\n\n        return (\n            <>\n                <Pane padding=\".5em\" background={\"#212242\"} color=\"#FFF\" className=\"ThirdRow\" borderTop=\"1px solid black\">\n                    \n                    <h4><span className=\"left\">{heading.heading}</span>\n                        <table className=\"CardTable\">\n                            <tbody>\n                                <tr className=\"toprow\"><td>Label</td><td>Grouping</td></tr>\n                                <tr><td><Combobox\n                                    float=\"right\"\n                                    width={150}\n                                    height={20}\n                                    marginRight=\"1em\"\n                                    selectedItem={CardControls.currentCardLabel(this.props.app)}\n                                    items={CardControls.loadCardLabels(this.props.app)}\n                                    onChange={CardControls.labelCards.bind(this.props.app)}\n                                    itemToString={item => item ? item.label : ''}\n                                /></td><td><Combobox\n                                    float=\"right\"\n                                    width={150}\n                                        height={20}\n                                    marginRight=\"1em\"\n                                    selectedItem={CardControls.currentCardGrouping(this.props.app)}\n                                    items={CardControls.loadCardGroupings(this.props.app)}\n                                    onChange={CardControls.groupCards.bind(this.props.app)}\n                                    itemToString={item => item ? item.label : ''}\n                                /></td></tr>\n                            </tbody>\n                        </table></h4>\n\n                    \n                </Pane>\n\n                {columns}</>)\n\n    }\n\n\n    \n\n}","import Query from \"../models/Query\";\nimport Utils from \"./Utils\";\nexport default class WindowControls {\n\n    static isOpen = function (app) {\n\n        return app.getUIState(\"infoBox\").isOpen;\n    }\n\n    static isClosed = function () {\n\n        this.setUIState(\"infoBox\", { isOpen: false })\n    }\n\n    static loadWindowContent = function(app)\n    {\n\n        let infoBox = app.getUIState(\"infoBox\")\n        let type = infoBox.type;\n        let id = infoBox.id;\n        if(type===null) return {title:null};\n        let q = new Query({app:app,query:type,selector:{id:id}})\n        let object = q.objects[0]; //Should only be 1 returned if selected for by ID\n        if(Utils.isEmpty(object)) return {};\n        return object.infoBox();\n\n    }\n\n\n    static openItemInBox(type,id)\n    {\n        this.setUIState(\"infoBox\", { isOpen: true,  type: type, id: id});\n    }\n\n}","\nimport React, { Component } from 'react';\n//import { Pane, Dialog, Text, Button } from 'evergreen-ui'\n\nexport default class Tree extends Component {\n\nrender()\n{\n    return(<>\n        <h2><img src={\"./img/subtheme.png\"} alt=\"subtheme\" /> Subthemes</h2>\n        <pre>TREE GOES HERE</pre>\n        </>\n    )\n}\n\n\n\n}","import React, { Component } from 'react';\n\nimport WindowControls from \"../controllers/WindowControls.js\";\nimport { Table, Badge } from 'evergreen-ui'\nimport Utils from '../controllers/Utils.js';\n\nexport default class UserStoryTable extends Component {\n\n    render() {\n\n        let stories =this.props.content;\n\n        if(Utils.isEmpty(stories)) return null;\n\n        return (<>\n            <h2><img src={\"./img/story.png\"} alt=\"userstorytable\"  /> User Stories</h2>\n            <Table >\n                <Table.Head>\n                    <Table.TextHeaderCell flexBasis={150} flexShrink={0} flexGrow={0} align=\"right\">\n                        User Type\n                     </Table.TextHeaderCell>\n                    <Table.TextHeaderCell >\n                        User Story\n                     </Table.TextHeaderCell>\n                </Table.Head>\n                <Table.Body border=\"1px solid black\">\n                    {stories.map(story => (\n                        <Table.Row key={story.id} isSelectable onSelect={WindowControls.openItemInBox.bind(this.props.app,\"story\",story.id)}  >\n                            <Table.TextCell flexBasis={150} flexShrink={0} flexGrow={0} align=\"right\"><Badge color={Utils.getLabelColor(story.data['User Type'])}>{story.data['User Type']}</Badge></Table.TextCell>\n                            <Table.TextCell>{story.data['Story']}</Table.TextCell>\n                        </Table.Row>\n                    ))}\n                </Table.Body>\n            </Table>\n                    <pre>{/*JSON.stringify(this.props.content, null, 2)*/}</pre>\n        </>\n        );\n    }\n\n}","import React, { Component } from 'react';\n//import { Pane, Dialog, Text, Button } from 'evergreen-ui'\nexport default class DocList extends Component {\n    render() {\n        \n    return(<>\n        <h2><img src={\"./img/docs.png\"} alt=\"doclist\" /> Documentation</h2>\n        <pre>DOC LINKS GOES HERE</pre>\n        </>\n    \n        )\n    }\n}","\nimport React, { Component } from 'react';\nimport { Pane, Dialog, Text, Heading } from 'evergreen-ui'\nimport WindowControls from \"../controllers/WindowControls.js\";\nimport Utils from '../controllers/Utils.js';\nimport SubthemeTree from \"./SubthemeTree.js\";\nimport UserStoryTable from \"./UserStoryTable.js\";\nimport DocList from \"./DocList.js\";\n\nexport default class Window extends Component {\n\n  buildBlock(block)\n  {\n    if(Utils.isEmpty(block)) return <pre>{JSON.stringify}</pre>;\n\n    if (block.type === \"subthemes\") return <SubthemeTree key={Utils.guid()} content={block} app={this.props.app} />\n    if (block.type === \"stories\") return <UserStoryTable key={Utils.guid()} content={block.content} app={this.props.app}/>\n    if (block.type === \"docs\") return <DocList key={Utils.guid()} content={block} app={this.props.app}/>\n  \n    return <pre key={Utils.guid()}>{JSON.stringify(block,null,2)}</pre>;\n  }\n\n  buildBlocks(blocks) {\n    if(Utils.isEmpty(blocks)) return null;\n    return <>{blocks.map(block=>this.buildBlock(block))}</>\n  }\n\n  titleLabel(label)\n  {\n    if(Utils.isEmpty(label)) return null;\n  return <div className=\"titleLabel\">{label}</div>\n  }\n\n  render() {\n    let content = WindowControls.loadWindowContent(this.props.app);\n    return (\n      <Pane >\n        <Dialog \n          width={1080}\n          isShown={WindowControls.isOpen(this.props.app)}\n          title={<Text className=\"WindowTitle\">\n            <img alt=\"\" src={'./img/' + content.type + '.png'} />\n            {this.titleLabel(content.titleLabel)}\n            <Heading fontFamily=\"Proxima\">{content.title}</Heading>\n          </Text>}\n          onCloseComplete={WindowControls.isClosed.bind(this.props.app)}\n          hasFooter={false}\n          hasHeader={true}\n          preventBodyScrolling\n        >\n  <Pane width=\"100%\" className=\"infoBox\" >{this.buildBlocks(content.blocks)}<hr/><pre>{JSON.stringify(this.props.app.state.config,null,2)}</pre><hr/><pre>{JSON.stringify(content,null,2)}</pre></Pane>\n        </Dialog>\n      </Pane>)\n  }\n}\n","import Query from \"../models/Query\";\nimport Utils from \"./Utils\";\nimport config from '../config.json';\nexport default class SearchControls {\n\n    static isOpen = function (app) {\n\n        let state = app.getUIState(\"search\");\n        return state.isOpen;\n    }\n\n    static isClosed = function () {\n\n        this.setUIState(\"search\", { isOpen: false })\n    }\n\n\n    static searchResults = function(app)\n    {\n        \n        let state = app.getUIState(\"search\");\n        let query = state.query;\n\n        if(Utils.isEmpty(query)) return null;\n        if(query.length<3) return 1;\n\n        let results = this.loadAllItems(app);\n        return SearchControls.filterResults(app,results,query);\n    }\n\n\n\n    static loadAllItems = function (app) {\n\n        let elements = config.elements;\n        let items = [];\n        for (let key in elements) {\n            let query = new Query({ app: app, query: key });\n            let fieldkey = config.elements[key].field;\n            if (config.elements[key].searchfield !== undefined) fieldkey = config.elements[key].searchfield;\n            let segment = query.objects.map(item => (\n                { \"value\": item.data.id, \"label\": item.data[fieldkey], type: key, badge: config.elements[key].label, color: config.elements[key].color }\n            ))\n            items = items.concat(segment);\n        }\n        return items;\n    }\n\n\n    static filterResults = function (app,results,query) {\n        let filtered = [];\n        let regex = new RegExp(query,'ig');\n        for(let i in results)\n        {\n            if (regex.test(results[i].label)) \n                filtered.push(results[i]);\n        }\n\n       // let search = app.getUIState(\"search\");\n        return filtered;\n    }\n\n    static selectSearchResult = function (selection) {\n\n\n    }\n\n    static onChange = function (event) {\n        this.setUIState(\"search\", { isOpen: true, query: event.target.value, index: 0, count: 0 });\n    }\n\n\n\n    static onMoveDown = function (app) {\n        let search = app.getUIState(\"search\");\n        search.index++;\n        if(search.index>(search.count-1)) search.index = 0;\n        app.setUIState(\"search\", search);\n    }\n\n\n    static onMoveUp = function (app) {\n        let search = app.getUIState(\"search\");\n        search.index--;\n        if(search.index<0) search.index = 0;\n        app.setUIState(\"search\", search);\n    }\n\n\n    static onSelect = function (app) {\n\n        let search = app.getUIState(\"search\");\n        if(!search.isOpen) return false;\n        let selection = SearchControls.searchResults(app)[search.index];\n\n        let state = app.state;\n\n        state.state.ui.search= {\n            isOpen: false,\n            query: null,\n            index: null,\n            count: null\n          };\n          state.state.ui.infoBox= {\n            isOpen: true,\n            type: selection.type,\n            id: selection.value\n          };\n\n          app.setState(state);\n\n    }\n\n\n\n}","\nimport React, { Component } from 'react';\nimport { Pane, Dialog, SearchInput, Badge } from 'evergreen-ui'\nimport SearchControls from \"../controllers/SearchControls.js\";\nimport Utils from '../controllers/Utils.js';\n\nexport default class Search extends Component {\n\n\n\n    componentDidUpdate(){\n\n        let search = this.props.app.getUIState(\"search\");\n        search.count = this.resultCount;\n    }\n\n    render() {\n\n\n        let results = this.props.results;\n         if(Array.isArray(results))\n        {\n            if(results.length===0) results = <NoResults  key={Utils.guid()}  app={this.props.app} />;\n            else results = results.map((item,seq) => <SearchResult  key={Utils.guid()}  seq={seq} item={item} app={this.props.app} />);\n        } \n        else if(results===1) results = <Loading  key={Utils.guid()} />\n        else results = null;\n\n        this.resultCount = (Array.isArray(results)) ? results.length : 0;\n\n        return (\n            <Pane>\n                <Dialog\n                    width={1080}\n                    isShown={SearchControls.isOpen(this.props.app)}\n                    title={<SearchInput\n                        autoFocus\n                        className=\"searchBar\"\n                        onChange={SearchControls.onChange.bind(this.props.app)}\n                        fontWeight={800} placeholder=\"Search\" width=\"100%\" height={60} />}\n                    onCloseComplete={SearchControls.isClosed.bind(this.props.app)}\n                    hasFooter={false}\n                    hasHeader={true}\n                    preventBodyScrolling\n                >\n                    <Pane width=\"100%\">{results}</Pane>\n                </Dialog>\n            </Pane>)\n    }\n}\nclass SearchResult extends Component {\n\n\n    render() {\n        let item = this.props.item;\n        let seq = this.props.seq;\n        let state = this.props.app.getUIState(\"search\");\n        let className = (state.index===seq) ? \"active\" : \"\";\n        return (\n            <Pane className={\"searchResult \"+className}  key={Utils.guid()} >\n                <div className=\"CardHeading\"><img alt=\"\" src={'./img/' + item.type + '.png'} /><Badge color={item.color} isSolid marginRight=\"1em\">{item.badge}</Badge>{this.highlight(item.label)}</div>\n            </Pane>)\n    }\n\n\n    highlight(text) {\n        if (Utils.isEmpty(text)) return null;\n        let regex = new RegExp('(' + this.props.app.getUIState(\"search\").query + ')', 'ig');\n        return text.split(regex).map((part, i) => {\n            if (i % 2) return <span key={Utils.guid()}  className=\"searchHighlight\">{part}</span>\n            return <span  key={Utils.guid()} >{part}</span>;\n        });\n    }\n}\n\nclass Loading extends Component {\n\n    render()\n    {\n        return <div align=\"center\"><img src={\"./img/search.gif\"} alt=\"search\"/><br/>Searching...</div>\n    }\n\n}\nclass NoResults extends Component {\n\n    render()\n    {\n    return <div align=\"center\">No results found for “{this.props.app.getUIState(\"search\").query}”.</div>\n    }\n\n}","\nimport React, { Component } from 'react';\nimport { Pane, SideSheet,  Heading, Position } from 'evergreen-ui'\nimport NavControls from \"../controllers/NavControls.js\";\nimport Utils from \"../controllers/Utils.js\";\nimport config from '../config.json';\n\nexport default class CornerBox extends Component {\n\n    render() {\n\n        let recipes = config.cookbook.map((item,i) =>\n            <Pane\n                key={Utils.guid()}\n                className=\"Recipe\"\n                marginTop={20}\n                border\n                padding=\"1em\"\n                overflow=\"auto\"\n                cursor=\"pointer\"\n                background=\"#EFEFEF\"\n                borderColor=\"#AAA\"\n                borderRadius=\"1em\"\n                onClick={this.props.app.loadConfigs.bind(this.props.app,item)}\n            >\n                <img alt=\"icon\" src={\"img/cookbook/\"+item.icon+\".png\"} className=\"cookBookIcon\" />\n                <Heading size={600} color=\"#825eeb\" fontWeight={800} fontFamily='Proxima' marginBottom={10}>{item.title}</Heading>\n                    <Pane>{item.description}</Pane>\n            </Pane>);\n\n\n        return (\n            <SideSheet\n                position={Position.LEFT}\n                isShown={NavControls.cookbookisOpen(this.props.app)}\n                onCloseComplete={NavControls.cookbookisClosed.bind(this.props.app)}\n            >\n                <Pane padding=\"2em\" >\n                    <Heading size={900} color=\"#825eeb\" fontWeight={800} fontFamily='Proxima' align=\"center\">Cook Book</Heading>\n\n                    {recipes}\n                </Pane>\n            </SideSheet>\n        )\n    }\n}","import React, { Component } from 'react';\n\nimport NavBar from './NavBar.js'\nimport Cards from './Cards.js'\nimport Window from './Window.js'\nimport Search from './Search.js'\nimport CookBook from './CookBook.js'\nimport SearchControls from '../controllers/SearchControls.js'\n\nexport default class Explorer extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <NavBar app={this.props.app} />\n        <Cards app={this.props.app} />\n        <Window app={this.props.app} />\n        <Search app={this.props.app} results={SearchControls.searchResults(this.props.app)}/>\n        <CookBook app={this.props.app} />\n\n\n      </div>\n    );\n  }\n\n}","\nimport Utils from './Utils';\nimport SearchControls from './SearchControls';\n\nexport default class AppController {\n\n\n    static loadMasterData() {\n        return fetch(\"./data/calls.json\")\n            .then(response => response.json())\n            .then(json => {\n                const data = {};\n                for (let key in json) {\n                    if (data[key] === undefined) {\n                        data[key] = [];\n                    }\n                    for (let i in json[key]) {\n                        const item = json[key][i];\n                        item.fields.id = item.id;\n                        data[key][i] = item.fields;\n                        if (!data.idIndex) {\n                            data.idIndex = {};\n                        }\n                        data.idIndex[item.id] = [key, parseInt(i)];\n                    }\n                }\n                //console.log(\"[LOG] data\", data);\n                this.setState({ masterData: data });\n                //this.setState({ masterData: data }, () => setTimeout(this.loadMasterData.bind(this), 60000))\n            });\n    }\n\n\n    static inputScratch(key, val) {\n        let state = this.state;\n        if (Array.isArray(state.scratch[key])) {\n            state.scratch[key].push(val);\n            state.scratch[key] = Utils.dedupe(state.scratch[key]);\n        }\n        else {\n            state.scratch[key] = val;\n        }\n        this.setState(state);\n    }\n\n    static setUIConfig(key, val) {\n        let state = this.state;\n        state.config.ui[key] = val;\n        this.setState(state, function () {\n             //console.log(\"NEW CONFIG\",this.state.config);\n        });\n    }\n\n    static getUIState(key, val) {\n        let state = this.state;\n        return state.state.ui[key];\n    }\n\n    static setUIState(key, val) {\n        let state = this.state;\n        state.state.ui[key] = val;\n        this.setState(state, function () {\n            // console.log(\"NEW CONFIG\",this.state.config);\n        });\n    }\n\n    static getUIConfig(key, val) {\n        let state = this.state;\n        return state.config.ui[key];\n    }\n\n    static setFilter(field, criteria, type) {\n\n\n        if (field === undefined) return false;\n        if (type === undefined) type = \"blacklist\";\n        if (criteria === undefined) criteria = [];\n\n        let filters = this.state.config.filters;\n        let found = false;\n        if (filters === undefined) filters = [];\n        filters.forEach((filter, i) => {\n            if (filter.field === field) {\n                found = true;\n                filters[i] = { field: field, criteria: criteria, type: type }\n            }\n        });\n        if (found === false) {\n            filters.push({ field: field, criteria: criteria, type: type });\n        }\n        let state = this.state;\n        state.config.filters = filters;\n        this.setState(state);\n    }\n\n    static getFilter(field) {\n        let filters = this.state.config.filters;\n        for (let i in filters) {\n            if (filters[i].field === field) return filters[i];\n        }\n        return { field: field, criteria: [], type: \"whitelist\" };\n    }\n    static deleteFilter(field) {\n        let filters = this.state.config.filters;\n        let newfilters = [];\n        for (let i in filters) {\n            if (filters[i].field === field) continue;\n            newfilters.push(filters[i]);\n        }\n        let state = this.state;\n        state.config.filters = newfilters;\n        this.setState(state);\n    }\n\n    static getItemFromIndex(id) {\n        try {\n            if (typeof id === \"object\") {\n                return id;\n            }\n            const index = this.state.masterData.idIndex[id];\n            return index === undefined ? null : this.state.masterData[index[0]][index[1]];\n        } catch (e) {\n            if (this.log) {\n                console.log(\n                    `[SEVERE] getting item from index by id ${id} did not succeed `,\n                    this.state.masterData,\n                    e\n                );\n            }\n        }\n    }\n\n    static loadConfigs(configs)\n    {\n        let state = this.state;\n        state.config.filters=configs.config.filters;\n        state.config.ui=configs.config.ui;\n        state.state.ui.cookbook.isOpen=false;\n        state.state.ui.infoBox.isOpen=false;\n        state.state.ui.search.isOpen=false;\n        this.setState(state);\n    }\n\n    static onKeyDown(keyEvent) {\n        \n        if(keyEvent.metaKey) return null;\n        if(keyEvent.ctrlKey ) return null;\n        if(keyEvent.code === \"Escape\") return null;\n        if(keyEvent.code === \"Enter\") return AppController.onEnter(this);\n        if(keyEvent.code === \"ArrowUp\") return AppController.onUp(this);\n        if(keyEvent.code === \"ArrowDown\") return AppController.onDown(this);\n\n        let searchState = this.getUIState(\"search\");\n        if (/^[0-9A-z]$/.test(keyEvent.key) && !searchState.isOpen) {\n\n            this.setUIState(\"search\", {\n                isOpen: true,\n                query: null,\n                index: null\n            })\n        }\n    }\n\n\n    static onDown(app) {\n        SearchControls.onMoveDown(app);\n    }\n        \n    static onUp(app) {\n\n        SearchControls.onMoveUp(app);\n    }\n        \n    static onEnter(app)\n    {\n        SearchControls.onSelect(app)\n    }\n\n\n    static buildURL()\n    {\n\n    }\n\n}\n","import React, { Component } from 'react';\nimport Explorer from \"./components/Explorer.js\";\nimport AppController from './controllers/AppController';\n\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.model = null;\n    this.state = {\n      masterData: null,\n      config: {\n        filters: [\n          //{ field: \"timeframe\", criteria: [\"Now\", \"Done\"], type: \"whitelist\" },\n          // { field: \"timeframe\", criteria: [\"Done\"], type: \"blacklist\" }\n        ],\n        ui: {\n          cards: \"theme\",\n          filter: \"objectives\",\n          grouping: \"supertheme\",\n          label: null,\n        }\n      },\n      state: {\n        width: 0,\n        ui: {\n          search: {\n            isOpen: false,\n            query: null,\n            index: null,\n            count: null\n          },\n          cookbook: {\n            isOpen: false,\n            content: null\n          },\n          infoBox: {\n            isOpen: false,\n            type: null,\n            id: null\n          }\n        }\n      }\n    }\n  }\n  loadMasterData = AppController.loadMasterData.bind(this)\n  setFilter = AppController.setFilter.bind(this)\n  setUIConfig = AppController.setUIConfig.bind(this)\n  getUIConfig = AppController.getUIConfig.bind(this)\n  setUIState = AppController.setUIState.bind(this)\n  getUIState = AppController.getUIState.bind(this)\n  deleteFilter = AppController.deleteFilter.bind(this)\n  getFilter = AppController.getFilter.bind(this)\n  getItemFromIndex = AppController.getItemFromIndex.bind(this)\n  inputScratch = AppController.inputScratch.bind(this)\n  loadConfigs = AppController.loadConfigs.bind(this)\n\n\n  render() {\n    if (this.state.masterData === null) return <div>Loading...</div>;\n    return (\n      <Explorer app={this} />\n    );\n  }\n\n\n\n  componentDidMount() {\n    this.loadMasterData();\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions.bind(this));\n    document.addEventListener(\"keydown\", AppController.onKeyDown.bind(this));\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions.bind(this));\n    document.removeEventListener(\"keydown\", AppController.onKeyDown.bind(this));\n  }\n\n  updateWindowDimensions() {\n    let state = this.state;\n    state.state.ui.width = window.innerWidth;\n    this.setState(state);\n  }\n\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}