{"ast":null,"code":"import _classCallCheck from\"/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import config from'../config.json';var Utils=/*#__PURE__*/function(){function Utils(){_classCallCheck(this,Utils);}_createClass(Utils,null,[{key:\"dedupe\",value:function dedupe(items){var unique={};items.forEach(function(i){if(!unique[i]){unique[i]=true;}});return Object.keys(unique);}},{key:\"guid\",value:function guid(){return'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=Math.random()*16|0,v=c==='x'?r:r&0x3&0x8;return v.toString(16);});}},{key:\"removeFromArray\",value:function removeFromArray(array,value){var index=array.indexOf(value);if(index>-1){array.splice(index,1);}return array;}},{key:\"isEmpty\",value:function isEmpty(value){if(value===undefined)return true;if(value===null)return true;if(value===\"\")return true;if(value===[])return true;if(value==={})return true;if(/^\\s*$/.test(value))return true;return false;}},{key:\"sortFieldArray\",value:function sortFieldArray(array,field){array=array.sort(function(x,y){var model=config.sorting[field];var key=0;if(Utils.isEmpty(model))return 0;var indexX=model.indexOf(x);var indexY=model.indexOf(y);if(indexX===-1||indexY===-1)return 0;if(indexX<indexY)key=1;if(indexX<indexY)key=-1;return key;});//console.log(array);\nreturn array;}},{key:\"sortObjectByKey\",value:function sortObjectByKey(object,key){return object;}},{key:\"stringToIndex\",value:function stringToIndex(str,length){var hash=this.hash(str);return Math.abs(parseInt(hash)%length+1);}},{key:\"hash\",value:function hash(val){var hash=0,i,chr;if(val.length===0)return hash;for(i=0;i<val.length;i++){chr=val.charCodeAt(i);hash=(hash<<5)-hash+chr;hash|=0;// Convert to 32bit integer\n}return hash;}},{key:\"lowerCase\",value:function lowerCase(str){str=str.toLowerCase();var caps=config.caps;for(var i in config.caps){str=str.replace(i,caps[i]);}return str;}},{key:\"getLabelColor\",value:function getLabelColor(labelValue){var colorMap=config.colors;if(colorMap[labelValue]===undefined){var bank=config.colorBank;var i=Utils.stringToIndex(labelValue+bank.join(\"\"),bank.length);return bank[i];}return colorMap[labelValue];}}]);return Utils;}();export{Utils as default};","map":{"version":3,"sources":["/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/src/controllers/Utils.js"],"names":["config","Utils","items","unique","forEach","i","Object","keys","replace","c","r","Math","random","v","toString","array","value","index","indexOf","splice","undefined","test","field","sort","x","y","model","sorting","key","isEmpty","indexX","indexY","object","str","length","hash","abs","parseInt","val","chr","charCodeAt","toLowerCase","caps","labelValue","colorMap","colors","bank","colorBank","stringToIndex","join"],"mappings":"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","sourcesContent":["\nimport config from '../config.json';\nexport default class Utils {\n\n  static dedupe(items) {\n    let unique = {};\n    items.forEach(function (i) {\n      if (!unique[i]) {\n        unique[i] = true;\n      }\n    });\n    return Object.keys(unique);\n  }\n\n  static guid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 & 0x8);\n      return v.toString(16);\n    });\n  }\n\n  static removeFromArray(array, value) {\n    const index = array.indexOf(value);\n    if (index > -1) {\n      array.splice(index, 1);\n    }\n    return array;\n  }\n\n\n  static isEmpty(value) {\n\n    if (value === undefined) return true;\n    if (value === null) return true;\n    if (value === \"\") return true;\n    if (value === []) return true;\n    if (value === {}) return true;\n    if (/^\\s*$/.test(value)) return true;\n    return false;\n  }\n\n  static sortFieldArray(array, field) {\n    array = array.sort(function (x, y) {\n      let model = config.sorting[field];\n      let key = 0;\n      if (Utils.isEmpty(model)) return  0;\n      let indexX = model.indexOf(x);\n      let indexY = model.indexOf(y);\n      if (indexX === -1 || indexY === -1 ) return 0;\n      if (indexX < indexY) key =  1;\n      if (indexX < indexY) key =  -1;\n      return key;\n    });\n    //console.log(array);\n    return array;\n  }\n\n  static sortObjectByKey(object, key) {\n\n    return object;\n  }\n\n\n  static stringToIndex(str, length) {\n\n    let hash = this.hash(str);\n    return Math.abs(parseInt(hash) % length + 1)\n  }\n\n  static hash(val) {\n    var hash = 0, i, chr;\n    if (val.length === 0) return hash;\n    for (i = 0; i < val.length; i++) {\n      chr = val.charCodeAt(i);\n      hash = ((hash << 5) - hash) + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n    return hash;\n  }\n\n\n  static lowerCase(str) {\n    str = str.toLowerCase();\n    let caps = config.caps;\n    for (let i in config.caps) str = str.replace(i,caps[i]);\n    return str;\n  }\n\n\n  static getLabelColor(labelValue) {\n    let colorMap = config.colors;\n    if (colorMap[labelValue] === undefined) {\n      let bank = config.colorBank;\n      let i = Utils.stringToIndex(labelValue + bank.join(\"\"), bank.length)\n      return bank[i];\n    }\n    return colorMap[labelValue];\n\n  }\n\n}"]},"metadata":{},"sourceType":"module"}