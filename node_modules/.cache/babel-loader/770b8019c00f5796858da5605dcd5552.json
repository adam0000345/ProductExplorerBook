{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport Badge from './Badge';\n\nvar Pill =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Pill, _PureComponent);\n\n  function Pill() {\n    _classCallCheck(this, Pill);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Pill).apply(this, arguments));\n  }\n\n  _createClass(Pill, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Badge, _extends({\n        borderRadius: 999\n      }, this.props));\n    }\n  }]);\n\n  return Pill;\n}(PureComponent);\n\nPill.displayName = \"Pill\";\n\n_defineProperty(Pill, \"propTypes\", _objectSpread({}, Badge.propTypes));\n\nexport { Pill as default };","map":{"version":3,"sources":["../../../src/badges/src/Pill.js"],"names":["Pill","PureComponent","Badge","propTypes"],"mappings":";;;;;;;;AAAA,OAAA,KAAA,IAAA,aAAA,QAAA,OAAA;AACA,OAAA,KAAA,MAAA,SAAA;;IAEqBA,I;;;;;;;;;;;;;6BAKV;AACP,aAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAO,QAAA,YAAY,EAAE;AAArB,OAAA,EAA8B,KAArC,KAAO,CAAA,CAAP;AACD;;;;EAP+BC,a;;AAAbD,I,YAAAA,G,MAAAA;;gBAAAA,I,iCAEdE,KAAK,CAACC,S;;SAFQH,I","sourcesContent":["import React, { PureComponent } from 'react'\nimport Badge from './Badge'\n\nexport default class Pill extends PureComponent {\n  static propTypes = {\n    ...Badge.propTypes\n  }\n\n  render() {\n    return <Badge borderRadius={999} {...this.props} />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}