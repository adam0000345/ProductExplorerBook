{"ast":null,"code":"import Utils from './Utils';\nimport SearchControls from './SearchControls';\nexport default class AppController {\n  static loadMasterData() {\n    return fetch(\"./data/calls.json\").then(response => response.json()).then(json => {\n      const data = {};\n\n      for (let key in json) {\n        if (data[key] === undefined) {\n          data[key] = [];\n        }\n\n        for (let i in json[key]) {\n          const item = json[key][i];\n          item.fields.id = item.id;\n          data[key][i] = item.fields;\n\n          if (!data.idIndex) {\n            data.idIndex = {};\n          }\n\n          data.idIndex[item.id] = [key, parseInt(i)];\n        }\n      } //console.log(\"[LOG] data\", data);\n\n\n      this.setState({\n        masterData: data\n      }); //this.setState({ masterData: data }, () => setTimeout(this.loadMasterData.bind(this), 60000))\n    });\n  }\n\n  static inputScratch(key, val) {\n    let state = this.state;\n\n    if (Array.isArray(state.scratch[key])) {\n      state.scratch[key].push(val);\n      state.scratch[key] = Utils.dedupe(state.scratch[key]);\n    } else {\n      state.scratch[key] = val;\n    }\n\n    this.setState(state);\n  }\n\n  static setUIConfig(key, val) {\n    let state = this.state;\n    state.config.ui[key] = val;\n    this.setState(state, function () {//console.log(\"NEW CONFIG\",this.state.config);\n    });\n  }\n\n  static getUIState(key, val) {\n    let state = this.state;\n    return state.state.ui[key];\n  }\n\n  static setUIState(key, val) {\n    let state = this.state;\n    state.state.ui[key] = val;\n    this.setState(state, function () {// console.log(\"NEW CONFIG\",this.state.config);\n    });\n  }\n\n  static getUIConfig(key, val) {\n    let state = this.state;\n    return state.config.ui[key];\n  }\n\n  static setFilter(field, criteria, type) {\n    if (field === undefined) return false;\n    if (type === undefined) type = \"blacklist\";\n    if (criteria === undefined) criteria = [];\n    let filters = this.state.config.filters;\n    let found = false;\n    if (filters === undefined) filters = [];\n    filters.forEach((filter, i) => {\n      if (filter.field === field) {\n        found = true;\n        filters[i] = {\n          field: field,\n          criteria: criteria,\n          type: type\n        };\n      }\n    });\n\n    if (found === false) {\n      filters.push({\n        field: field,\n        criteria: criteria,\n        type: type\n      });\n    }\n\n    let state = this.state;\n    state.config.filters = filters;\n    this.setState(state);\n  }\n\n  static getFilter(field) {\n    let filters = this.state.config.filters;\n\n    for (let i in filters) {\n      if (filters[i].field === field) return filters[i];\n    }\n\n    return {\n      field: field,\n      criteria: [],\n      type: \"whitelist\"\n    };\n  }\n\n  static deleteFilter(field) {\n    let filters = this.state.config.filters;\n    let newfilters = [];\n\n    for (let i in filters) {\n      if (filters[i].field === field) continue;\n      newfilters.push(filters[i]);\n    }\n\n    let state = this.state;\n    state.config.filters = newfilters;\n    this.setState(state);\n  }\n\n  static getItemFromIndex(id) {\n    try {\n      if (typeof id === \"object\") {\n        return id;\n      }\n\n      const index = this.state.masterData.idIndex[id];\n      return index === undefined ? null : this.state.masterData[index[0]][index[1]];\n    } catch (e) {\n      if (this.log) {\n        console.log(`[SEVERE] getting item from index by id ${id} did not succeed `, this.state.masterData, e);\n      }\n    }\n  }\n\n  static loadConfigs(configs) {\n    let state = this.state;\n    state.config.filters = configs.config.filters;\n    state.config.ui = configs.config.ui;\n    state.state.ui.cookbook.isOpen = false;\n    state.state.ui.infoBox.isOpen = false;\n    state.state.ui.search.isOpen = false;\n    this.setState(state);\n  }\n\n  static onKeyDown(keyEvent) {\n    if (keyEvent.metaKey) return null;\n    if (keyEvent.ctrlKey) return null;\n    if (keyEvent.code === \"Escape\") return null;\n    if (keyEvent.code === \"Enter\") return AppController.onEnter(this);\n    if (keyEvent.code === \"ArrowUp\") return AppController.onUp(this);\n    if (keyEvent.code === \"ArrowDown\") return AppController.onDown(this);\n    let searchState = this.getUIState(\"search\");\n\n    if (/^[0-9A-z]$/.test(keyEvent.key) && !searchState.isOpen) {\n      this.setUIState(\"search\", {\n        isOpen: true,\n        query: null,\n        index: null\n      });\n    }\n  }\n\n  static onDown(app) {\n    SearchControls.onMoveDown(app);\n  }\n\n  static onUp(app) {\n    SearchControls.onMoveUp(app);\n  }\n\n  static onEnter(app) {\n    SearchControls.onSelect(app);\n  }\n\n  static buildURL() {}\n\n}","map":{"version":3,"sources":["/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/src/controllers/AppController.js"],"names":["Utils","SearchControls","AppController","loadMasterData","fetch","then","response","json","data","key","undefined","i","item","fields","id","idIndex","parseInt","setState","masterData","inputScratch","val","state","Array","isArray","scratch","push","dedupe","setUIConfig","config","ui","getUIState","setUIState","getUIConfig","setFilter","field","criteria","type","filters","found","forEach","filter","getFilter","deleteFilter","newfilters","getItemFromIndex","index","e","log","console","loadConfigs","configs","cookbook","isOpen","infoBox","search","onKeyDown","keyEvent","metaKey","ctrlKey","code","onEnter","onUp","onDown","searchState","test","query","app","onMoveDown","onMoveUp","onSelect","buildURL"],"mappings":"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","sourcesContent":["\nimport Utils from './Utils';\nimport SearchControls from './SearchControls';\n\nexport default class AppController {\n\n\n    static loadMasterData() {\n        return fetch(\"./data/calls.json\")\n            .then(response => response.json())\n            .then(json => {\n                const data = {};\n                for (let key in json) {\n                    if (data[key] === undefined) {\n                        data[key] = [];\n                    }\n                    for (let i in json[key]) {\n                        const item = json[key][i];\n                        item.fields.id = item.id;\n                        data[key][i] = item.fields;\n                        if (!data.idIndex) {\n                            data.idIndex = {};\n                        }\n                        data.idIndex[item.id] = [key, parseInt(i)];\n                    }\n                }\n                //console.log(\"[LOG] data\", data);\n                this.setState({ masterData: data });\n                //this.setState({ masterData: data }, () => setTimeout(this.loadMasterData.bind(this), 60000))\n            });\n    }\n\n\n    static inputScratch(key, val) {\n        let state = this.state;\n        if (Array.isArray(state.scratch[key])) {\n            state.scratch[key].push(val);\n            state.scratch[key] = Utils.dedupe(state.scratch[key]);\n        }\n        else {\n            state.scratch[key] = val;\n        }\n        this.setState(state);\n    }\n\n    static setUIConfig(key, val) {\n        let state = this.state;\n        state.config.ui[key] = val;\n        this.setState(state, function () {\n             //console.log(\"NEW CONFIG\",this.state.config);\n        });\n    }\n\n    static getUIState(key, val) {\n        let state = this.state;\n        return state.state.ui[key];\n    }\n\n    static setUIState(key, val) {\n        let state = this.state;\n        state.state.ui[key] = val;\n        this.setState(state, function () {\n            // console.log(\"NEW CONFIG\",this.state.config);\n        });\n    }\n\n    static getUIConfig(key, val) {\n        let state = this.state;\n        return state.config.ui[key];\n    }\n\n    static setFilter(field, criteria, type) {\n\n\n        if (field === undefined) return false;\n        if (type === undefined) type = \"blacklist\";\n        if (criteria === undefined) criteria = [];\n\n        let filters = this.state.config.filters;\n        let found = false;\n        if (filters === undefined) filters = [];\n        filters.forEach((filter, i) => {\n            if (filter.field === field) {\n                found = true;\n                filters[i] = { field: field, criteria: criteria, type: type }\n            }\n        });\n        if (found === false) {\n            filters.push({ field: field, criteria: criteria, type: type });\n        }\n        let state = this.state;\n        state.config.filters = filters;\n        this.setState(state);\n    }\n\n    static getFilter(field) {\n        let filters = this.state.config.filters;\n        for (let i in filters) {\n            if (filters[i].field === field) return filters[i];\n        }\n        return { field: field, criteria: [], type: \"whitelist\" };\n    }\n    static deleteFilter(field) {\n        let filters = this.state.config.filters;\n        let newfilters = [];\n        for (let i in filters) {\n            if (filters[i].field === field) continue;\n            newfilters.push(filters[i]);\n        }\n        let state = this.state;\n        state.config.filters = newfilters;\n        this.setState(state);\n    }\n\n    static getItemFromIndex(id) {\n        try {\n            if (typeof id === \"object\") {\n                return id;\n            }\n            const index = this.state.masterData.idIndex[id];\n            return index === undefined ? null : this.state.masterData[index[0]][index[1]];\n        } catch (e) {\n            if (this.log) {\n                console.log(\n                    `[SEVERE] getting item from index by id ${id} did not succeed `,\n                    this.state.masterData,\n                    e\n                );\n            }\n        }\n    }\n\n    static loadConfigs(configs)\n    {\n        let state = this.state;\n        state.config.filters=configs.config.filters;\n        state.config.ui=configs.config.ui;\n        state.state.ui.cookbook.isOpen=false;\n        state.state.ui.infoBox.isOpen=false;\n        state.state.ui.search.isOpen=false;\n        this.setState(state);\n    }\n\n    static onKeyDown(keyEvent) {\n        \n        if(keyEvent.metaKey) return null;\n        if(keyEvent.ctrlKey ) return null;\n        if(keyEvent.code === \"Escape\") return null;\n        if(keyEvent.code === \"Enter\") return AppController.onEnter(this);\n        if(keyEvent.code === \"ArrowUp\") return AppController.onUp(this);\n        if(keyEvent.code === \"ArrowDown\") return AppController.onDown(this);\n\n        let searchState = this.getUIState(\"search\");\n        if (/^[0-9A-z]$/.test(keyEvent.key) && !searchState.isOpen) {\n\n            this.setUIState(\"search\", {\n                isOpen: true,\n                query: null,\n                index: null\n            })\n        }\n    }\n\n\n    static onDown(app) {\n        SearchControls.onMoveDown(app);\n    }\n        \n    static onUp(app) {\n\n        SearchControls.onMoveUp(app);\n    }\n        \n    static onEnter(app)\n    {\n        SearchControls.onSelect(app)\n    }\n\n\n    static buildURL()\n    {\n\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}