{"ast":null,"code":"import Query from \"../models/Query\";\nimport Utils from \"./Utils\";\nexport default class WindowControls {\n  static openItemInBox(type, id) {\n    this.setUIState(\"infoBox\", {\n      isOpen: true,\n      type: type,\n      id: id\n    });\n  }\n\n}\n\nWindowControls.isOpen = function (app) {\n  return app.getUIState(\"infoBox\").isOpen;\n};\n\nWindowControls.isClosed = function () {\n  this.setUIState(\"infoBox\", {\n    isOpen: false\n  });\n};\n\nWindowControls.loadWindowContent = function (app) {\n  let infoBox = app.getUIState(\"infoBox\");\n  let type = infoBox.type;\n  let id = infoBox.id;\n  if (type === null) return {\n    title: null\n  };\n  let q = new Query({\n    app: app,\n    query: type,\n    selector: {\n      id: id\n    }\n  });\n  let object = q.objects[0]; //Should only be 1 returned if selected for by ID\n\n  if (Utils.isEmpty(object)) return {};\n  return object.infoBox();\n};","map":{"version":3,"sources":["/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/src/controllers/WindowControls.js"],"names":["Query","Utils","WindowControls","openItemInBox","type","id","setUIState","isOpen","app","getUIState","isClosed","loadWindowContent","infoBox","title","q","query","selector","object","objects","isEmpty"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,eAAe,MAAMC,cAAN,CAAqB;AA2BhC,SAAOC,aAAP,CAAqBC,IAArB,EAA0BC,EAA1B,EACA;AACI,SAAKC,UAAL,CAAgB,SAAhB,EAA2B;AAAEC,MAAAA,MAAM,EAAE,IAAV;AAAiBH,MAAAA,IAAI,EAAEA,IAAvB;AAA6BC,MAAAA,EAAE,EAAEA;AAAjC,KAA3B;AACH;;AA9B+B;;AAAfH,c,CAEVK,M,GAAS,UAAUC,GAAV,EAAe;AAE3B,SAAOA,GAAG,CAACC,UAAJ,CAAe,SAAf,EAA0BF,MAAjC;AACH,C;;AALgBL,c,CAOVQ,Q,GAAW,YAAY;AAE1B,OAAKJ,UAAL,CAAgB,SAAhB,EAA2B;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAA3B;AACH,C;;AAVgBL,c,CAYVS,iB,GAAoB,UAASH,GAAT,EAC3B;AAEI,MAAII,OAAO,GAAGJ,GAAG,CAACC,UAAJ,CAAe,SAAf,CAAd;AACA,MAAIL,IAAI,GAAGQ,OAAO,CAACR,IAAnB;AACA,MAAIC,EAAE,GAAGO,OAAO,CAACP,EAAjB;AACA,MAAGD,IAAI,KAAG,IAAV,EAAgB,OAAO;AAACS,IAAAA,KAAK,EAAC;AAAP,GAAP;AAChB,MAAIC,CAAC,GAAG,IAAId,KAAJ,CAAU;AAACQ,IAAAA,GAAG,EAACA,GAAL;AAASO,IAAAA,KAAK,EAACX,IAAf;AAAoBY,IAAAA,QAAQ,EAAC;AAACX,MAAAA,EAAE,EAACA;AAAJ;AAA7B,GAAV,CAAR;AACA,MAAIY,MAAM,GAAGH,CAAC,CAACI,OAAF,CAAU,CAAV,CAAb,CAPJ,CAO+B;;AAC3B,MAAGjB,KAAK,CAACkB,OAAN,CAAcF,MAAd,CAAH,EAA0B,OAAO,EAAP;AAC1B,SAAOA,MAAM,CAACL,OAAP,EAAP;AAEH,C","sourcesContent":["import Query from \"../models/Query\";\nimport Utils from \"./Utils\";\nexport default class WindowControls {\n\n    static isOpen = function (app) {\n\n        return app.getUIState(\"infoBox\").isOpen;\n    }\n\n    static isClosed = function () {\n\n        this.setUIState(\"infoBox\", { isOpen: false })\n    }\n\n    static loadWindowContent = function(app)\n    {\n\n        let infoBox = app.getUIState(\"infoBox\")\n        let type = infoBox.type;\n        let id = infoBox.id;\n        if(type===null) return {title:null};\n        let q = new Query({app:app,query:type,selector:{id:id}})\n        let object = q.objects[0]; //Should only be 1 returned if selected for by ID\n        if(Utils.isEmpty(object)) return {};\n        return object.infoBox();\n\n    }\n\n\n    static openItemInBox(type,id)\n    {\n        this.setUIState(\"infoBox\", { isOpen: true,  type: type, id: id});\n    }\n\n}"]},"metadata":{},"sourceType":"module"}