{"ast":null,"code":"var _jsxFileName = \"/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/src/components/Window.js\";\nimport React, { Component } from 'react';\nimport { Pane, Dialog, Text, Heading } from 'evergreen-ui';\nimport WindowControls from \"../controllers/WindowControls.js\";\nimport Utils from '../controllers/Utils.js';\nimport SubthemeTree from \"./SubthemeTree.js\";\nimport UserStoryTable from \"./UserStoryTable.js\";\nimport DocList from \"./DocList.js\";\nexport default class Window extends Component {\n  buildBlock(block) {\n    if (Utils.isEmpty(block)) return React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, JSON.stringify);\n    if (block.type === \"subthemes\") return React.createElement(SubthemeTree, {\n      key: Utils.guid(),\n      content: block,\n      app: this.props.app,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n    if (block.type === \"stories\") return React.createElement(UserStoryTable, {\n      key: Utils.guid(),\n      content: block.content,\n      app: this.props.app,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n    if (block.type === \"docs\") return React.createElement(DocList, {\n      key: Utils.guid(),\n      content: block,\n      app: this.props.app,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n    return React.createElement(\"pre\", {\n      key: Utils.guid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, JSON.stringify(block, null, 2));\n  }\n\n  buildBlocks(blocks) {\n    if (Utils.isEmpty(blocks)) return null;\n    return React.createElement(React.Fragment, null, blocks.map(block => this.buildBlock(block)));\n  }\n\n  titleLabel(label) {\n    if (Utils.isEmpty(label)) return null;\n    return React.createElement(\"div\", {\n      className: \"titleLabel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, label);\n  }\n\n  render() {\n    let content = WindowControls.loadWindowContent(this.props.app);\n    return React.createElement(Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      width: 1080,\n      isShown: WindowControls.isOpen(this.props.app),\n      title: React.createElement(Text, {\n        className: \"WindowTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"\",\n        src: './img/' + content.type + '.png',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), this.titleLabel(content.titleLabel), React.createElement(Heading, {\n        fontFamily: \"Proxima\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, content.title)),\n      onCloseComplete: WindowControls.isClosed.bind(this.props.app),\n      hasFooter: false,\n      hasHeader: true,\n      preventBodyScrolling: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Pane, {\n      width: \"100%\",\n      className: \"infoBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.buildBlocks(content.blocks), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, JSON.stringify(this.props.app.state.config, null, 2)), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, JSON.stringify(content, null, 2)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/src/components/Window.js"],"names":["React","Component","Pane","Dialog","Text","Heading","WindowControls","Utils","SubthemeTree","UserStoryTable","DocList","Window","buildBlock","block","isEmpty","JSON","stringify","type","guid","props","app","content","buildBlocks","blocks","map","titleLabel","label","render","loadWindowContent","isOpen","title","isClosed","bind","state","config"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,OAA7B,QAA4C,cAA5C;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,eAAe,MAAMC,MAAN,SAAqBV,SAArB,CAA+B;AAE5CW,EAAAA,UAAU,CAACC,KAAD,EACV;AACE,QAAGN,KAAK,CAACO,OAAN,CAAcD,KAAd,CAAH,EAAyB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAME,IAAI,CAACC,SAAX,CAAP;AAEzB,QAAIH,KAAK,CAACI,IAAN,KAAe,WAAnB,EAAgC,OAAO,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEV,KAAK,CAACW,IAAN,EAAnB;AAAiC,MAAA,OAAO,EAAEL,KAA1C;AAAiD,MAAA,GAAG,EAAE,KAAKM,KAAL,CAAWC,GAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAChC,QAAIP,KAAK,CAACI,IAAN,KAAe,SAAnB,EAA8B,OAAO,oBAAC,cAAD;AAAgB,MAAA,GAAG,EAAEV,KAAK,CAACW,IAAN,EAArB;AAAmC,MAAA,OAAO,EAAEL,KAAK,CAACQ,OAAlD;AAA2D,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,GAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAC9B,QAAIP,KAAK,CAACI,IAAN,KAAe,MAAnB,EAA2B,OAAO,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEV,KAAK,CAACW,IAAN,EAAd;AAA4B,MAAA,OAAO,EAAEL,KAArC;AAA4C,MAAA,GAAG,EAAE,KAAKM,KAAL,CAAWC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAE3B,WAAO;AAAK,MAAA,GAAG,EAAEb,KAAK,CAACW,IAAN,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBH,IAAI,CAACC,SAAL,CAAeH,KAAf,EAAqB,IAArB,EAA0B,CAA1B,CAAzB,CAAP;AACD;;AAEDS,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,QAAGhB,KAAK,CAACO,OAAN,CAAcS,MAAd,CAAH,EAA0B,OAAO,IAAP;AAC1B,WAAO,0CAAGA,MAAM,CAACC,GAAP,CAAWX,KAAK,IAAE,KAAKD,UAAL,CAAgBC,KAAhB,CAAlB,CAAH,CAAP;AACD;;AAEDY,EAAAA,UAAU,CAACC,KAAD,EACV;AACE,QAAGnB,KAAK,CAACO,OAAN,CAAcY,KAAd,CAAH,EAAyB,OAAO,IAAP;AAC3B,WAAO;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BA,KAA7B,CAAP;AACC;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIN,OAAO,GAAGf,cAAc,CAACsB,iBAAf,CAAiC,KAAKT,KAAL,CAAWC,GAA5C,CAAd;AACA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE,IADT;AAEE,MAAA,OAAO,EAAEd,cAAc,CAACuB,MAAf,CAAsB,KAAKV,KAAL,CAAWC,GAAjC,CAFX;AAGE,MAAA,KAAK,EAAE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL;AAAK,QAAA,GAAG,EAAC,EAAT;AAAY,QAAA,GAAG,EAAE,WAAWC,OAAO,CAACJ,IAAnB,GAA0B,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,EAEJ,KAAKQ,UAAL,CAAgBJ,OAAO,CAACI,UAAxB,CAFI,EAGL,oBAAC,OAAD;AAAS,QAAA,UAAU,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BJ,OAAO,CAACS,KAAvC,CAHK,CAHT;AAQE,MAAA,eAAe,EAAExB,cAAc,CAACyB,QAAf,CAAwBC,IAAxB,CAA6B,KAAKb,KAAL,CAAWC,GAAxC,CARnB;AASE,MAAA,SAAS,EAAE,KATb;AAUE,MAAA,SAAS,EAAE,IAVb;AAWE,MAAA,oBAAoB,MAXtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaN,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC,KAAKE,WAAL,CAAiBD,OAAO,CAACE,MAAzB,CAAzC,EAA0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1E,EAA+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMR,IAAI,CAACC,SAAL,CAAe,KAAKG,KAAL,CAAWC,GAAX,CAAea,KAAf,CAAqBC,MAApC,EAA2C,IAA3C,EAAgD,CAAhD,CAAN,CAA/E,EAA8I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9I,EAAmJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMnB,IAAI,CAACC,SAAL,CAAeK,OAAf,EAAuB,IAAvB,EAA4B,CAA5B,CAAN,CAAnJ,CAbM,CADF,CADF;AAkBD;;AA5C2C","sourcesContent":["\nimport React, { Component } from 'react';\nimport { Pane, Dialog, Text, Heading } from 'evergreen-ui'\nimport WindowControls from \"../controllers/WindowControls.js\";\nimport Utils from '../controllers/Utils.js';\nimport SubthemeTree from \"./SubthemeTree.js\";\nimport UserStoryTable from \"./UserStoryTable.js\";\nimport DocList from \"./DocList.js\";\n\nexport default class Window extends Component {\n\n  buildBlock(block)\n  {\n    if(Utils.isEmpty(block)) return <pre>{JSON.stringify}</pre>;\n\n    if (block.type === \"subthemes\") return <SubthemeTree key={Utils.guid()} content={block} app={this.props.app} />\n    if (block.type === \"stories\") return <UserStoryTable key={Utils.guid()} content={block.content} app={this.props.app}/>\n    if (block.type === \"docs\") return <DocList key={Utils.guid()} content={block} app={this.props.app}/>\n  \n    return <pre key={Utils.guid()}>{JSON.stringify(block,null,2)}</pre>;\n  }\n\n  buildBlocks(blocks) {\n    if(Utils.isEmpty(blocks)) return null;\n    return <>{blocks.map(block=>this.buildBlock(block))}</>\n  }\n\n  titleLabel(label)\n  {\n    if(Utils.isEmpty(label)) return null;\n  return <div className=\"titleLabel\">{label}</div>\n  }\n\n  render() {\n    let content = WindowControls.loadWindowContent(this.props.app);\n    return (\n      <Pane >\n        <Dialog \n          width={1080}\n          isShown={WindowControls.isOpen(this.props.app)}\n          title={<Text className=\"WindowTitle\">\n            <img alt=\"\" src={'./img/' + content.type + '.png'} />\n            {this.titleLabel(content.titleLabel)}\n            <Heading fontFamily=\"Proxima\">{content.title}</Heading>\n          </Text>}\n          onCloseComplete={WindowControls.isClosed.bind(this.props.app)}\n          hasFooter={false}\n          hasHeader={true}\n          preventBodyScrolling\n        >\n  <Pane width=\"100%\" className=\"infoBox\" >{this.buildBlocks(content.blocks)}<hr/><pre>{JSON.stringify(this.props.app.state.config,null,2)}</pre><hr/><pre>{JSON.stringify(content,null,2)}</pre></Pane>\n        </Dialog>\n      </Pane>)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}