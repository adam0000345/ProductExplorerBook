{"ast":null,"code":"import _classCallCheck from\"/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Button,Pane,Text,Badge,Pill}from'evergreen-ui';import CardControls from'../controllers/CardControls';import Utils from'../controllers/Utils';var Cards=/*#__PURE__*/function(_Component){_inherits(Cards,_Component);function Cards(){_classCallCheck(this,Cards);return _possibleConstructorReturn(this,_getPrototypeOf(Cards).apply(this,arguments));}_createClass(Cards,[{key:\"render\",value:function render(){var item=this.props.cardData;if(CardControls.cardNotInGroup(this.props.app,this.props.cardData,this.props.group))return null;var max=1+Math.floor(Math.random()*20);var bottom=[];for(var i=1;i<=max;i++){bottom.push(React.createElement(\"div\",null,\"ddd\"));}return React.createElement(Pane,{elevation:3,width:this.props.width,background:\"#FFF\",borderRadius:15,className:\"Card\",onClick:CardControls.onClickCard.bind(this.props.app,this.props.cardData)},this.label(this.props.cardData),React.createElement(Text,{className:\"CardHeading\"},React.createElement(\"img\",{alt:\"\",src:'./img/'+item.type+'.png'}),this.heading(item)),this.cardPreview(this.props.app,this.props.cardData.preview));}},{key:\"heading\",value:function heading(item){var object=CardControls.buildHeading(item);if(Utils.isEmpty(object.highlight))return object.heading;var frontandback=object.heading.split(object.highlight);return React.createElement(\"span\",{className:\"cardHeadingNoHighlight\"},frontandback[0],React.createElement(\"span\",{className:\"cardHeadingHighlight\"},object.highlight),frontandback[1]);}},{key:\"label\",value:function label(card){if(!CardControls.hasLabel(this.props.app))return null;var label=CardControls.getCardLabel(this.props.app,card);if(Utils.isEmpty(label))return null;return React.createElement(Badge,{color:label.color},label.label);}},{key:\"cardPreview\",value:function cardPreview(app,previewData){if(Utils.isEmpty(previewData))return null;if(Utils.isEmpty(previewData.type))return null;if(previewData.type===\"tree\")return React.createElement(\"div\",{className:\"cardPreview\"},React.createElement(Tree,{app:app,data:previewData}));if(previewData.type===\"status\")return React.createElement(\"div\",{className:\"cardPreview\"},React.createElement(Status,{app:app,data:previewData}));return;}}]);return Cards;}(Component);export{Cards as default};var Tree=/*#__PURE__*/function(_Component2){_inherits(Tree,_Component2);function Tree(){var _this;_classCallCheck(this,Tree);_this=_possibleConstructorReturn(this,_getPrototypeOf(Tree).call(this));_this.state={open:false};return _this;}_createClass(Tree,[{key:\"render\",value:function render(){var _this2=this;var data=this.props.data;if(!this.state.open)return React.createElement(Button,{onClick:this.openTree.bind(this)},React.createElement(Pill,{display:\"inline-flex\",margin:8},data.buttonNumber),\" \",data.buttonLabel);return React.createElement(\"div\",{className:\"tree\"},data.tree.map(function(branch){return _this2.branch(branch);}));}},{key:\"openTree\",value:function openTree(e){e.stopPropagation();this.setState({open:true});}},{key:\"branch\",value:function branch(_branch){return React.createElement(\"div\",{key:Utils.guid(),className:\"branch\"},React.createElement(\"img\",{alt:\"\",src:'./img/'+_branch.type+'.png'}),_branch.label);}}]);return Tree;}(Component);var Status=/*#__PURE__*/function(_Component3){_inherits(Status,_Component3);function Status(){_classCallCheck(this,Status);return _possibleConstructorReturn(this,_getPrototypeOf(Status).apply(this,arguments));}_createClass(Status,[{key:\"render\",value:function render(){var data=this.props.data;if(data===null)return null;if(data.done===true)return this.pastStatus(data);return this.futureStatus(data);}},{key:\"pastStatus\",value:function pastStatus(data){return React.createElement(\"div\",{className:\"status\"},React.createElement(Badge,{marginRight:10,isSolid:true},data.label),React.createElement(\"br\",null),React.createElement(Badge,null,\"v\",data.version),React.createElement(\"span\",null,\"\\xA0\"),React.createElement(Badge,{marginRight:10},data.date));}},{key:\"futureStatus\",value:function futureStatus(data){return React.createElement(\"div\",{className:\"status\"},React.createElement(\"span\",null,\"Working on it:\"),\" \",React.createElement(Badge,{isSolid:true,color:data.timeframeColor},data.timeframe));}}]);return Status;}(Component);","map":{"version":3,"sources":["/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/src/components/Card.js"],"names":["React","Component","Button","Pane","Text","Badge","Pill","CardControls","Utils","Cards","item","props","cardData","cardNotInGroup","app","group","max","Math","floor","random","bottom","i","push","width","onClickCard","bind","label","type","heading","cardPreview","preview","object","buildHeading","isEmpty","highlight","frontandback","split","card","hasLabel","getCardLabel","color","previewData","Tree","state","open","data","openTree","buttonNumber","buttonLabel","tree","map","branch","e","stopPropagation","setState","guid","Status","done","pastStatus","futureStatus","version","date","timeframeColor","timeframe"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport { Button, Pane, Text, Badge, Pill } from 'evergreen-ui'\nimport CardControls from '../controllers/CardControls'\nimport Utils from '../controllers/Utils';\n\nexport default class Cards extends Component {\n\n    render() {\n        let item = this.props.cardData;\n\n        if (CardControls.cardNotInGroup(this.props.app, this.props.cardData, this.props.group)) return null;\n\n\n        var max = 1 + Math.floor(Math.random() * 20);\n        var bottom = [];\n        for (var i = 1; i <= max; i++) {\n            bottom.push(<div>ddd</div>);\n        }\n\n        return (<Pane\n            elevation={3}\n            width={this.props.width}\n            background=\"#FFF\"\n            borderRadius={15}\n            className=\"Card\"\n            onClick={CardControls.onClickCard.bind(this.props.app, this.props.cardData)}\n        >\n            {this.label(this.props.cardData)}\n            <Text className=\"CardHeading\"><img alt=\"\" src={'./img/' + item.type + '.png'} />{this.heading(item)}</Text>\n\n            {this.cardPreview(this.props.app, this.props.cardData.preview)}\n        </Pane>)\n    }\n\n    heading(item) {\n        let object = CardControls.buildHeading(item);\n        if (Utils.isEmpty(object.highlight)) return object.heading;\n        let frontandback = object.heading.split(object.highlight);\n        return <span className=\"cardHeadingNoHighlight\">{frontandback[0]}<span className=\"cardHeadingHighlight\">{object.highlight}</span>{frontandback[1]}</span>\n\n    }\n\n\n    label(card) {\n        if (!CardControls.hasLabel(this.props.app)) return null\n        let label = CardControls.getCardLabel(this.props.app, card);\n        if (Utils.isEmpty(label)) return null;\n        return <Badge color={label.color}>{label.label}</Badge>\n    }\n\n    cardPreview(app, previewData) {\n        if (Utils.isEmpty(previewData)) return null;\n        if (Utils.isEmpty(previewData.type)) return null;\n        if (previewData.type === \"tree\") return <div className=\"cardPreview\"><Tree app={app} data={previewData} /></div>\n        if (previewData.type === \"status\") return <div className=\"cardPreview\"><Status app={app} data={previewData} /></div>\n        return\n\n    }\n\n\n}\n\n\nclass Tree extends Component {\n\n    constructor() {\n        super();\n        this.state = { open: false }\n    }\n\n    render() {\n        let data = this.props.data;\n        if (!this.state.open) return <Button onClick={this.openTree.bind(this)}><Pill display=\"inline-flex\" margin={8}>{data.buttonNumber}</Pill> {data.buttonLabel}</Button>\n        return <div className=\"tree\">{data.tree.map(branch => this.branch(branch))}</div>\n    }\n\n    openTree(e) {\n        e.stopPropagation();\n        this.setState({ open: true });\n    }\n    branch(branch) {\n        return <div key={Utils.guid()} className=\"branch\"><img alt=\"\" src={'./img/' + branch.type + '.png'} />{branch.label}</div>\n    }\n\n}\n\nclass Status extends Component {\n\n    render() {\n        let data = this.props.data;\n        if(data===null) return null;\n        if(data.done===true) return this.pastStatus(data);\n        return this.futureStatus(data);\n    }\n\n    pastStatus(data)\n    {\n        return <div className=\"status\">\n            <Badge marginRight={10} isSolid>{data.label}</Badge><br/>\n            <Badge >v{data.version}</Badge><span>&nbsp;</span><Badge marginRight={10}>{data.date}</Badge>\n        </div>\n    }\n\n    futureStatus(data)\n    {\n        return <div className=\"status\">\n            <span>Working on it:</span> <Badge isSolid color={data.timeframeColor}>{data.timeframe}</Badge>\n        </div>\n    }\n\n}"]},"metadata":{},"sourceType":"module"}