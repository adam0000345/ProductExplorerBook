{"ast":null,"code":"var _jsxFileName = \"/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/src/components/Cards.js\";\nimport React, { Component } from 'react';\nimport { Pane, Combobox } from 'evergreen-ui';\nimport Card from './Card.js';\nimport CardControls from '../controllers/CardControls'; //import NavControls from '../controllers/NavControls'\n\nimport Utils from '../controllers/Utils';\nexport default class Cards extends Component {\n  render() {\n    let cards = CardControls.loadCards(this.props.app);\n    let heading = CardControls.loadCardsHeading(this.props.app, cards);\n    let groups = CardControls.loadCardGroups(this.props.app, cards);\n    let panelWidth = this.props.app.getUIState(\"width\") - 0;\n    let cardMinWidth = 300;\n    let columnCount = panelWidth / cardMinWidth;\n    let columnCountInt = parseInt(columnCount);\n    let ratio = 1 + (columnCount - columnCountInt) / columnCount;\n    let cardWidth = parseInt(cardMinWidth * ratio) - 25;\n    let groupCount = groups.length;\n    let Single = groupCount === 1 ? \" Single\" : \" Multi\";\n    let columns = groups.map((groupfield, i, a) => React.createElement(Pane, {\n      className: \"Column\" + Single,\n      width: 100 / a.length + \"%\",\n      key: Utils.guid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, a.length <= 1 ? null : React.createElement(Pane, {\n      className: \"Heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, groupfield, \" \"), React.createElement(Pane, {\n      background: \"#825eeb\",\n      className: \"Cards ColCount\" + columnCountInt,\n      paddingRight: \"2em\",\n      cursor: \"pointer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, cards.map(item => React.createElement(Card, {\n      width: cardWidth,\n      debug: ratio,\n      key: Utils.guid(),\n      group: groupfield,\n      cardData: item,\n      app: this.props.app,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })))));\n    return React.createElement(React.Fragment, null, React.createElement(Pane, {\n      padding: \".5em\",\n      background: \"#212242\",\n      color: \"#FFF\",\n      className: \"ThirdRow\",\n      borderTop: \"1px solid black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, heading.heading), React.createElement(\"table\", {\n      className: \"CardTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"toprow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Label\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Grouping\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Combobox, {\n      float: \"right\",\n      width: 150,\n      height: 20,\n      marginRight: \"1em\",\n      selectedItem: CardControls.currentCardLabel(this.props.app),\n      items: CardControls.loadCardLabels(this.props.app),\n      onChange: CardControls.labelCards.bind(this.props.app),\n      itemToString: item => item ? item.label : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Combobox, {\n      float: \"right\",\n      width: 150,\n      height: 20,\n      marginRight: \"1em\",\n      selectedItem: CardControls.currentCardGrouping(this.props.app),\n      items: CardControls.loadCardGroupings(this.props.app),\n      onChange: CardControls.groupCards.bind(this.props.app),\n      itemToString: item => item ? item.label : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))))))), columns);\n  }\n\n}","map":{"version":3,"sources":["/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/src/components/Cards.js"],"names":["React","Component","Pane","Combobox","Card","CardControls","Utils","Cards","render","cards","loadCards","props","app","heading","loadCardsHeading","groups","loadCardGroups","panelWidth","getUIState","cardMinWidth","columnCount","columnCountInt","parseInt","ratio","cardWidth","groupCount","length","Single","columns","map","groupfield","i","a","guid","item","currentCardLabel","loadCardLabels","labelCards","bind","label","currentCardGrouping","loadCardGroupings","groupCards"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport {  Pane, Combobox } from 'evergreen-ui'\nimport Card from './Card.js'\nimport CardControls from '../controllers/CardControls'\n//import NavControls from '../controllers/NavControls'\nimport Utils from '../controllers/Utils';\n\nexport default class Cards extends Component {\n\n\n    render() {\n        let cards = CardControls.loadCards(this.props.app);\n        let heading = CardControls.loadCardsHeading(this.props.app, cards)\n\n        let groups = CardControls.loadCardGroups(this.props.app,cards);\n\n        let panelWidth = this.props.app.getUIState(\"width\")-0;\n        let cardMinWidth = 300;\n        let columnCount = (panelWidth/(cardMinWidth));\n        let columnCountInt = parseInt(columnCount);\n        let ratio = 1+((columnCount-columnCountInt)/columnCount);\n        let cardWidth =parseInt(cardMinWidth*ratio)-25;\n\n        let groupCount = groups.length;\n        let Single = (groupCount===1) ? \" Single\" : \" Multi\";\n\n        let columns = groups.map((groupfield,i,a)=>(\n            <Pane className={\"Column\"+Single} width={(100/a.length)+\"%\"} key={Utils.guid()} >\n                {(a.length<=1) ? null : <Pane className=\"Heading\">{groupfield} </Pane>}\n                <Pane background=\"#825eeb\" className={\"Cards ColCount\"+columnCountInt}\n                    paddingRight=\"2em\"\n                    cursor=\"pointer\"\n                    >\n                    {cards.map(item => (<Card width={cardWidth}  debug={ratio} key={Utils.guid()} group={groupfield} cardData={item} app={this.props.app} />))}\n                </Pane>\n            </Pane>\n        ));\n\n\n        return (\n            <>\n                <Pane padding=\".5em\" background={\"#212242\"} color=\"#FFF\" className=\"ThirdRow\" borderTop=\"1px solid black\">\n                    \n                    <h4><span className=\"left\">{heading.heading}</span>\n                        <table className=\"CardTable\">\n                            <tbody>\n                                <tr className=\"toprow\"><td>Label</td><td>Grouping</td></tr>\n                                <tr><td><Combobox\n                                    float=\"right\"\n                                    width={150}\n                                    height={20}\n                                    marginRight=\"1em\"\n                                    selectedItem={CardControls.currentCardLabel(this.props.app)}\n                                    items={CardControls.loadCardLabels(this.props.app)}\n                                    onChange={CardControls.labelCards.bind(this.props.app)}\n                                    itemToString={item => item ? item.label : ''}\n                                /></td><td><Combobox\n                                    float=\"right\"\n                                    width={150}\n                                        height={20}\n                                    marginRight=\"1em\"\n                                    selectedItem={CardControls.currentCardGrouping(this.props.app)}\n                                    items={CardControls.loadCardGroupings(this.props.app)}\n                                    onChange={CardControls.groupCards.bind(this.props.app)}\n                                    itemToString={item => item ? item.label : ''}\n                                /></td></tr>\n                            </tbody>\n                        </table></h4>\n\n                    \n                </Pane>\n\n                {columns}</>)\n\n    }\n\n\n    \n\n}"]},"metadata":{},"sourceType":"module"}