{"ast":null,"code":"import Query from \"../models/Query\";\nimport Utils from \"./Utils\";\nimport config from '../config.json';\nexport default class SearchControls {}\n\nSearchControls.isOpen = function (app) {\n  let state = app.getUIState(\"search\");\n  return state.isOpen;\n};\n\nSearchControls.isClosed = function () {\n  this.setUIState(\"search\", {\n    isOpen: false\n  });\n};\n\nSearchControls.searchResults = function (app) {\n  let state = app.getUIState(\"search\");\n  let query = state.query;\n  if (Utils.isEmpty(query)) return null;\n  if (query.length < 3) return 1;\n  let results = this.loadAllItems(app);\n  return SearchControls.filterResults(app, results, query);\n};\n\nSearchControls.loadAllItems = function (app) {\n  let elements = config.elements;\n  let items = [];\n\n  for (let key in elements) {\n    let query = new Query({\n      app: app,\n      query: key\n    });\n    let fieldkey = config.elements[key].field;\n    if (config.elements[key].searchfield !== undefined) fieldkey = config.elements[key].searchfield;\n    let segment = query.objects.map(item => ({\n      \"value\": item.data.id,\n      \"label\": item.data[fieldkey],\n      type: key,\n      badge: config.elements[key].label,\n      color: config.elements[key].color\n    }));\n    items = items.concat(segment);\n  }\n\n  return items;\n};\n\nSearchControls.filterResults = function (app, results, query) {\n  let filtered = [];\n  let regex = new RegExp(query, 'ig');\n\n  for (let i in results) {\n    if (regex.test(results[i].label)) filtered.push(results[i]);\n  } // let search = app.getUIState(\"search\");\n\n\n  return filtered;\n};\n\nSearchControls.selectSearchResult = function (selection) {};\n\nSearchControls.onChange = function (event) {\n  this.setUIState(\"search\", {\n    isOpen: true,\n    query: event.target.value,\n    index: 0,\n    count: 0\n  });\n};\n\nSearchControls.onMoveDown = function (app) {\n  let search = app.getUIState(\"search\");\n  search.index++;\n  if (search.index > search.count - 1) search.index = 0;\n  app.setUIState(\"search\", search);\n};\n\nSearchControls.onMoveUp = function (app) {\n  let search = app.getUIState(\"search\");\n  search.index--;\n  if (search.index < 0) search.index = 0;\n  app.setUIState(\"search\", search);\n};\n\nSearchControls.onSelect = function (app) {\n  let search = app.getUIState(\"search\");\n  if (!search.isOpen) return false;\n  let selection = SearchControls.searchResults(app)[search.index];\n  let state = app.state;\n  state.state.ui.search = {\n    isOpen: false,\n    query: null,\n    index: null,\n    count: null\n  };\n  state.state.ui.infoBox = {\n    isOpen: true,\n    type: selection.type,\n    id: selection.value\n  };\n  app.setState(state);\n};","map":{"version":3,"sources":["/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/src/controllers/SearchControls.js"],"names":["Query","Utils","config","SearchControls","isOpen","app","state","getUIState","isClosed","setUIState","searchResults","query","isEmpty","length","results","loadAllItems","filterResults","elements","items","key","fieldkey","field","searchfield","undefined","segment","objects","map","item","data","id","type","badge","label","color","concat","filtered","regex","RegExp","i","test","push","selectSearchResult","selection","onChange","event","target","value","index","count","onMoveDown","search","onMoveUp","onSelect","ui","infoBox","setState"],"mappings":"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","sourcesContent":["import Query from \"../models/Query\";\nimport Utils from \"./Utils\";\nimport config from '../config.json';\nexport default class SearchControls {\n\n    static isOpen = function (app) {\n\n        let state = app.getUIState(\"search\");\n        return state.isOpen;\n    }\n\n    static isClosed = function () {\n\n        this.setUIState(\"search\", { isOpen: false })\n    }\n\n\n    static searchResults = function(app)\n    {\n        \n        let state = app.getUIState(\"search\");\n        let query = state.query;\n\n        if(Utils.isEmpty(query)) return null;\n        if(query.length<3) return 1;\n\n        let results = this.loadAllItems(app);\n        return SearchControls.filterResults(app,results,query);\n    }\n\n\n\n    static loadAllItems = function (app) {\n\n        let elements = config.elements;\n        let items = [];\n        for (let key in elements) {\n            let query = new Query({ app: app, query: key });\n            let fieldkey = config.elements[key].field;\n            if (config.elements[key].searchfield !== undefined) fieldkey = config.elements[key].searchfield;\n            let segment = query.objects.map(item => (\n                { \"value\": item.data.id, \"label\": item.data[fieldkey], type: key, badge: config.elements[key].label, color: config.elements[key].color }\n            ))\n            items = items.concat(segment);\n        }\n        return items;\n    }\n\n\n    static filterResults = function (app,results,query) {\n        let filtered = [];\n        let regex = new RegExp(query,'ig');\n        for(let i in results)\n        {\n            if (regex.test(results[i].label)) \n                filtered.push(results[i]);\n        }\n\n       // let search = app.getUIState(\"search\");\n        return filtered;\n    }\n\n    static selectSearchResult = function (selection) {\n\n\n    }\n\n    static onChange = function (event) {\n        this.setUIState(\"search\", { isOpen: true, query: event.target.value, index: 0, count: 0 });\n    }\n\n\n\n    static onMoveDown = function (app) {\n        let search = app.getUIState(\"search\");\n        search.index++;\n        if(search.index>(search.count-1)) search.index = 0;\n        app.setUIState(\"search\", search);\n    }\n\n\n    static onMoveUp = function (app) {\n        let search = app.getUIState(\"search\");\n        search.index--;\n        if(search.index<0) search.index = 0;\n        app.setUIState(\"search\", search);\n    }\n\n\n    static onSelect = function (app) {\n\n        let search = app.getUIState(\"search\");\n        if(!search.isOpen) return false;\n        let selection = SearchControls.searchResults(app)[search.index];\n\n        let state = app.state;\n\n        state.state.ui.search= {\n            isOpen: false,\n            query: null,\n            index: null,\n            count: null\n          };\n          state.state.ui.infoBox= {\n            isOpen: true,\n            type: selection.type,\n            id: selection.value\n          };\n\n          app.setState(state);\n\n    }\n\n\n\n}"]},"metadata":{},"sourceType":"module"}