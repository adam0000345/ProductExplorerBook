{"ast":null,"code":"import Utils from '../controllers/Utils';\nimport Theme from './Theme';\nimport Subtheme from './Subtheme';\nimport Story from './Story';\nimport Vertical from './Vertical';\nimport Objective from './Objective';\nimport PainPoint from './PainPoint';\nimport Feature from './Feature';\nimport config from '../config.json';\nexport default class Query {\n  constructor(parameters) {\n    let app = parameters.app,\n        query = parameters.query,\n        map = parameters.map,\n        limit = parameters.limit,\n        selector = parameters.selector;\n    this.app = app;\n    let filter = this.buildFilter(app, limit, selector);\n    let items = app.state.masterData[this.loadTableKey(query)];\n    let objects = this.queryItems(query, items, filter);\n    if (map === undefined) this.objects = objects;else this.objects = this.mapItems(map, objects, filter);\n  }\n\n  queryItems(type, items, filter) {\n    if (type === undefined) return [];\n    let filteredObjects = [];\n    items.forEach(item => {\n      let object = Query.createObject(type, item, this.app);\n      if (!object.filter(filter)) filteredObjects.push(object);\n    });\n    return filteredObjects;\n  }\n\n  mapItems(map, objects, filter) {\n    let all_mapped_ids = [];\n    objects.forEach(object => {\n      let mapped_ids = this.loadMappedIds(map, object);\n      all_mapped_ids = all_mapped_ids.concat(mapped_ids);\n    });\n    all_mapped_ids = Utils.dedupe(all_mapped_ids);\n    return this.loadObjectsFromIds(all_mapped_ids, map, filter);\n  }\n\n  loadTableKey(key) {\n    if (config.elements[key] === undefined) return null;\n    let tablekey = config.elements[key].table;\n    return tablekey;\n  }\n\n  buildFilter(app, limit, selector) //LIMIT is an array of fields to be chosen from the App filters\n  {\n    if (selector !== undefined) for (let i in selector) return [{\n      field: i,\n      criteria: [selector[i]],\n      type: \"whitelist\"\n    }];else if (limit === null) return null;\n    let appFilters = app.state.config.filters; //Process Whitelist\n\n    if (!Utils.isEmpty(limit)) {\n      if (!Array.isArray(limit)) limit = [];\n      let newFilters = [];\n\n      for (let i in appFilters) if (limit.indexOf(appFilters[i].field) >= 0) newFilters.push(appFilters[i]);\n\n      if (limit.length > 0) appFilters = newFilters;\n    }\n\n    if (Utils.isEmpty(selector)) {}\n\n    return appFilters;\n  }\n\n  loadObjectsFromIds(ids, type, filter) {\n    ids = Utils.dedupe(ids);\n    let objects = [];\n\n    for (let i in ids) {\n      let id = ids[i];\n      let item = this.app.getItemFromIndex(id);\n      let object = Query.createObject(type, item, this.app);\n      if (object === null) continue;\n      if (object.filter(filter)) continue;\n      objects.push(object);\n    }\n\n    return objects;\n  }\n\n  static createObject(type, item, app) {\n    if (type === \"theme\") return new Theme(item, app);\n    if (type === \"subtheme\") return new Subtheme(item, app);\n    if (type === \"story\") return new Story(item, app);\n    if (type === \"vertical\") return new Vertical(item, app);\n    if (type === \"objective\") return new Objective(item, app);\n    if (type === \"feature\") return new Feature(item, app);\n    if (type === \"painpoint\") return new PainPoint(item, app);\n    console.log(\"Failed to create object of type: \" + type);\n    return null;\n  }\n\n  filteredObjects() {\n    return this.objects;\n  }\n\n  static filter(filters, object) {\n    if (Utils.isEmpty(filters)) return false;\n    let results = filters.map(filter => {\n      if (!Array.isArray(filter.criteria)) return 0;\n      if (filter.criteria.length === 0) return 0;\n      let field = this.determineFieldToFilter(object.typekey, filter.field);\n      if (Utils.isEmpty(field)) return 0;\n      let candidates = object.data[field];\n      if (Utils.isEmpty(candidates)) return 1;\n      if (!Array.isArray(candidates)) candidates = [candidates];\n      let intersection = candidates.filter(value => filter.criteria.includes(value));\n      if (filter.type === \"whitelist\" && intersection.length === 0) return 1;\n      if (filter.type === \"blacklist\" && intersection.length > 0) return 1;\n      return 0;\n    });\n    let max = Math.max.apply(null, results);\n    if (max > 0) return true;\n    return false;\n  }\n\n  static determineFieldToFilter(type, key) {\n    if (key === \"id\") return key;\n    let element = config.elements[type];\n\n    if (!Utils.isEmpty(element.valueFields)) {\n      if (!Utils.isEmpty(element.valueFields[key])) return element.valueFields[key];\n    }\n\n    if (!Utils.isEmpty(element.idFields)) {\n      if (!Utils.isEmpty(element.idFields[key])) return element.idFields[key];\n    }\n\n    return null;\n  }\n\n  loadMappedIds(map, object) {\n    if (map === object.typekey) return [object.data.id];\n    let idFields = config.elements[object.typekey].idFields;\n    let key = idFields[map];\n    let ids = object.data[key];\n    if (ids === undefined) return [];\n    return ids;\n  }\n\n}","map":{"version":3,"sources":["/Users/adam.tothfejel/Desktop/LabelBoxFolder/BirdHouse/src/models/Query.js"],"names":["Utils","Theme","Subtheme","Story","Vertical","Objective","PainPoint","Feature","config","Query","constructor","parameters","app","query","map","limit","selector","filter","buildFilter","items","state","masterData","loadTableKey","objects","queryItems","undefined","mapItems","type","filteredObjects","forEach","item","object","createObject","push","all_mapped_ids","mapped_ids","loadMappedIds","concat","dedupe","loadObjectsFromIds","key","elements","tablekey","table","i","field","criteria","appFilters","filters","isEmpty","Array","isArray","newFilters","indexOf","length","ids","id","getItemFromIndex","console","log","results","determineFieldToFilter","typekey","candidates","data","intersection","value","includes","max","Math","apply","element","valueFields","idFields"],"mappings":"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","sourcesContent":["\nimport Utils from '../controllers/Utils';\nimport Theme from './Theme';\nimport Subtheme from './Subtheme';\nimport Story from './Story';\nimport Vertical from './Vertical';\nimport Objective from './Objective';\nimport PainPoint from './PainPoint';\nimport Feature from './Feature';\nimport config from '../config.json';\n\nexport default class Query {\n\n    constructor(parameters) {\n\n        let { app, query, map, limit, selector } = parameters;\n        this.app = app;\n        let filter = this.buildFilter(app, limit, selector);\n        let items = app.state.masterData[this.loadTableKey(query)];\n        let objects = this.queryItems(query, items, filter);\n        if (map === undefined)\n            this.objects = objects;\n        else\n            this.objects = this.mapItems(map, objects, filter);\n    }\n\n\n    queryItems(type, items, filter) {\n        if (type === undefined) return [];\n        let filteredObjects = [];\n        items.forEach(item => {\n            let object = Query.createObject(type, item, this.app);\n            if (!object.filter(filter)) filteredObjects.push(object)\n        });\n        return filteredObjects;\n    }\n\n\n    mapItems(map, objects, filter) {\n\n        let all_mapped_ids = [];\n        objects.forEach(object => {\n            let mapped_ids = this.loadMappedIds(map,object);\n            all_mapped_ids = all_mapped_ids.concat(mapped_ids)\n        });\n        all_mapped_ids = Utils.dedupe(all_mapped_ids);\n        return this.loadObjectsFromIds(all_mapped_ids, map, filter);\n\n    }\n\n    loadTableKey(key) {\n        if (config.elements[key] === undefined) return null;\n        let tablekey = config.elements[key].table;\n        return tablekey;\n    }\n\n\n    buildFilter(app, limit, selector)  //LIMIT is an array of fields to be chosen from the App filters\n    {\n        if (selector !== undefined)\n            for (let i in selector)\n                return [{ field: i, criteria: [selector[i]], type: \"whitelist\" }];\n        else if (limit === null) return null;\n        let appFilters = app.state.config.filters;\n        //Process Whitelist\n        if (!Utils.isEmpty(limit)) {\n            if (!Array.isArray(limit)) limit = [];\n            let newFilters = [];\n            for (let i in appFilters)\n                if (limit.indexOf(appFilters[i].field) >= 0) newFilters.push(appFilters[i]);\n            if (limit.length > 0) appFilters = newFilters;\n        }\n        if (Utils.isEmpty(selector)) {\n\n        }\n        return appFilters;\n    }\n\n\n    loadObjectsFromIds(ids, type, filter) {\n        ids = Utils.dedupe(ids);\n        let objects = [];\n        for (let i in ids) {\n            let id = ids[i];\n            let item = this.app.getItemFromIndex(id);\n            let object = Query.createObject(type, item, this.app);\n            if (object === null) continue;\n            if (object.filter(filter)) continue;\n            objects.push(object);\n        }\n        return objects;\n    }\n\n\n\n    static createObject(type, item, app) {\n\n        if (type === \"theme\") return new Theme(item, app);\n        if (type === \"subtheme\") return new Subtheme(item, app);\n        if (type === \"story\") return new Story(item, app);\n        if (type === \"vertical\") return new Vertical(item, app);\n        if (type === \"objective\") return new Objective(item, app);\n        if (type === \"feature\") return new Feature(item, app);\n        if (type === \"painpoint\") return new PainPoint(item, app);\n        console.log(\"Failed to create object of type: \" + type);\n        return null;\n    }\n\n    filteredObjects() {\n        return this.objects;\n    }\n\n\n    static filter(filters, object) {\n        if (Utils.isEmpty(filters)) return false;\n        let results = filters.map(filter => {\n            if (!Array.isArray(filter.criteria)) return 0;\n            if (filter.criteria.length===0) return 0;\n            let field = this.determineFieldToFilter(object.typekey, filter.field);\n            if (Utils.isEmpty(field)) return 0;\n            let candidates = object.data[field];\n            if (Utils.isEmpty(candidates)) return 1;\n            if (!Array.isArray(candidates)) candidates = [candidates];\n            let intersection = candidates.filter(value => filter.criteria.includes(value));\n            if (filter.type === \"whitelist\" && intersection.length === 0) return 1;\n            if (filter.type === \"blacklist\" && intersection.length > 0) return 1;\n            return 0;\n        });\n        let max = Math.max.apply(null, results)\n        if (max > 0) return true;\n        return false;\n    }\n\n    static determineFieldToFilter(type, key) {\n        if(key===\"id\") return key;\n        let element = config.elements[type];\n        if (!Utils.isEmpty(element.valueFields)) {\n            if (!Utils.isEmpty(element.valueFields[key]))\n                return element.valueFields[key];\n        }\n        if (!Utils.isEmpty(element.idFields)) {\n            if (!Utils.isEmpty(element.idFields[key]))\n                return element.idFields[key];\n        }\n        return null;\n    }\n\n    loadMappedIds(map, object) {\n        if (map === object.typekey) return [object.data.id];\n        let idFields = config.elements[object.typekey].idFields;\n        let key = idFields[map];\n        let ids = object.data[key];\n        if (ids === undefined) return [];\n        return ids;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}