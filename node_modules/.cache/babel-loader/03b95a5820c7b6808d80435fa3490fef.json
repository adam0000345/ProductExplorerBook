{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { PureComponent } from 'react';\nimport Box, { splitBoxProps } from 'ui-box';\nimport { Icon } from '../../icon';\nimport { TextInput } from '../../text-input';\nimport { withTheme } from '../../theme';\nimport { StackingOrder } from '../../constants';\n\nvar SearchInput =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(SearchInput, _PureComponent);\n\n  function SearchInput() {\n    _classCallCheck(this, SearchInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SearchInput).apply(this, arguments));\n  }\n\n  _createClass(SearchInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          appearance = _this$props.appearance,\n          disabled = _this$props.disabled,\n          height = _this$props.height,\n          props = _objectWithoutProperties(_this$props, [\"theme\", \"appearance\", \"disabled\", \"height\"]);\n\n      var _splitBoxProps = splitBoxProps(props),\n          matchedProps = _splitBoxProps.matchedProps,\n          remainingProps = _splitBoxProps.remainingProps;\n\n      var width = matchedProps.width;\n      var iconSize = theme.getIconSizeForInput(height);\n      return React.createElement(Box, _extends({\n        position: \"relative\",\n        display: \"inline-flex\",\n        height: height\n      }, matchedProps), React.createElement(Box, {\n        height: height,\n        width: height,\n        pointerEvents: \"none\",\n        position: \"absolute\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }, React.createElement(Icon, {\n        icon: \"search\",\n        color: \"default\",\n        zIndex: StackingOrder.FOCUSED + 1,\n        size: iconSize\n      })), React.createElement(TextInput, _extends({\n        height: height,\n        paddingLeft: height,\n        appearance: appearance,\n        disabled: disabled,\n        width: width,\n        type: \"search\"\n      }, remainingProps)));\n    }\n  }]);\n\n  return SearchInput;\n}(PureComponent);\n\nSearchInput.displayName = \"SearchInput\";\n\n_defineProperty(SearchInput, \"propTypes\", _objectSpread({}, TextInput.propTypes));\n\n_defineProperty(SearchInput, \"defaultProps\", {\n  height: 32,\n  appearance: 'default'\n});\n\nexport default withTheme(SearchInput);","map":{"version":3,"sources":["../../../src/search-input/src/SearchInput.js"],"names":["SearchInput","PureComponent","TextInput","propTypes","height","appearance","theme","disabled","props","matchedProps","remainingProps","splitBoxProps","width","iconSize","StackingOrder","withTheme"],"mappings":";;;;;;;;;AAAA,OAAA,KAAA,IAAA,aAAA,QAAA,OAAA;AACA,OAAA,GAAA,IAAA,aAAA,QAAA,QAAA;AACA,SAAA,IAAA,QAAA,YAAA;AACA,SAAA,SAAA,QAAA,kBAAA;AACA,SAAA,SAAA,QAAA,aAAA;AACA,SAAA,aAAA,QAAA,iBAAA;;IAEMA,W;;;;;;;;;;;;;6BAaK;AAAA,UAAA,WAAA,GACmD,KADnD,KAAA;AAAA,UACCM,KADD,GAAA,WAAA,CAAA,KAAA;AAAA,UACQD,UADR,GAAA,WAAA,CAAA,UAAA;AAAA,UACoBE,QADpB,GAAA,WAAA,CAAA,QAAA;AAAA,UAC8BH,MAD9B,GAAA,WAAA,CAAA,MAAA;AAAA,UACyCI,KADzC,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,UAAA,EAAA,QAAA,CAAA,CAAA;;AAAA,UAAA,cAAA,GAEkCG,aAAa,CAF/C,KAE+C,CAF/C;AAAA,UAECF,YAFD,GAAA,cAAA,CAAA,YAAA;AAAA,UAEeC,cAFf,GAAA,cAAA,CAAA,cAAA;;AAAA,UAGCE,KAHD,GAGWH,YAHX,CAAA,KAAA;AAIP,UAAMI,QAAQ,GAAGP,KAAK,CAALA,mBAAAA,CAAjB,MAAiBA,CAAjB;AAEA,aACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AACE,QAAA,QAAQ,EADV,UAAA;AAEE,QAAA,OAAO,EAFT,aAAA;AAGE,QAAA,MAAM,EAAEF;AAHV,OAAA,EAAA,YAAA,CAAA,EAME,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACE,QAAA,MAAM,EADR,MAAA;AAEE,QAAA,KAAK,EAFP,MAAA;AAGE,QAAA,aAAa,EAHf,MAAA;AAIE,QAAA,QAAQ,EAJV,UAAA;AAKE,QAAA,OAAO,EALT,MAAA;AAME,QAAA,cAAc,EANhB,QAAA;AAOE,QAAA,UAAU,EAAC;AAPb,OAAA,EASE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACE,QAAA,IAAI,EADN,QAAA;AAEE,QAAA,KAAK,EAFP,SAAA;AAGE,QAAA,MAAM,EAAEU,aAAa,CAAbA,OAAAA,GAHV,CAAA;AAIE,QAAA,IAAI,EAAED;AAJR,OAAA,CATF,CANF,EAsBE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA;AACE,QAAA,MAAM,EADR,MAAA;AAEE,QAAA,WAAW,EAFb,MAAA;AAGE,QAAA,UAAU,EAHZ,UAAA;AAIE,QAAA,QAAQ,EAJV,QAAA;AAKE,QAAA,KAAK,EALP,KAAA;AAME,QAAA,IAAI,EAAC;AANP,OAAA,EAvBJ,cAuBI,CAAA,CAtBF,CADF;AAkCD;;;;EArDuBZ,a;;AAApBD,W,YAAAA,G,aAAAA;;gBAAAA,W,iCAKCE,SAAS,CAACC,S;;gBALXH,W,kBAQkB;AACpBI,EAAAA,MAAM,EADc,EAAA;AAEpBC,EAAAA,UAAU,EAAE;AAFQ,C;;AAgDxB,eAAeU,SAAS,CAAxB,WAAwB,CAAxB","sourcesContent":["import React, { PureComponent } from 'react'\nimport Box, { splitBoxProps } from 'ui-box'\nimport { Icon } from '../../icon'\nimport { TextInput } from '../../text-input'\nimport { withTheme } from '../../theme'\nimport { StackingOrder } from '../../constants'\n\nclass SearchInput extends PureComponent {\n  static propTypes = {\n    /**\n     * Composes the TextInput component as the base.\n     */\n    ...TextInput.propTypes\n  }\n\n  static defaultProps = {\n    height: 32,\n    appearance: 'default'\n  }\n\n  render() {\n    const { theme, appearance, disabled, height, ...props } = this.props\n    const { matchedProps, remainingProps } = splitBoxProps(props)\n    const { width } = matchedProps\n    const iconSize = theme.getIconSizeForInput(height)\n\n    return (\n      <Box\n        position=\"relative\"\n        display=\"inline-flex\"\n        height={height}\n        {...matchedProps}\n      >\n        <Box\n          height={height}\n          width={height}\n          pointerEvents=\"none\"\n          position=\"absolute\"\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Icon\n            icon=\"search\"\n            color=\"default\"\n            zIndex={StackingOrder.FOCUSED + 1}\n            size={iconSize}\n          />\n        </Box>\n        <TextInput\n          height={height}\n          paddingLeft={height}\n          appearance={appearance}\n          disabled={disabled}\n          width={width}\n          type=\"search\"\n          {...remainingProps}\n        />\n      </Box>\n    )\n  }\n}\n\nexport default withTheme(SearchInput)\n"]},"metadata":{},"sourceType":"module"}